INFO  16:34:01,273 - Compiling source file: D:\faks\milos\4 god 1 sem\pp1\projekat\projekateclipse\MJCompiler\program.mj
INFO  16:34:01,364 - #2 program
INFO  16:34:01,364 - #44 P
INFO  16:34:01,364 - #24 const
INFO  16:34:01,366 - #44 int
INFO  16:34:01,366 - #44 size
INFO  16:34:01,367 - #12 =
INFO  16:34:01,367 - #43 10
INFO  16:34:01,367 - #5 ;
INFO  16:34:01,367 - #21 enum
INFO  16:34:01,368 - #44 Num
INFO  16:34:01,368 - #3 {
INFO  16:34:01,368 - #44 ZERO
INFO  16:34:01,368 - #8 ,
INFO  16:34:01,368 - #44 ONE
INFO  16:34:01,368 - #8 ,
INFO  16:34:01,369 - #44 TEN
INFO  16:34:01,369 - #12 =
INFO  16:34:01,369 - #43 10
INFO  16:34:01,369 - #4 }
INFO  16:34:01,369 - #44 int
INFO  16:34:01,370 - #44 xd
INFO  16:34:01,372 - #8 ,
INFO  16:34:01,373 - #43 3
ERROR 16:34:01,374 - 
Sintaksna greska na liniji 5
INFO  16:34:01,374 - #44 y
INFO  16:34:01,374 - #5 ;
INFO  16:34:01,374 - #23 interface
INFO  16:34:01,375 - #44 I
INFO  16:34:01,375 - #3 {
ERROR 16:34:01,375 - Uspesan oporavak od greske pri definisanju globalnih promenljivih, line : 5
INFO  16:34:01,376 - #44 int
INFO  16:34:01,377 - #44 getp
INFO  16:34:01,377 - #6 (
INFO  16:34:01,377 - #44 int
INFO  16:34:01,377 - #44 i
INFO  16:34:01,377 - #7 )
INFO  16:34:01,378 - #5 ;
INFO  16:34:01,378 - #44 int
INFO  16:34:01,378 - #44 getn
INFO  16:34:01,378 - #6 (
INFO  16:34:01,378 - #44 int
INFO  16:34:01,378 - #44 i
INFO  16:34:01,379 - #7 )
INFO  16:34:01,379 - #5 ;
INFO  16:34:01,379 - #4 }
INFO  16:34:01,379 - #22 class
INFO  16:34:01,379 - #44 Table
INFO  16:34:01,379 - #20 implements
INFO  16:34:01,380 - #44 I
INFO  16:34:01,380 - #3 {
INFO  16:34:01,380 - #44 int
INFO  16:34:01,381 - #44 pos
INFO  16:34:01,381 - #37 [
INFO  16:34:01,381 - #38 ]
INFO  16:34:01,381 - #8 ,
INFO  16:34:01,382 - #44 neg
INFO  16:34:01,382 - #37 [
INFO  16:34:01,382 - #38 ]
INFO  16:34:01,382 - #5 ;
INFO  16:34:01,387 - #3 {
INFO  16:34:01,387 - #13 void
INFO  16:34:01,388 - #44 putp
INFO  16:34:01,388 - #6 (
INFO  16:34:01,388 - #44 int
INFO  16:34:01,388 - #44 a
INFO  16:34:01,388 - #8 ,
INFO  16:34:01,388 - #44 int
INFO  16:34:01,388 - #44 idx
INFO  16:34:01,389 - #7 )
INFO  16:34:01,389 - #3 {
INFO  16:34:01,389 - #44 this
INFO  16:34:01,389 - #47 .
INFO  16:34:01,390 - #44 pos
INFO  16:34:01,390 - #37 [
INFO  16:34:01,391 - #44 idx
INFO  16:34:01,392 - #38 ]
INFO  16:34:01,394 - #12 =
INFO  16:34:01,394 - #44 a
INFO  16:34:01,394 - #5 ;
INFO  16:34:01,394 - #4 }
INFO  16:34:01,394 - #13 void
INFO  16:34:01,395 - #44 putn
INFO  16:34:01,395 - #6 (
INFO  16:34:01,395 - #44 int
INFO  16:34:01,395 - #44 a
INFO  16:34:01,395 - #8 ,
INFO  16:34:01,395 - #44 int
INFO  16:34:01,395 - #44 idx
INFO  16:34:01,395 - #7 )
INFO  16:34:01,396 - #3 {
INFO  16:34:01,396 - #44 this
INFO  16:34:01,396 - #47 .
INFO  16:34:01,396 - #44 neg
INFO  16:34:01,396 - #37 [
INFO  16:34:01,396 - #44 idx
INFO  16:34:01,396 - #38 ]
INFO  16:34:01,396 - #12 =
INFO  16:34:01,396 - #44 a
INFO  16:34:01,396 - #5 ;
INFO  16:34:01,396 - #4 }
INFO  16:34:01,396 - #44 int
INFO  16:34:01,396 - #44 getp
INFO  16:34:01,397 - #6 (
INFO  16:34:01,397 - #44 int
INFO  16:34:01,397 - #44 idx
INFO  16:34:01,397 - #7 )
INFO  16:34:01,397 - #3 {
INFO  16:34:01,397 - #10 return
INFO  16:34:01,397 - #44 pos
INFO  16:34:01,397 - #37 [
INFO  16:34:01,397 - #44 idx
INFO  16:34:01,397 - #38 ]
INFO  16:34:01,397 - #5 ;
INFO  16:34:01,397 - #4 }
INFO  16:34:01,398 - #44 int
INFO  16:34:01,398 - #44 getn
INFO  16:34:01,398 - #6 (
INFO  16:34:01,398 - #44 int
INFO  16:34:01,398 - #44 idx
INFO  16:34:01,398 - #7 )
INFO  16:34:01,398 - #3 {
INFO  16:34:01,398 - #10 return
INFO  16:34:01,398 - #44 neg
INFO  16:34:01,398 - #37 [
INFO  16:34:01,398 - #44 idx
INFO  16:34:01,399 - #38 ]
INFO  16:34:01,399 - #5 ;
INFO  16:34:01,399 - #4 }
INFO  16:34:01,399 - #4 }
INFO  16:34:01,399 - #4 }
INFO  16:34:01,399 - #44 Table
INFO  16:34:01,400 - #44 val
INFO  16:34:01,400 - #5 ;
INFO  16:34:01,400 - #3 {
INFO  16:34:01,400 - #13 void
INFO  16:34:01,400 - #44 f
INFO  16:34:01,400 - #6 (
INFO  16:34:01,401 - #44 char
INFO  16:34:01,401 - #44 ch
INFO  16:34:01,401 - #8 ,
INFO  16:34:01,401 - #44 int
INFO  16:34:01,401 - #43 3
ERROR 16:34:01,401 - 
Sintaksna greska na liniji 23
INFO  16:34:01,401 - #44 a
INFO  16:34:01,401 - #8 ,
INFO  16:34:01,401 - #44 int
INFO  16:34:01,401 - #44 arg
INFO  16:34:01,402 - #7 )
ERROR 16:34:01,402 - Uspesan oporavak od greske pri deklaracija formalnih parametara funkcije, line : 23
INFO  16:34:01,403 - #44 int
INFO  16:34:01,403 - #44 x
INFO  16:34:01,403 - #5 ;
INFO  16:34:01,403 - #3 {
INFO  16:34:01,403 - #44 x
INFO  16:34:01,403 - #12 =
INFO  16:34:01,404 - #44 arg
INFO  16:34:01,404 - #11 +
INFO  16:34:01,404 - #5 ;
ERROR 16:34:01,404 - 
Sintaksna greska na liniji 26
INFO  16:34:01,404 - #4 }
INFO  16:34:01,404 - #13 void
INFO  16:34:01,404 - #44 main
ERROR 16:34:01,404 - Uspesan oporavak od greske pri dodeli vrednost, line : 2
INFO  16:34:01,405 - #6 (
INFO  16:34:01,405 - #7 )
INFO  16:34:01,406 - #44 int
INFO  16:34:01,406 - #44 x
INFO  16:34:01,406 - #8 ,
INFO  16:34:01,406 - #44 i
INFO  16:34:01,406 - #5 ;
INFO  16:34:01,406 - #44 char
INFO  16:34:01,406 - #44 c
INFO  16:34:01,406 - #5 ;
INFO  16:34:01,406 - #3 {
INFO  16:34:01,407 - #44 val
INFO  16:34:01,407 - #12 =
INFO  16:34:01,407 - #19 new
INFO  16:34:01,407 - #44 Table
INFO  16:34:01,407 - #5 ;
INFO  16:34:01,408 - #44 val
INFO  16:34:01,408 - #47 .
INFO  16:34:01,408 - #44 pos
INFO  16:34:01,408 - #12 =
INFO  16:34:01,408 - #19 new
INFO  16:34:01,408 - #44 int
INFO  16:34:01,408 - #37 [
INFO  16:34:01,408 - #44 size
INFO  16:34:01,408 - #38 ]
INFO  16:34:01,408 - #5 ;
INFO  16:34:01,408 - #44 val
INFO  16:34:01,409 - #47 .
INFO  16:34:01,409 - #44 neg
INFO  16:34:01,409 - #12 =
INFO  16:34:01,409 - #19 new
INFO  16:34:01,409 - #44 int
INFO  16:34:01,409 - #37 [
INFO  16:34:01,409 - #44 size
INFO  16:34:01,409 - #38 ]
INFO  16:34:01,409 - #5 ;
INFO  16:34:01,409 - #16 for
INFO  16:34:01,409 - #6 (
INFO  16:34:01,409 - #44 i
INFO  16:34:01,409 - #12 =
INFO  16:34:01,409 - #43 0
INFO  16:34:01,409 - #5 ;
INFO  16:34:01,410 - #44 i
INFO  16:34:01,410 - #31 <
INFO  16:34:01,410 - #44 size
INFO  16:34:01,411 - #5 ;
INFO  16:34:01,413 - #44 i
INFO  16:34:01,413 - #35 ++
INFO  16:34:01,413 - #7 )
INFO  16:34:01,413 - #3 {
INFO  16:34:01,413 - #44 val
INFO  16:34:01,413 - #47 .
INFO  16:34:01,413 - #44 putp
INFO  16:34:01,413 - #6 (
INFO  16:34:01,413 - #43 0
INFO  16:34:01,413 - #8 ,
INFO  16:34:01,414 - #44 i
INFO  16:34:01,414 - #7 )
INFO  16:34:01,414 - #5 ;
INFO  16:34:01,414 - #44 val
INFO  16:34:01,414 - #47 .
INFO  16:34:01,414 - #44 putn
INFO  16:34:01,414 - #6 (
INFO  16:34:01,415 - #43 0
INFO  16:34:01,415 - #8 ,
INFO  16:34:01,415 - #44 i
INFO  16:34:01,415 - #7 )
INFO  16:34:01,415 - #5 ;
INFO  16:34:01,415 - #4 }
INFO  16:34:01,415 - #44 f
INFO  16:34:01,415 - #6 (
INFO  16:34:01,415 - #44 c
INFO  16:34:01,415 - #8 ,
INFO  16:34:01,415 - #44 x
INFO  16:34:01,415 - #8 ,
INFO  16:34:01,416 - #44 i
INFO  16:34:01,416 - #7 )
INFO  16:34:01,416 - #5 ;
INFO  16:34:01,416 - #14 read
INFO  16:34:01,416 - #6 (
INFO  16:34:01,416 - #44 x
INFO  16:34:01,416 - #7 )
INFO  16:34:01,416 - #5 ;
INFO  16:34:01,416 - #16 for
INFO  16:34:01,417 - #6 (
INFO  16:34:01,417 - #5 ;
INFO  16:34:01,418 - #44 x
INFO  16:34:01,418 - #29 >
INFO  16:34:01,418 - #43 0
INFO  16:34:01,419 - #5 ;
INFO  16:34:01,419 - #7 )
INFO  16:34:01,419 - #3 {
INFO  16:34:01,419 - #45 if
INFO  16:34:01,419 - #6 (
INFO  16:34:01,420 - #44 Num
INFO  16:34:01,420 - #47 .
INFO  16:34:01,420 - #44 ZERO
INFO  16:34:01,420 - #32 <=
INFO  16:34:01,420 - #44 x
INFO  16:34:01,421 - #33 &&
INFO  16:34:01,421 - #44 x
INFO  16:34:01,421 - #31 <
INFO  16:34:01,421 - #44 size
INFO  16:34:01,422 - #7 )
INFO  16:34:01,422 - #3 {
INFO  16:34:01,422 - #44 val
INFO  16:34:01,423 - #47 .
INFO  16:34:01,423 - #44 putp
INFO  16:34:01,423 - #6 (
INFO  16:34:01,423 - #44 val
INFO  16:34:01,423 - #47 .
INFO  16:34:01,423 - #44 getp
INFO  16:34:01,423 - #6 (
INFO  16:34:01,423 - #44 x
INFO  16:34:01,423 - #7 )
INFO  16:34:01,423 - #11 +
INFO  16:34:01,423 - #44 Num
INFO  16:34:01,424 - #47 .
INFO  16:34:01,424 - #44 ONE
INFO  16:34:01,424 - #7 )
INFO  16:34:01,425 - #5 ;
INFO  16:34:01,425 - #4 }
INFO  16:34:01,425 - #46 else
INFO  16:34:01,425 - #45 if
INFO  16:34:01,425 - #6 (
INFO  16:34:01,425 - #25 -
INFO  16:34:01,425 - #44 size
INFO  16:34:01,426 - #31 <
INFO  16:34:01,426 - #44 x
INFO  16:34:01,426 - #33 &&
INFO  16:34:01,426 - #44 x
INFO  16:34:01,426 - #31 <
INFO  16:34:01,426 - #43 0
INFO  16:34:01,426 - #7 )
INFO  16:34:01,426 - #3 {
INFO  16:34:01,427 - #44 val
INFO  16:34:01,427 - #47 .
INFO  16:34:01,427 - #44 putn
INFO  16:34:01,427 - #6 (
INFO  16:34:01,427 - #44 val
INFO  16:34:01,427 - #47 .
INFO  16:34:01,427 - #44 getn
INFO  16:34:01,427 - #6 (
INFO  16:34:01,427 - #25 -
INFO  16:34:01,427 - #44 x
INFO  16:34:01,427 - #7 )
INFO  16:34:01,427 - #11 +
INFO  16:34:01,427 - #43 1
INFO  16:34:01,427 - #7 )
INFO  16:34:01,427 - #5 ;
INFO  16:34:01,427 - #4 }
INFO  16:34:01,427 - #14 read
INFO  16:34:01,427 - #6 (
INFO  16:34:01,427 - #44 x
INFO  16:34:01,427 - #7 )
INFO  16:34:01,427 - #5 ;
INFO  16:34:01,427 - #4 }
INFO  16:34:01,428 - #4 }
INFO  16:34:01,428 - #4 }
