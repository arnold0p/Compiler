INFO  00:10:07,528 - Compiling source file: D:\faks\milos\4 god 1 sem\pp1\projekat\projekateclipse\MJCompiler\program.mj
INFO  00:10:07,637 - #2 program
INFO  00:10:07,638 - #44 P
INFO  00:10:07,639 - #24 const
INFO  00:10:07,642 - #44 int
INFO  00:10:07,643 - #44 size
INFO  00:10:07,644 - #12 =
INFO  00:10:07,644 - #43 10
INFO  00:10:07,644 - #5 ;
INFO  00:10:07,645 - #21 enum
INFO  00:10:07,646 - #44 Num
INFO  00:10:07,646 - #3 {
INFO  00:10:07,646 - #44 ZERO
INFO  00:10:07,646 - #8 ,
INFO  00:10:07,647 - #44 ONE
INFO  00:10:07,647 - #8 ,
INFO  00:10:07,647 - #44 TEN
INFO  00:10:07,647 - #12 =
INFO  00:10:07,647 - #43 10
INFO  00:10:07,647 - #4 }
INFO  00:10:07,648 - #44 int
INFO  00:10:07,649 - #44 xd
INFO  00:10:07,649 - #8 ,
INFO  00:10:07,650 - #43 6
ERROR 00:10:07,650 - 
Sintaksna greska na liniji 5
INFO  00:10:07,650 - #44 y
INFO  00:10:07,650 - #5 ;
INFO  00:10:07,650 - #23 interface
INFO  00:10:07,651 - #44 I
INFO  00:10:07,651 - #3 {
ERROR 00:10:07,651 - Uspesan oporavak od greske pri definisanju globalnih promenljivih, line : 5
INFO  00:10:07,652 - #44 int
INFO  00:10:07,653 - #44 getp
INFO  00:10:07,653 - #6 (
INFO  00:10:07,654 - #44 int
INFO  00:10:07,654 - #44 i
INFO  00:10:07,654 - #7 )
INFO  00:10:07,654 - #5 ;
INFO  00:10:07,654 - #44 int
INFO  00:10:07,656 - #44 getn
INFO  00:10:07,656 - #6 (
INFO  00:10:07,656 - #44 int
INFO  00:10:07,656 - #44 i
INFO  00:10:07,656 - #7 )
INFO  00:10:07,656 - #5 ;
INFO  00:10:07,656 - #4 }
INFO  00:10:07,656 - #22 class
INFO  00:10:07,657 - #44 Table
INFO  00:10:07,658 - #44 exteds
ERROR 00:10:07,658 - 
Sintaksna greska na liniji 11
INFO  00:10:07,658 - #44 d
INFO  00:10:07,658 - #20 implements
INFO  00:10:07,658 - #44 I
INFO  00:10:07,658 - #3 {
INFO  00:10:07,659 - #44 int
ERROR 00:10:07,659 - Uspesan oporavak od greske pri deklaraciji prosirenja klase, line : 11
INFO  00:10:07,661 - #44 pos
INFO  00:10:07,662 - #37 [
INFO  00:10:07,662 - #38 ]
INFO  00:10:07,662 - #8 ,
INFO  00:10:07,666 - #44 neg
INFO  00:10:07,666 - #37 [
INFO  00:10:07,666 - #38 ]
INFO  00:10:07,666 - #5 ;
INFO  00:10:07,667 - #44 int
INFO  00:10:07,667 - #44 x
INFO  00:10:07,667 - #8 ,
INFO  00:10:07,667 - #44 dsadsa
INFO  00:10:07,667 - #5 ;
INFO  00:10:07,667 - #3 {
INFO  00:10:07,667 - #13 void
INFO  00:10:07,668 - #44 putp
INFO  00:10:07,668 - #6 (
INFO  00:10:07,668 - #44 int
INFO  00:10:07,668 - #44 a
INFO  00:10:07,668 - #8 ,
INFO  00:10:07,668 - #44 int
INFO  00:10:07,668 - #44 idx
INFO  00:10:07,668 - #7 )
INFO  00:10:07,668 - #3 {
INFO  00:10:07,669 - #44 this
INFO  00:10:07,670 - #47 .
INFO  00:10:07,671 - #44 pos
INFO  00:10:07,671 - #37 [
INFO  00:10:07,671 - #44 idx
INFO  00:10:07,671 - #38 ]
INFO  00:10:07,674 - #12 =
INFO  00:10:07,675 - #44 a
INFO  00:10:07,675 - #5 ;
INFO  00:10:07,675 - #4 }
INFO  00:10:07,675 - #13 void
INFO  00:10:07,677 - #44 putn
INFO  00:10:07,677 - #6 (
INFO  00:10:07,677 - #44 int
INFO  00:10:07,677 - #44 a
INFO  00:10:07,677 - #8 ,
INFO  00:10:07,677 - #44 int
INFO  00:10:07,677 - #44 idx
INFO  00:10:07,677 - #7 )
INFO  00:10:07,677 - #3 {
INFO  00:10:07,677 - #44 this
INFO  00:10:07,677 - #47 .
INFO  00:10:07,678 - #44 neg
INFO  00:10:07,678 - #37 [
INFO  00:10:07,678 - #44 idx
INFO  00:10:07,678 - #38 ]
INFO  00:10:07,678 - #12 =
INFO  00:10:07,678 - #44 a
INFO  00:10:07,678 - #5 ;
INFO  00:10:07,678 - #4 }
INFO  00:10:07,678 - #44 int
INFO  00:10:07,679 - #44 getp
INFO  00:10:07,679 - #6 (
INFO  00:10:07,679 - #44 int
INFO  00:10:07,679 - #44 idx
INFO  00:10:07,679 - #7 )
INFO  00:10:07,679 - #3 {
INFO  00:10:07,679 - #10 return
INFO  00:10:07,679 - #44 pos
INFO  00:10:07,679 - #37 [
INFO  00:10:07,679 - #44 idx
INFO  00:10:07,679 - #38 ]
INFO  00:10:07,679 - #5 ;
INFO  00:10:07,679 - #4 }
INFO  00:10:07,679 - #44 int
INFO  00:10:07,680 - #44 getn
INFO  00:10:07,680 - #6 (
INFO  00:10:07,681 - #44 int
INFO  00:10:07,681 - #44 idx
INFO  00:10:07,681 - #7 )
INFO  00:10:07,681 - #3 {
INFO  00:10:07,681 - #10 return
INFO  00:10:07,681 - #44 neg
INFO  00:10:07,682 - #37 [
INFO  00:10:07,682 - #44 idx
INFO  00:10:07,682 - #38 ]
INFO  00:10:07,682 - #5 ;
INFO  00:10:07,682 - #4 }
INFO  00:10:07,682 - #4 }
INFO  00:10:07,682 - #4 }
INFO  00:10:07,682 - #44 Table
INFO  00:10:07,684 - #44 val
INFO  00:10:07,684 - #5 ;
INFO  00:10:07,684 - #3 {
INFO  00:10:07,684 - #13 void
INFO  00:10:07,684 - #44 f
INFO  00:10:07,684 - #6 (
INFO  00:10:07,684 - #44 char
INFO  00:10:07,684 - #44 ch
INFO  00:10:07,684 - #8 ,
INFO  00:10:07,684 - #44 int
INFO  00:10:07,684 - #44 a
INFO  00:10:07,684 - #8 ,
INFO  00:10:07,684 - #44 int
INFO  00:10:07,684 - #44 arg
INFO  00:10:07,684 - #7 )
INFO  00:10:07,684 - #44 int
INFO  00:10:07,685 - #44 x
INFO  00:10:07,685 - #5 ;
INFO  00:10:07,685 - #3 {
INFO  00:10:07,685 - #44 x
INFO  00:10:07,685 - #12 =
INFO  00:10:07,685 - #44 arg
INFO  00:10:07,685 - #5 ;
INFO  00:10:07,685 - #4 }
INFO  00:10:07,685 - #13 void
INFO  00:10:07,685 - #44 main
INFO  00:10:07,685 - #6 (
INFO  00:10:07,686 - #7 )
INFO  00:10:07,686 - #44 int
INFO  00:10:07,686 - #44 x
INFO  00:10:07,687 - #8 ,
INFO  00:10:07,687 - #44 i
INFO  00:10:07,687 - #5 ;
INFO  00:10:07,687 - #44 char
INFO  00:10:07,687 - #44 c
INFO  00:10:07,687 - #5 ;
INFO  00:10:07,687 - #3 {
INFO  00:10:07,687 - #44 val
INFO  00:10:07,687 - #12 =
INFO  00:10:07,687 - #19 new
INFO  00:10:07,687 - #44 Table
INFO  00:10:07,687 - #5 ;
INFO  00:10:07,688 - #44 val
INFO  00:10:07,688 - #47 .
INFO  00:10:07,688 - #44 pos
INFO  00:10:07,688 - #12 =
INFO  00:10:07,688 - #19 new
INFO  00:10:07,688 - #44 int
INFO  00:10:07,689 - #37 [
INFO  00:10:07,689 - #44 size
INFO  00:10:07,689 - #38 ]
INFO  00:10:07,689 - #5 ;
INFO  00:10:07,689 - #44 val
INFO  00:10:07,689 - #47 .
INFO  00:10:07,689 - #44 neg
INFO  00:10:07,689 - #12 =
INFO  00:10:07,689 - #19 new
INFO  00:10:07,690 - #44 int
INFO  00:10:07,690 - #37 [
INFO  00:10:07,690 - #44 size
INFO  00:10:07,690 - #38 ]
INFO  00:10:07,690 - #5 ;
INFO  00:10:07,690 - #16 for
INFO  00:10:07,690 - #6 (
INFO  00:10:07,690 - #44 i
INFO  00:10:07,690 - #12 =
INFO  00:10:07,690 - #43 0
INFO  00:10:07,690 - #5 ;
INFO  00:10:07,691 - #44 i
INFO  00:10:07,691 - #31 <
INFO  00:10:07,692 - #44 size
INFO  00:10:07,693 - #5 ;
INFO  00:10:07,696 - #44 i
INFO  00:10:07,696 - #35 ++
INFO  00:10:07,697 - #7 )
INFO  00:10:07,697 - #3 {
INFO  00:10:07,697 - #44 val
INFO  00:10:07,697 - #47 .
INFO  00:10:07,697 - #44 putp
INFO  00:10:07,697 - #6 (
INFO  00:10:07,697 - #43 0
INFO  00:10:07,697 - #8 ,
INFO  00:10:07,698 - #44 i
INFO  00:10:07,698 - #7 )
INFO  00:10:07,700 - #5 ;
INFO  00:10:07,700 - #44 val
INFO  00:10:07,700 - #47 .
INFO  00:10:07,700 - #44 putn
INFO  00:10:07,701 - #6 (
INFO  00:10:07,701 - #43 0
INFO  00:10:07,701 - #8 ,
INFO  00:10:07,701 - #44 i
INFO  00:10:07,701 - #7 )
INFO  00:10:07,701 - #5 ;
INFO  00:10:07,701 - #4 }
INFO  00:10:07,701 - #44 f
INFO  00:10:07,703 - #6 (
INFO  00:10:07,703 - #44 c
INFO  00:10:07,703 - #8 ,
INFO  00:10:07,703 - #44 x
INFO  00:10:07,703 - #8 ,
INFO  00:10:07,704 - #44 i
INFO  00:10:07,704 - #7 )
INFO  00:10:07,705 - #5 ;
INFO  00:10:07,705 - #14 read
INFO  00:10:07,706 - #6 (
INFO  00:10:07,706 - #44 x
INFO  00:10:07,706 - #7 )
INFO  00:10:07,706 - #5 ;
INFO  00:10:07,706 - #16 for
INFO  00:10:07,706 - #6 (
INFO  00:10:07,706 - #5 ;
INFO  00:10:07,707 - #44 x
INFO  00:10:07,707 - #29 >
INFO  00:10:07,707 - #43 0
INFO  00:10:07,708 - #5 ;
INFO  00:10:07,708 - #7 )
INFO  00:10:07,708 - #3 {
INFO  00:10:07,708 - #45 if
INFO  00:10:07,708 - #6 (
INFO  00:10:07,708 - #44 Num
INFO  00:10:07,708 - #47 .
INFO  00:10:07,708 - #44 ZERO
INFO  00:10:07,709 - #32 <=
INFO  00:10:07,709 - #44 x
INFO  00:10:07,709 - #33 &&
INFO  00:10:07,710 - #44 x
INFO  00:10:07,710 - #31 <
INFO  00:10:07,710 - #44 size
INFO  00:10:07,710 - #7 )
INFO  00:10:07,710 - #3 {
INFO  00:10:07,711 - #44 val
INFO  00:10:07,711 - #47 .
INFO  00:10:07,711 - #44 putp
INFO  00:10:07,711 - #6 (
INFO  00:10:07,711 - #44 val
INFO  00:10:07,711 - #47 .
INFO  00:10:07,711 - #44 getp
INFO  00:10:07,711 - #6 (
INFO  00:10:07,711 - #44 x
INFO  00:10:07,711 - #7 )
INFO  00:10:07,712 - #11 +
INFO  00:10:07,712 - #44 Num
INFO  00:10:07,713 - #47 .
INFO  00:10:07,714 - #44 ONE
INFO  00:10:07,714 - #7 )
INFO  00:10:07,714 - #5 ;
INFO  00:10:07,714 - #4 }
INFO  00:10:07,714 - #46 else
INFO  00:10:07,714 - #45 if
INFO  00:10:07,714 - #6 (
INFO  00:10:07,714 - #25 -
INFO  00:10:07,715 - #44 size
INFO  00:10:07,715 - #31 <
INFO  00:10:07,715 - #44 x
INFO  00:10:07,715 - #33 &&
INFO  00:10:07,715 - #44 x
INFO  00:10:07,715 - #31 <
INFO  00:10:07,715 - #43 0
INFO  00:10:07,715 - #7 )
INFO  00:10:07,715 - #3 {
INFO  00:10:07,715 - #44 val
INFO  00:10:07,715 - #47 .
INFO  00:10:07,715 - #44 putn
INFO  00:10:07,715 - #6 (
INFO  00:10:07,716 - #44 val
INFO  00:10:07,716 - #47 .
INFO  00:10:07,716 - #44 getn
INFO  00:10:07,716 - #6 (
INFO  00:10:07,716 - #25 -
INFO  00:10:07,716 - #44 x
INFO  00:10:07,716 - #7 )
INFO  00:10:07,716 - #11 +
INFO  00:10:07,716 - #43 1
INFO  00:10:07,716 - #7 )
INFO  00:10:07,716 - #5 ;
INFO  00:10:07,716 - #4 }
INFO  00:10:07,716 - #14 read
INFO  00:10:07,717 - #6 (
INFO  00:10:07,717 - #44 x
INFO  00:10:07,717 - #7 )
INFO  00:10:07,717 - #5 ;
INFO  00:10:07,717 - #4 }
INFO  00:10:07,717 - #4 }
INFO  00:10:07,717 - #4 }
INFO  00:10:07,718 - =================================================================================
