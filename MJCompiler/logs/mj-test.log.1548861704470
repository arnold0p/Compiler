INFO  16:19:16,746 - Compiling source file: D:\faks\milos\4 god 1 sem\pp1\projekat\projekateclipse\MJCompiler\program.mj
INFO  16:19:16,821 - #2 program
INFO  16:19:16,822 - #44 P
INFO  16:19:16,822 - #24 const
INFO  16:19:16,824 - #44 int
INFO  16:19:16,824 - #44 size
INFO  16:19:16,825 - #12 =
INFO  16:19:16,825 - #43 10
INFO  16:19:16,825 - #5 ;
INFO  16:19:16,825 - #21 enum
INFO  16:19:16,826 - #44 Num
INFO  16:19:16,826 - #3 {
INFO  16:19:16,826 - #44 ZERO
INFO  16:19:16,826 - #8 ,
INFO  16:19:16,826 - #44 ONE
INFO  16:19:16,826 - #8 ,
INFO  16:19:16,827 - #44 TEN
INFO  16:19:16,827 - #12 =
INFO  16:19:16,827 - #43 10
INFO  16:19:16,827 - #4 }
INFO  16:19:16,827 - #44 int
INFO  16:19:16,827 - #44 xd
INFO  16:19:16,828 - #8 ,
INFO  16:19:16,829 - #43 3
ERROR 16:19:16,829 - 
Sintaksna greska na liniji 5
INFO  16:19:16,829 - #44 y
INFO  16:19:16,829 - #5 ;
INFO  16:19:16,829 - #23 interface
INFO  16:19:16,830 - #44 I
INFO  16:19:16,830 - #3 {
ERROR 16:19:16,830 - Uspesan oporavak od greske pri definisanju globalnih promenljivih.
INFO  16:19:16,831 - #44 int
INFO  16:19:16,832 - #44 getp
INFO  16:19:16,832 - #6 (
INFO  16:19:16,832 - #44 int
INFO  16:19:16,832 - #44 i
INFO  16:19:16,832 - #7 )
INFO  16:19:16,833 - #5 ;
INFO  16:19:16,833 - #44 int
INFO  16:19:16,833 - #44 getn
INFO  16:19:16,833 - #6 (
INFO  16:19:16,833 - #44 int
INFO  16:19:16,833 - #44 i
INFO  16:19:16,834 - #7 )
INFO  16:19:16,834 - #5 ;
INFO  16:19:16,834 - #4 }
INFO  16:19:16,834 - #22 class
INFO  16:19:16,834 - #44 Table
INFO  16:19:16,834 - #20 implements
INFO  16:19:16,835 - #44 I
INFO  16:19:16,835 - #3 {
INFO  16:19:16,836 - #44 int
INFO  16:19:16,837 - #44 pos
INFO  16:19:16,837 - #37 [
INFO  16:19:16,837 - #38 ]
INFO  16:19:16,837 - #8 ,
INFO  16:19:16,838 - #44 neg
INFO  16:19:16,838 - #37 [
INFO  16:19:16,838 - #38 ]
INFO  16:19:16,838 - #5 ;
INFO  16:19:16,842 - #3 {
INFO  16:19:16,842 - #13 void
INFO  16:19:16,843 - #44 putp
INFO  16:19:16,843 - #6 (
INFO  16:19:16,843 - #44 int
INFO  16:19:16,843 - #44 a
INFO  16:19:16,843 - #8 ,
INFO  16:19:16,843 - #44 int
INFO  16:19:16,843 - #44 idx
INFO  16:19:16,843 - #7 )
INFO  16:19:16,843 - #3 {
INFO  16:19:16,843 - #44 this
INFO  16:19:16,844 - #47 .
INFO  16:19:16,844 - #44 pos
INFO  16:19:16,844 - #37 [
INFO  16:19:16,844 - #44 idx
INFO  16:19:16,845 - #38 ]
INFO  16:19:16,847 - #12 =
INFO  16:19:16,847 - #44 a
INFO  16:19:16,847 - #5 ;
INFO  16:19:16,848 - #4 }
INFO  16:19:16,848 - #13 void
INFO  16:19:16,849 - #44 putn
INFO  16:19:16,849 - #6 (
INFO  16:19:16,849 - #44 int
INFO  16:19:16,849 - #44 a
INFO  16:19:16,849 - #8 ,
INFO  16:19:16,849 - #44 int
INFO  16:19:16,849 - #44 idx
INFO  16:19:16,849 - #7 )
INFO  16:19:16,849 - #3 {
INFO  16:19:16,849 - #44 this
INFO  16:19:16,849 - #47 .
INFO  16:19:16,849 - #44 neg
INFO  16:19:16,849 - #37 [
INFO  16:19:16,850 - #44 idx
INFO  16:19:16,850 - #38 ]
INFO  16:19:16,850 - #12 =
INFO  16:19:16,850 - #44 a
INFO  16:19:16,850 - #5 ;
INFO  16:19:16,850 - #4 }
INFO  16:19:16,850 - #44 int
INFO  16:19:16,850 - #44 getp
INFO  16:19:16,850 - #6 (
INFO  16:19:16,850 - #44 int
INFO  16:19:16,850 - #44 idx
INFO  16:19:16,850 - #7 )
INFO  16:19:16,850 - #3 {
INFO  16:19:16,851 - #10 return
INFO  16:19:16,851 - #44 pos
INFO  16:19:16,851 - #37 [
INFO  16:19:16,851 - #44 idx
INFO  16:19:16,851 - #38 ]
INFO  16:19:16,851 - #5 ;
INFO  16:19:16,851 - #4 }
INFO  16:19:16,851 - #44 int
INFO  16:19:16,851 - #44 getn
INFO  16:19:16,851 - #6 (
INFO  16:19:16,851 - #44 int
INFO  16:19:16,851 - #44 idx
INFO  16:19:16,852 - #7 )
INFO  16:19:16,852 - #3 {
INFO  16:19:16,852 - #10 return
INFO  16:19:16,852 - #44 neg
INFO  16:19:16,852 - #37 [
INFO  16:19:16,852 - #44 idx
INFO  16:19:16,852 - #38 ]
INFO  16:19:16,852 - #5 ;
INFO  16:19:16,852 - #4 }
INFO  16:19:16,852 - #4 }
INFO  16:19:16,852 - #4 }
INFO  16:19:16,853 - #44 Table
INFO  16:19:16,853 - #44 val
INFO  16:19:16,853 - #5 ;
INFO  16:19:16,853 - #3 {
INFO  16:19:16,853 - #13 void
INFO  16:19:16,853 - #44 f
INFO  16:19:16,853 - #6 (
INFO  16:19:16,853 - #44 char
INFO  16:19:16,854 - #44 ch
INFO  16:19:16,854 - #8 ,
INFO  16:19:16,854 - #44 int
INFO  16:19:16,854 - #44 a
INFO  16:19:16,854 - #8 ,
INFO  16:19:16,854 - #44 int
INFO  16:19:16,854 - #44 arg
INFO  16:19:16,854 - #7 )
INFO  16:19:16,854 - #44 int
INFO  16:19:16,854 - #44 x
INFO  16:19:16,854 - #5 ;
INFO  16:19:16,854 - #3 {
INFO  16:19:16,854 - #44 x
INFO  16:19:16,854 - #12 =
INFO  16:19:16,854 - #44 arg
INFO  16:19:16,854 - #11 +
INFO  16:19:16,854 - #5 ;
ERROR 16:19:16,855 - 
Sintaksna greska na liniji 26
INFO  16:19:16,855 - #4 }
INFO  16:19:16,855 - #13 void
INFO  16:19:16,855 - #44 main
ERROR 16:19:16,855 - Uspesan oporavak od greske pri dodeli vrednosti : line . + eline
INFO  16:19:16,856 - #6 (
INFO  16:19:16,856 - #7 )
INFO  16:19:16,856 - #44 int
INFO  16:19:16,856 - #44 x
INFO  16:19:16,856 - #8 ,
INFO  16:19:16,856 - #44 i
INFO  16:19:16,856 - #5 ;
INFO  16:19:16,856 - #44 char
INFO  16:19:16,856 - #44 c
INFO  16:19:16,857 - #5 ;
INFO  16:19:16,857 - #3 {
INFO  16:19:16,857 - #44 val
INFO  16:19:16,857 - #12 =
INFO  16:19:16,857 - #19 new
INFO  16:19:16,857 - #44 Table
INFO  16:19:16,857 - #5 ;
INFO  16:19:16,858 - #44 val
INFO  16:19:16,858 - #47 .
INFO  16:19:16,858 - #44 pos
INFO  16:19:16,858 - #12 =
INFO  16:19:16,858 - #19 new
INFO  16:19:16,858 - #44 int
INFO  16:19:16,858 - #37 [
INFO  16:19:16,858 - #44 size
INFO  16:19:16,858 - #38 ]
INFO  16:19:16,858 - #5 ;
INFO  16:19:16,858 - #44 val
INFO  16:19:16,858 - #47 .
INFO  16:19:16,858 - #44 neg
INFO  16:19:16,858 - #12 =
INFO  16:19:16,858 - #19 new
INFO  16:19:16,858 - #44 int
INFO  16:19:16,858 - #37 [
INFO  16:19:16,858 - #44 size
INFO  16:19:16,858 - #38 ]
INFO  16:19:16,858 - #5 ;
INFO  16:19:16,858 - #16 for
INFO  16:19:16,858 - #6 (
INFO  16:19:16,858 - #44 i
INFO  16:19:16,858 - #12 =
INFO  16:19:16,858 - #43 0
INFO  16:19:16,859 - #5 ;
INFO  16:19:16,859 - #44 i
INFO  16:19:16,859 - #31 <
INFO  16:19:16,859 - #44 size
INFO  16:19:16,860 - #5 ;
INFO  16:19:16,861 - #44 i
INFO  16:19:16,861 - #35 ++
INFO  16:19:16,861 - #7 )
INFO  16:19:16,861 - #3 {
INFO  16:19:16,861 - #44 val
INFO  16:19:16,861 - #47 .
INFO  16:19:16,861 - #44 putp
INFO  16:19:16,861 - #6 (
INFO  16:19:16,861 - #43 0
INFO  16:19:16,861 - #8 ,
INFO  16:19:16,862 - #44 i
INFO  16:19:16,862 - #7 )
INFO  16:19:16,862 - #5 ;
INFO  16:19:16,862 - #44 val
INFO  16:19:16,862 - #47 .
INFO  16:19:16,862 - #44 putn
INFO  16:19:16,862 - #6 (
INFO  16:19:16,862 - #43 0
INFO  16:19:16,863 - #8 ,
INFO  16:19:16,863 - #44 i
INFO  16:19:16,863 - #7 )
INFO  16:19:16,863 - #5 ;
INFO  16:19:16,863 - #4 }
INFO  16:19:16,863 - #44 f
INFO  16:19:16,863 - #6 (
INFO  16:19:16,863 - #44 c
INFO  16:19:16,863 - #8 ,
INFO  16:19:16,863 - #44 x
INFO  16:19:16,863 - #8 ,
INFO  16:19:16,863 - #44 i
INFO  16:19:16,863 - #7 )
INFO  16:19:16,863 - #5 ;
INFO  16:19:16,863 - #14 read
INFO  16:19:16,863 - #6 (
INFO  16:19:16,863 - #44 x
INFO  16:19:16,863 - #7 )
INFO  16:19:16,863 - #5 ;
INFO  16:19:16,864 - #16 for
INFO  16:19:16,864 - #6 (
INFO  16:19:16,864 - #5 ;
INFO  16:19:16,864 - #44 x
INFO  16:19:16,864 - #29 >
INFO  16:19:16,865 - #43 0
INFO  16:19:16,865 - #5 ;
INFO  16:19:16,865 - #7 )
INFO  16:19:16,865 - #3 {
INFO  16:19:16,865 - #45 if
INFO  16:19:16,865 - #6 (
INFO  16:19:16,865 - #44 Num
INFO  16:19:16,866 - #47 .
INFO  16:19:16,866 - #44 ZERO
INFO  16:19:16,866 - #32 <=
INFO  16:19:16,866 - #44 x
INFO  16:19:16,866 - #33 &&
INFO  16:19:16,866 - #44 x
INFO  16:19:16,866 - #31 <
INFO  16:19:16,867 - #44 size
INFO  16:19:16,867 - #7 )
INFO  16:19:16,867 - #3 {
INFO  16:19:16,867 - #44 val
INFO  16:19:16,867 - #47 .
INFO  16:19:16,867 - #44 putp
INFO  16:19:16,867 - #6 (
INFO  16:19:16,867 - #44 val
INFO  16:19:16,867 - #47 .
INFO  16:19:16,867 - #44 getp
INFO  16:19:16,867 - #6 (
INFO  16:19:16,867 - #44 x
INFO  16:19:16,867 - #7 )
INFO  16:19:16,867 - #11 +
INFO  16:19:16,867 - #44 Num
INFO  16:19:16,868 - #47 .
INFO  16:19:16,868 - #44 ONE
INFO  16:19:16,868 - #7 )
INFO  16:19:16,868 - #5 ;
INFO  16:19:16,868 - #4 }
INFO  16:19:16,868 - #46 else
INFO  16:19:16,868 - #45 if
INFO  16:19:16,868 - #6 (
INFO  16:19:16,868 - #25 -
INFO  16:19:16,868 - #44 size
INFO  16:19:16,869 - #31 <
INFO  16:19:16,869 - #44 x
INFO  16:19:16,869 - #33 &&
INFO  16:19:16,869 - #44 x
INFO  16:19:16,869 - #31 <
INFO  16:19:16,869 - #43 0
INFO  16:19:16,869 - #7 )
INFO  16:19:16,869 - #3 {
INFO  16:19:16,869 - #44 val
INFO  16:19:16,869 - #47 .
INFO  16:19:16,869 - #44 putn
INFO  16:19:16,869 - #6 (
INFO  16:19:16,869 - #44 val
INFO  16:19:16,869 - #47 .
INFO  16:19:16,869 - #44 getn
INFO  16:19:16,869 - #6 (
INFO  16:19:16,869 - #25 -
INFO  16:19:16,869 - #44 x
INFO  16:19:16,869 - #7 )
INFO  16:19:16,869 - #11 +
INFO  16:19:16,869 - #43 1
INFO  16:19:16,869 - #7 )
INFO  16:19:16,870 - #5 ;
INFO  16:19:16,870 - #4 }
INFO  16:19:16,870 - #14 read
INFO  16:19:16,870 - #6 (
INFO  16:19:16,870 - #44 x
INFO  16:19:16,870 - #7 )
INFO  16:19:16,870 - #5 ;
INFO  16:19:16,870 - #4 }
INFO  16:19:16,870 - #4 }
INFO  16:19:16,870 - #4 }
