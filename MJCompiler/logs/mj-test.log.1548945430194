INFO  15:36:47,003 - Compiling source file: D:\faks\milos\4 god 1 sem\pp1\projekat\projekateclipse\MJCompiler\program3.mj
INFO  15:36:47,091 - #2 program
INFO  15:36:47,091 - #44 P
INFO  15:36:47,091 - #24 const
INFO  15:36:47,092 - #44 int
INFO  15:36:47,092 - #44 size
INFO  15:36:47,093 - #12 =
INFO  15:36:47,094 - #43 10
INFO  15:36:47,094 - #5 ;
INFO  15:36:47,094 - #21 enum
INFO  15:36:47,094 - #44 Num
INFO  15:36:47,094 - #3 {
INFO  15:36:47,095 - #44 ZERO
INFO  15:36:47,095 - #8 ,
INFO  15:36:47,095 - #44 ONE
INFO  15:36:47,095 - #8 ,
INFO  15:36:47,095 - #44 TEN
INFO  15:36:47,095 - #12 =
INFO  15:36:47,096 - #43 10
INFO  15:36:47,096 - #4 }
INFO  15:36:47,096 - #44 int
INFO  15:36:47,097 - #44 xd
INFO  15:36:47,097 - #5 ;
INFO  15:36:47,097 - #3 {
INFO  15:36:47,097 - #13 void
INFO  15:36:47,098 - #44 f
INFO  15:36:47,098 - #6 (
INFO  15:36:47,098 - #44 char
INFO  15:36:47,098 - #44 ch
INFO  15:36:47,098 - #8 ,
INFO  15:36:47,099 - #44 int
INFO  15:36:47,099 - #44 a
INFO  15:36:47,099 - #8 ,
INFO  15:36:47,099 - #44 int
INFO  15:36:47,099 - #44 arg
INFO  15:36:47,099 - #7 )
INFO  15:36:47,099 - #44 int
INFO  15:36:47,100 - #44 x
INFO  15:36:47,100 - #5 ;
INFO  15:36:47,101 - #3 {
INFO  15:36:47,101 - #44 x
INFO  15:36:47,102 - #12 =
INFO  15:36:47,103 - #44 arg
INFO  15:36:47,103 - #5 ;
INFO  15:36:47,107 - #4 }
INFO  15:36:47,107 - #13 void
INFO  15:36:47,108 - #44 main
INFO  15:36:47,108 - #6 (
INFO  15:36:47,108 - #7 )
INFO  15:36:47,109 - #44 int
INFO  15:36:47,109 - #44 x
INFO  15:36:47,109 - #8 ,
INFO  15:36:47,109 - #44 i
INFO  15:36:47,109 - #5 ;
INFO  15:36:47,109 - #44 char
INFO  15:36:47,110 - #44 c
INFO  15:36:47,110 - #5 ;
INFO  15:36:47,110 - #3 {
INFO  15:36:47,110 - #44 val
INFO  15:36:47,110 - #12 =
INFO  15:36:47,110 - #19 new
INFO  15:36:47,110 - #44 Table
INFO  15:36:47,110 - #5 ;
INFO  15:36:47,110 - #44 val
INFO  15:36:47,110 - #47 .
INFO  15:36:47,111 - #44 pos
INFO  15:36:47,111 - #12 =
INFO  15:36:47,111 - #19 new
INFO  15:36:47,111 - #44 int
INFO  15:36:47,111 - #37 [
INFO  15:36:47,111 - #44 size
INFO  15:36:47,111 - #38 ]
INFO  15:36:47,111 - #5 ;
INFO  15:36:47,111 - #44 val
INFO  15:36:47,112 - #47 .
INFO  15:36:47,112 - #44 neg
INFO  15:36:47,112 - #12 =
INFO  15:36:47,112 - #19 new
INFO  15:36:47,112 - #44 int
INFO  15:36:47,112 - #37 [
INFO  15:36:47,112 - #44 size
INFO  15:36:47,112 - #38 ]
INFO  15:36:47,112 - #5 ;
INFO  15:36:47,112 - #16 for
INFO  15:36:47,112 - #6 (
INFO  15:36:47,112 - #44 i
INFO  15:36:47,112 - #12 =
INFO  15:36:47,113 - #43 0
INFO  15:36:47,113 - #5 ;
INFO  15:36:47,113 - #44 i
INFO  15:36:47,113 - #31 <
INFO  15:36:47,113 - #44 size
INFO  15:36:47,114 - #5 ;
INFO  15:36:47,116 - #44 i
INFO  15:36:47,117 - #35 ++
INFO  15:36:47,117 - #7 )
INFO  15:36:47,117 - #3 {
INFO  15:36:47,117 - #44 val
INFO  15:36:47,118 - #47 .
INFO  15:36:47,118 - #44 putp
INFO  15:36:47,118 - #6 (
INFO  15:36:47,118 - #43 0
INFO  15:36:47,118 - #8 ,
INFO  15:36:47,118 - #44 i
INFO  15:36:47,119 - #7 )
INFO  15:36:47,119 - #5 ;
INFO  15:36:47,120 - #44 val
INFO  15:36:47,120 - #47 .
INFO  15:36:47,120 - #44 putn
INFO  15:36:47,120 - #6 (
INFO  15:36:47,120 - #43 0
INFO  15:36:47,120 - #8 ,
INFO  15:36:47,120 - #44 i
INFO  15:36:47,120 - #7 )
INFO  15:36:47,120 - #5 ;
INFO  15:36:47,120 - #4 }
INFO  15:36:47,120 - #44 f
INFO  15:36:47,121 - #6 (
INFO  15:36:47,121 - #44 c
INFO  15:36:47,121 - #8 ,
INFO  15:36:47,121 - #44 x
INFO  15:36:47,121 - #8 ,
INFO  15:36:47,122 - #44 i
INFO  15:36:47,122 - #7 )
INFO  15:36:47,126 - #5 ;
INFO  15:36:47,126 - #14 read
INFO  15:36:47,126 - #6 (
INFO  15:36:47,126 - #44 x
INFO  15:36:47,126 - #7 )
INFO  15:36:47,126 - #5 ;
INFO  15:36:47,126 - #16 for
INFO  15:36:47,126 - #6 (
INFO  15:36:47,126 - #5 ;
INFO  15:36:47,127 - #44 x
INFO  15:36:47,127 - #29 >
INFO  15:36:47,127 - #43 0
INFO  15:36:47,128 - #5 ;
INFO  15:36:47,128 - #7 )
INFO  15:36:47,128 - #3 {
INFO  15:36:47,128 - #45 if
INFO  15:36:47,128 - #6 (
INFO  15:36:47,128 - #44 Num
INFO  15:36:47,128 - #47 .
INFO  15:36:47,128 - #44 ZERO
INFO  15:36:47,128 - #32 <=
INFO  15:36:47,128 - #44 x
INFO  15:36:47,128 - #33 &&
INFO  15:36:47,128 - #44 x
INFO  15:36:47,129 - #31 <
INFO  15:36:47,129 - #44 size
INFO  15:36:47,129 - #7 )
INFO  15:36:47,129 - #3 {
INFO  15:36:47,129 - #44 val
INFO  15:36:47,129 - #47 .
INFO  15:36:47,129 - #44 putp
INFO  15:36:47,129 - #6 (
INFO  15:36:47,129 - #44 val
INFO  15:36:47,129 - #47 .
INFO  15:36:47,130 - #44 getp
INFO  15:36:47,130 - #6 (
INFO  15:36:47,130 - #44 x
INFO  15:36:47,130 - #7 )
INFO  15:36:47,130 - #11 +
INFO  15:36:47,130 - #44 Num
INFO  15:36:47,131 - #47 .
INFO  15:36:47,131 - #44 ONE
INFO  15:36:47,131 - #7 )
INFO  15:36:47,131 - #5 ;
INFO  15:36:47,131 - #4 }
INFO  15:36:47,131 - #46 else
INFO  15:36:47,131 - #45 if
INFO  15:36:47,131 - #6 (
INFO  15:36:47,131 - #25 -
INFO  15:36:47,131 - #44 size
INFO  15:36:47,132 - #31 <
INFO  15:36:47,132 - #44 x
INFO  15:36:47,132 - #33 &&
INFO  15:36:47,132 - #44 x
INFO  15:36:47,132 - #31 <
INFO  15:36:47,132 - #43 0
INFO  15:36:47,132 - #7 )
INFO  15:36:47,132 - #3 {
INFO  15:36:47,132 - #44 val
INFO  15:36:47,132 - #47 .
INFO  15:36:47,132 - #44 putn
INFO  15:36:47,132 - #6 (
INFO  15:36:47,132 - #44 val
INFO  15:36:47,132 - #47 .
INFO  15:36:47,132 - #44 getn
INFO  15:36:47,133 - #6 (
INFO  15:36:47,133 - #25 -
INFO  15:36:47,133 - #44 x
INFO  15:36:47,133 - #7 )
INFO  15:36:47,133 - #11 +
INFO  15:36:47,133 - #43 1
INFO  15:36:47,133 - #7 )
INFO  15:36:47,133 - #5 ;
INFO  15:36:47,133 - #4 }
INFO  15:36:47,133 - #14 read
INFO  15:36:47,133 - #6 (
INFO  15:36:47,133 - #44 x
INFO  15:36:47,134 - #7 )
INFO  15:36:47,134 - #5 ;
INFO  15:36:47,134 - #4 }
INFO  15:36:47,134 - #4 }
INFO  15:36:47,134 - #4 }
INFO  15:36:47,135 - =================================================================================
