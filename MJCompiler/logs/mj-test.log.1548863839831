INFO  16:57:03,706 - Compiling source file: D:\faks\milos\4 god 1 sem\pp1\projekat\projekateclipse\MJCompiler\program.mj
INFO  16:57:03,801 - #2 program
INFO  16:57:03,801 - #44 P
INFO  16:57:03,801 - #24 const
INFO  16:57:03,803 - #44 int
INFO  16:57:03,803 - #44 size
INFO  16:57:03,804 - #12 =
INFO  16:57:03,804 - #43 10
INFO  16:57:03,804 - #5 ;
INFO  16:57:03,804 - #21 enum
INFO  16:57:03,805 - #44 Num
INFO  16:57:03,805 - #3 {
INFO  16:57:03,805 - #44 ZERO
INFO  16:57:03,805 - #8 ,
INFO  16:57:03,805 - #44 ONE
INFO  16:57:03,805 - #8 ,
INFO  16:57:03,806 - #44 TEN
INFO  16:57:03,806 - #12 =
INFO  16:57:03,806 - #43 10
INFO  16:57:03,806 - #4 }
INFO  16:57:03,806 - #44 int
INFO  16:57:03,807 - #44 xd
INFO  16:57:03,807 - #8 ,
INFO  16:57:03,809 - #43 3
ERROR 16:57:03,809 - 
Sintaksna greska na liniji 5
INFO  16:57:03,809 - #44 y
INFO  16:57:03,809 - #5 ;
INFO  16:57:03,809 - #23 interface
INFO  16:57:03,810 - #44 I
INFO  16:57:03,810 - #3 {
ERROR 16:57:03,810 - Uspesan oporavak od greske pri definisanju globalnih promenljivih, line : 5
INFO  16:57:03,810 - #44 int
INFO  16:57:03,811 - #44 getp
INFO  16:57:03,811 - #6 (
INFO  16:57:03,811 - #44 int
INFO  16:57:03,811 - #44 i
INFO  16:57:03,811 - #7 )
INFO  16:57:03,812 - #5 ;
INFO  16:57:03,812 - #44 int
INFO  16:57:03,812 - #44 getn
INFO  16:57:03,812 - #6 (
INFO  16:57:03,812 - #44 int
INFO  16:57:03,812 - #44 i
INFO  16:57:03,812 - #7 )
INFO  16:57:03,813 - #5 ;
INFO  16:57:03,813 - #4 }
INFO  16:57:03,813 - #22 class
INFO  16:57:03,813 - #44 Table
INFO  16:57:03,813 - #20 implements
INFO  16:57:03,814 - #44 I
INFO  16:57:03,814 - #3 {
INFO  16:57:03,814 - #44 int
INFO  16:57:03,815 - #44 pos
INFO  16:57:03,815 - #37 [
INFO  16:57:03,815 - #38 ]
INFO  16:57:03,815 - #8 ,
INFO  16:57:03,816 - #44 neg
INFO  16:57:03,816 - #37 [
INFO  16:57:03,816 - #38 ]
INFO  16:57:03,816 - #5 ;
INFO  16:57:03,816 - #3 {
INFO  16:57:03,816 - #13 void
INFO  16:57:03,817 - #44 putp
INFO  16:57:03,817 - #6 (
INFO  16:57:03,818 - #44 int
INFO  16:57:03,818 - #44 a
INFO  16:57:03,818 - #8 ,
INFO  16:57:03,818 - #44 int
INFO  16:57:03,818 - #44 idx
INFO  16:57:03,818 - #7 )
INFO  16:57:03,818 - #3 {
INFO  16:57:03,818 - #44 this
INFO  16:57:03,819 - #47 .
INFO  16:57:03,820 - #44 pos
INFO  16:57:03,820 - #37 [
INFO  16:57:03,820 - #44 idx
INFO  16:57:03,821 - #38 ]
INFO  16:57:03,823 - #12 =
INFO  16:57:03,823 - #44 a
INFO  16:57:03,823 - #5 ;
INFO  16:57:03,823 - #4 }
INFO  16:57:03,824 - #13 void
INFO  16:57:03,824 - #44 putn
INFO  16:57:03,824 - #6 (
INFO  16:57:03,825 - #44 int
INFO  16:57:03,825 - #44 a
INFO  16:57:03,825 - #8 ,
INFO  16:57:03,825 - #44 int
INFO  16:57:03,825 - #44 idx
INFO  16:57:03,825 - #7 )
INFO  16:57:03,825 - #3 {
INFO  16:57:03,825 - #44 this
INFO  16:57:03,825 - #47 .
INFO  16:57:03,825 - #44 neg
INFO  16:57:03,825 - #37 [
INFO  16:57:03,825 - #44 idx
INFO  16:57:03,825 - #38 ]
INFO  16:57:03,826 - #12 =
INFO  16:57:03,826 - #44 a
INFO  16:57:03,826 - #5 ;
INFO  16:57:03,826 - #4 }
INFO  16:57:03,826 - #44 int
INFO  16:57:03,826 - #44 getp
INFO  16:57:03,826 - #6 (
INFO  16:57:03,826 - #44 int
INFO  16:57:03,826 - #44 idx
INFO  16:57:03,826 - #7 )
INFO  16:57:03,826 - #3 {
INFO  16:57:03,826 - #10 return
INFO  16:57:03,826 - #44 pos
INFO  16:57:03,827 - #37 [
INFO  16:57:03,827 - #44 idx
INFO  16:57:03,827 - #38 ]
INFO  16:57:03,827 - #5 ;
INFO  16:57:03,827 - #4 }
INFO  16:57:03,827 - #44 int
INFO  16:57:03,827 - #44 getn
INFO  16:57:03,827 - #6 (
INFO  16:57:03,827 - #44 int
INFO  16:57:03,827 - #44 idx
INFO  16:57:03,827 - #7 )
INFO  16:57:03,828 - #3 {
INFO  16:57:03,828 - #10 return
INFO  16:57:03,828 - #44 neg
INFO  16:57:03,832 - #37 [
INFO  16:57:03,832 - #44 idx
INFO  16:57:03,832 - #38 ]
INFO  16:57:03,832 - #5 ;
INFO  16:57:03,833 - #4 }
INFO  16:57:03,833 - #4 }
INFO  16:57:03,833 - #4 }
INFO  16:57:03,833 - #44 Table
INFO  16:57:03,833 - #44 val
INFO  16:57:03,833 - #5 ;
INFO  16:57:03,833 - #3 {
INFO  16:57:03,833 - #13 void
INFO  16:57:03,834 - #44 f
INFO  16:57:03,834 - #6 (
INFO  16:57:03,834 - #44 char
INFO  16:57:03,834 - #44 ch
INFO  16:57:03,834 - #8 ,
INFO  16:57:03,834 - #44 int
INFO  16:57:03,834 - #44 a
INFO  16:57:03,834 - #8 ,
INFO  16:57:03,834 - #44 int
INFO  16:57:03,834 - #43 3
ERROR 16:57:03,834 - 
Sintaksna greska na liniji 23
INFO  16:57:03,834 - #44 arg
INFO  16:57:03,834 - #8 ,
INFO  16:57:03,834 - #44 int
INFO  16:57:03,834 - #7 )
INFO  16:57:03,834 - #44 int
INFO  16:57:03,834 - #44 x
INFO  16:57:03,834 - #5 ;
ERROR 16:57:03,834 - Uspesan oporavak od greske pri deklaraciji formalnih parametara funkcije, line : 23
INFO  16:57:03,835 - #3 {
INFO  16:57:03,835 - #44 x
INFO  16:57:03,835 - #12 =
INFO  16:57:03,835 - #44 arg
INFO  16:57:03,836 - #11 +
INFO  16:57:03,836 - #5 ;
ERROR 16:57:03,836 - 
Sintaksna greska na liniji 26
INFO  16:57:03,836 - #4 }
INFO  16:57:03,836 - #13 void
INFO  16:57:03,836 - #44 main
ERROR 16:57:03,836 - Uspesan oporavak od greske pri dodeli vrednosti, line : 2
INFO  16:57:03,837 - #6 (
INFO  16:57:03,837 - #7 )
INFO  16:57:03,838 - #44 int
INFO  16:57:03,838 - #44 x
INFO  16:57:03,838 - #8 ,
INFO  16:57:03,838 - #44 i
INFO  16:57:03,838 - #5 ;
INFO  16:57:03,838 - #44 char
INFO  16:57:03,838 - #44 c
INFO  16:57:03,838 - #5 ;
INFO  16:57:03,838 - #3 {
INFO  16:57:03,838 - #44 val
INFO  16:57:03,838 - #12 =
INFO  16:57:03,839 - #19 new
INFO  16:57:03,839 - #44 Table
INFO  16:57:03,839 - #5 ;
INFO  16:57:03,840 - #44 val
INFO  16:57:03,840 - #47 .
INFO  16:57:03,840 - #44 pos
INFO  16:57:03,840 - #12 =
INFO  16:57:03,840 - #19 new
INFO  16:57:03,840 - #44 int
INFO  16:57:03,840 - #37 [
INFO  16:57:03,840 - #44 size
INFO  16:57:03,840 - #38 ]
INFO  16:57:03,840 - #5 ;
INFO  16:57:03,841 - #44 val
INFO  16:57:03,841 - #47 .
INFO  16:57:03,841 - #44 neg
INFO  16:57:03,841 - #12 =
INFO  16:57:03,841 - #19 new
INFO  16:57:03,841 - #44 int
INFO  16:57:03,841 - #37 [
INFO  16:57:03,841 - #44 size
INFO  16:57:03,841 - #38 ]
INFO  16:57:03,841 - #5 ;
INFO  16:57:03,841 - #16 for
INFO  16:57:03,841 - #6 (
INFO  16:57:03,841 - #44 i
INFO  16:57:03,841 - #12 =
INFO  16:57:03,841 - #43 0
INFO  16:57:03,841 - #5 ;
INFO  16:57:03,841 - #44 i
INFO  16:57:03,842 - #31 <
INFO  16:57:03,842 - #44 size
INFO  16:57:03,843 - #5 ;
INFO  16:57:03,844 - #44 i
INFO  16:57:03,844 - #35 ++
INFO  16:57:03,845 - #7 )
INFO  16:57:03,845 - #3 {
INFO  16:57:03,845 - #44 val
INFO  16:57:03,845 - #47 .
INFO  16:57:03,845 - #44 putp
INFO  16:57:03,845 - #6 (
INFO  16:57:03,845 - #43 0
INFO  16:57:03,845 - #8 ,
INFO  16:57:03,845 - #44 i
INFO  16:57:03,846 - #7 )
INFO  16:57:03,846 - #5 ;
INFO  16:57:03,846 - #44 val
INFO  16:57:03,846 - #47 .
INFO  16:57:03,846 - #44 putn
INFO  16:57:03,846 - #6 (
INFO  16:57:03,846 - #43 0
INFO  16:57:03,846 - #8 ,
INFO  16:57:03,846 - #44 i
INFO  16:57:03,846 - #7 )
INFO  16:57:03,846 - #5 ;
INFO  16:57:03,847 - #4 }
INFO  16:57:03,847 - #44 f
INFO  16:57:03,847 - #6 (
INFO  16:57:03,847 - #44 c
INFO  16:57:03,847 - #8 ,
INFO  16:57:03,847 - #44 x
INFO  16:57:03,847 - #8 ,
INFO  16:57:03,847 - #44 i
INFO  16:57:03,847 - #7 )
INFO  16:57:03,847 - #5 ;
INFO  16:57:03,848 - #14 read
INFO  16:57:03,848 - #6 (
INFO  16:57:03,848 - #44 x
INFO  16:57:03,848 - #7 )
INFO  16:57:03,848 - #5 ;
INFO  16:57:03,848 - #16 for
INFO  16:57:03,848 - #6 (
INFO  16:57:03,848 - #5 ;
INFO  16:57:03,849 - #44 x
INFO  16:57:03,849 - #29 >
INFO  16:57:03,849 - #43 0
INFO  16:57:03,849 - #5 ;
INFO  16:57:03,850 - #7 )
INFO  16:57:03,850 - #3 {
INFO  16:57:03,850 - #45 if
INFO  16:57:03,850 - #6 (
INFO  16:57:03,850 - #44 Num
INFO  16:57:03,850 - #47 .
INFO  16:57:03,850 - #44 ZERO
INFO  16:57:03,850 - #32 <=
INFO  16:57:03,850 - #44 x
INFO  16:57:03,851 - #33 &&
INFO  16:57:03,851 - #44 x
INFO  16:57:03,851 - #31 <
INFO  16:57:03,851 - #6 (
INFO  16:57:03,851 - #44 size
INFO  16:57:03,851 - #25 -
INFO  16:57:03,851 - #43 3
INFO  16:57:03,853 - #7 )
INFO  16:57:03,853 - #7 )
INFO  16:57:03,853 - #3 {
INFO  16:57:03,853 - #44 val
INFO  16:57:03,853 - #47 .
INFO  16:57:03,853 - #44 putp
INFO  16:57:03,853 - #6 (
INFO  16:57:03,854 - #44 val
INFO  16:57:03,854 - #47 .
INFO  16:57:03,854 - #44 getp
INFO  16:57:03,854 - #6 (
INFO  16:57:03,854 - #44 x
INFO  16:57:03,854 - #7 )
INFO  16:57:03,854 - #11 +
INFO  16:57:03,854 - #44 Num
INFO  16:57:03,854 - #47 .
INFO  16:57:03,854 - #44 ONE
INFO  16:57:03,854 - #7 )
INFO  16:57:03,854 - #5 ;
INFO  16:57:03,854 - #4 }
INFO  16:57:03,854 - #46 else
INFO  16:57:03,854 - #45 if
INFO  16:57:03,854 - #6 (
INFO  16:57:03,854 - #25 -
INFO  16:57:03,855 - #44 size
INFO  16:57:03,855 - #31 <
INFO  16:57:03,856 - #44 x
INFO  16:57:03,856 - #33 &&
INFO  16:57:03,856 - #44 x
INFO  16:57:03,856 - #31 <
INFO  16:57:03,856 - #43 0
INFO  16:57:03,856 - #7 )
INFO  16:57:03,856 - #3 {
INFO  16:57:03,856 - #44 val
INFO  16:57:03,856 - #47 .
INFO  16:57:03,856 - #44 putn
INFO  16:57:03,856 - #6 (
INFO  16:57:03,856 - #44 val
INFO  16:57:03,856 - #47 .
INFO  16:57:03,856 - #44 getn
INFO  16:57:03,856 - #6 (
INFO  16:57:03,856 - #25 -
INFO  16:57:03,856 - #44 x
INFO  16:57:03,857 - #7 )
INFO  16:57:03,857 - #11 +
INFO  16:57:03,857 - #43 1
INFO  16:57:03,857 - #7 )
INFO  16:57:03,857 - #5 ;
INFO  16:57:03,857 - #4 }
INFO  16:57:03,857 - #14 read
INFO  16:57:03,857 - #6 (
INFO  16:57:03,858 - #44 x
INFO  16:57:03,858 - #7 )
INFO  16:57:03,858 - #5 ;
INFO  16:57:03,858 - #4 }
INFO  16:57:03,858 - #4 }
INFO  16:57:03,858 - #4 }
