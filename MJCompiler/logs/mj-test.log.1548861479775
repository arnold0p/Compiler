INFO  16:15:36,523 - Compiling source file: D:\faks\milos\4 god 1 sem\pp1\projekat\projekateclipse\MJCompiler\program.mj
INFO  16:15:36,631 - #2 program
INFO  16:15:36,631 - #44 P
INFO  16:15:36,632 - #24 const
INFO  16:15:36,633 - #44 int
INFO  16:15:36,634 - #44 size
INFO  16:15:36,635 - #12 =
INFO  16:15:36,635 - #43 10
INFO  16:15:36,635 - #5 ;
INFO  16:15:36,636 - #21 enum
INFO  16:15:36,637 - #44 Num
INFO  16:15:36,637 - #3 {
INFO  16:15:36,637 - #44 ZERO
INFO  16:15:36,637 - #8 ,
INFO  16:15:36,637 - #44 ONE
INFO  16:15:36,638 - #8 ,
INFO  16:15:36,638 - #44 TEN
INFO  16:15:36,638 - #12 =
INFO  16:15:36,638 - #43 10
INFO  16:15:36,638 - #4 }
INFO  16:15:36,638 - #44 int
INFO  16:15:36,639 - #44 xd
INFO  16:15:36,639 - #8 ,
INFO  16:15:36,640 - #43 3
ERROR 16:15:36,640 - 
Sintaksna greska na liniji 5
INFO  16:15:36,640 - #44 y
INFO  16:15:36,640 - #5 ;
INFO  16:15:36,640 - #23 interface
INFO  16:15:36,641 - #44 I
INFO  16:15:36,641 - #3 {
ERROR 16:15:36,641 - Uspesan oporavak od greske pri definisanju globalnih promenljivih.
INFO  16:15:36,643 - #44 int
INFO  16:15:36,644 - #44 getp
INFO  16:15:36,644 - #6 (
INFO  16:15:36,645 - #44 int
INFO  16:15:36,645 - #44 i
INFO  16:15:36,645 - #7 )
INFO  16:15:36,645 - #5 ;
INFO  16:15:36,645 - #44 int
INFO  16:15:36,645 - #44 getn
INFO  16:15:36,645 - #6 (
INFO  16:15:36,645 - #44 int
INFO  16:15:36,646 - #44 i
INFO  16:15:36,646 - #7 )
INFO  16:15:36,646 - #5 ;
INFO  16:15:36,646 - #4 }
INFO  16:15:36,646 - #22 class
INFO  16:15:36,646 - #44 Table
INFO  16:15:36,647 - #20 implements
INFO  16:15:36,647 - #44 I
INFO  16:15:36,647 - #3 {
INFO  16:15:36,648 - #44 int
INFO  16:15:36,648 - #44 pos
INFO  16:15:36,648 - #37 [
INFO  16:15:36,648 - #38 ]
INFO  16:15:36,648 - #8 ,
INFO  16:15:36,649 - #44 neg
INFO  16:15:36,650 - #37 [
INFO  16:15:36,650 - #38 ]
INFO  16:15:36,650 - #5 ;
INFO  16:15:36,653 - #3 {
INFO  16:15:36,654 - #13 void
INFO  16:15:36,654 - #44 putp
INFO  16:15:36,654 - #6 (
INFO  16:15:36,655 - #44 int
INFO  16:15:36,655 - #44 a
INFO  16:15:36,655 - #8 ,
INFO  16:15:36,655 - #44 int
INFO  16:15:36,655 - #44 idx
INFO  16:15:36,655 - #7 )
INFO  16:15:36,655 - #3 {
INFO  16:15:36,655 - #44 this
INFO  16:15:36,655 - #47 .
INFO  16:15:36,656 - #44 pos
INFO  16:15:36,656 - #37 [
INFO  16:15:36,656 - #44 idx
INFO  16:15:36,657 - #38 ]
INFO  16:15:36,662 - #12 =
INFO  16:15:36,662 - #44 a
INFO  16:15:36,663 - #5 ;
INFO  16:15:36,665 - #4 }
INFO  16:15:36,666 - #13 void
INFO  16:15:36,667 - #44 putn
INFO  16:15:36,667 - #6 (
INFO  16:15:36,667 - #44 int
INFO  16:15:36,668 - #44 a
INFO  16:15:36,668 - #8 ,
INFO  16:15:36,668 - #44 int
INFO  16:15:36,668 - #44 idx
INFO  16:15:36,668 - #7 )
INFO  16:15:36,668 - #3 {
INFO  16:15:36,668 - #44 this
INFO  16:15:36,668 - #47 .
INFO  16:15:36,668 - #44 neg
INFO  16:15:36,668 - #37 [
INFO  16:15:36,668 - #44 idx
INFO  16:15:36,668 - #38 ]
INFO  16:15:36,669 - #12 =
INFO  16:15:36,669 - #44 a
INFO  16:15:36,669 - #5 ;
INFO  16:15:36,669 - #4 }
INFO  16:15:36,669 - #44 int
INFO  16:15:36,669 - #44 getp
INFO  16:15:36,669 - #6 (
INFO  16:15:36,669 - #44 int
INFO  16:15:36,669 - #44 idx
INFO  16:15:36,669 - #7 )
INFO  16:15:36,670 - #3 {
INFO  16:15:36,670 - #10 return
INFO  16:15:36,670 - #44 pos
INFO  16:15:36,670 - #37 [
INFO  16:15:36,670 - #44 idx
INFO  16:15:36,670 - #38 ]
INFO  16:15:36,670 - #5 ;
INFO  16:15:36,670 - #4 }
INFO  16:15:36,671 - #44 int
INFO  16:15:36,671 - #44 getn
INFO  16:15:36,671 - #6 (
INFO  16:15:36,671 - #44 int
INFO  16:15:36,671 - #44 idx
INFO  16:15:36,671 - #7 )
INFO  16:15:36,671 - #3 {
INFO  16:15:36,671 - #10 return
INFO  16:15:36,672 - #44 neg
INFO  16:15:36,672 - #37 [
INFO  16:15:36,672 - #44 idx
INFO  16:15:36,672 - #38 ]
INFO  16:15:36,672 - #5 ;
INFO  16:15:36,672 - #4 }
INFO  16:15:36,672 - #4 }
INFO  16:15:36,673 - #4 }
INFO  16:15:36,673 - #44 Table
INFO  16:15:36,673 - #44 val
INFO  16:15:36,674 - #5 ;
INFO  16:15:36,674 - #3 {
INFO  16:15:36,674 - #13 void
INFO  16:15:36,674 - #44 f
INFO  16:15:36,674 - #6 (
INFO  16:15:36,674 - #44 char
INFO  16:15:36,674 - #44 ch
INFO  16:15:36,674 - #8 ,
INFO  16:15:36,674 - #44 int
INFO  16:15:36,675 - #44 a
INFO  16:15:36,675 - #8 ,
INFO  16:15:36,675 - #44 int
INFO  16:15:36,675 - #44 arg
INFO  16:15:36,675 - #7 )
INFO  16:15:36,675 - #44 int
INFO  16:15:36,675 - #44 x
INFO  16:15:36,675 - #5 ;
INFO  16:15:36,675 - #3 {
INFO  16:15:36,675 - #44 x
INFO  16:15:36,675 - #12 =
INFO  16:15:36,675 - #44 arg
INFO  16:15:36,675 - #11 +
INFO  16:15:36,675 - #5 ;
ERROR 16:15:36,675 - 
Sintaksna greska na liniji 26
INFO  16:15:36,676 - #4 }
INFO  16:15:36,676 - #13 void
INFO  16:15:36,676 - #44 main
ERROR 16:15:36,676 - Uspesan oporavak od greske pri dodeli vrednosti.
INFO  16:15:36,677 - #6 (
INFO  16:15:36,677 - #7 )
INFO  16:15:36,678 - #44 int
INFO  16:15:36,678 - #44 x
INFO  16:15:36,679 - #8 ,
INFO  16:15:36,679 - #44 i
INFO  16:15:36,679 - #5 ;
INFO  16:15:36,679 - #44 char
INFO  16:15:36,679 - #44 c
INFO  16:15:36,679 - #5 ;
INFO  16:15:36,679 - #3 {
INFO  16:15:36,679 - #44 val
INFO  16:15:36,680 - #12 =
INFO  16:15:36,680 - #19 new
INFO  16:15:36,680 - #44 Table
INFO  16:15:36,680 - #5 ;
INFO  16:15:36,681 - #44 val
INFO  16:15:36,682 - #47 .
INFO  16:15:36,682 - #44 pos
INFO  16:15:36,682 - #12 =
INFO  16:15:36,682 - #19 new
INFO  16:15:36,682 - #44 int
INFO  16:15:36,682 - #37 [
INFO  16:15:36,682 - #44 size
INFO  16:15:36,682 - #38 ]
INFO  16:15:36,682 - #5 ;
INFO  16:15:36,683 - #44 val
INFO  16:15:36,683 - #47 .
INFO  16:15:36,683 - #44 neg
INFO  16:15:36,683 - #12 =
INFO  16:15:36,683 - #19 new
INFO  16:15:36,683 - #44 int
INFO  16:15:36,683 - #37 [
INFO  16:15:36,683 - #44 size
INFO  16:15:36,683 - #38 ]
INFO  16:15:36,683 - #5 ;
INFO  16:15:36,684 - #16 for
INFO  16:15:36,684 - #6 (
INFO  16:15:36,684 - #44 i
INFO  16:15:36,684 - #12 =
INFO  16:15:36,684 - #43 0
INFO  16:15:36,684 - #5 ;
INFO  16:15:36,684 - #44 i
INFO  16:15:36,684 - #31 <
INFO  16:15:36,685 - #44 size
INFO  16:15:36,687 - #5 ;
INFO  16:15:36,690 - #44 i
INFO  16:15:36,690 - #35 ++
INFO  16:15:36,690 - #7 )
INFO  16:15:36,690 - #3 {
INFO  16:15:36,690 - #44 val
INFO  16:15:36,690 - #47 .
INFO  16:15:36,690 - #44 putp
INFO  16:15:36,690 - #6 (
INFO  16:15:36,690 - #43 0
INFO  16:15:36,690 - #8 ,
INFO  16:15:36,691 - #44 i
INFO  16:15:36,691 - #7 )
INFO  16:15:36,691 - #5 ;
INFO  16:15:36,692 - #44 val
INFO  16:15:36,692 - #47 .
INFO  16:15:36,692 - #44 putn
INFO  16:15:36,692 - #6 (
INFO  16:15:36,692 - #43 0
INFO  16:15:36,692 - #8 ,
INFO  16:15:36,692 - #44 i
INFO  16:15:36,692 - #7 )
INFO  16:15:36,692 - #5 ;
INFO  16:15:36,692 - #4 }
INFO  16:15:36,692 - #44 f
INFO  16:15:36,693 - #6 (
INFO  16:15:36,693 - #44 c
INFO  16:15:36,693 - #8 ,
INFO  16:15:36,693 - #44 x
INFO  16:15:36,694 - #8 ,
INFO  16:15:36,694 - #44 i
INFO  16:15:36,694 - #7 )
INFO  16:15:36,694 - #5 ;
INFO  16:15:36,694 - #14 read
INFO  16:15:36,694 - #6 (
INFO  16:15:36,694 - #44 x
INFO  16:15:36,694 - #7 )
INFO  16:15:36,694 - #5 ;
INFO  16:15:36,694 - #16 for
INFO  16:15:36,694 - #6 (
INFO  16:15:36,694 - #5 ;
INFO  16:15:36,695 - #44 x
INFO  16:15:36,695 - #29 >
INFO  16:15:36,695 - #43 0
INFO  16:15:36,696 - #5 ;
INFO  16:15:36,696 - #7 )
INFO  16:15:36,696 - #3 {
INFO  16:15:36,696 - #45 if
INFO  16:15:36,696 - #6 (
INFO  16:15:36,696 - #44 Num
INFO  16:15:36,696 - #47 .
INFO  16:15:36,696 - #44 ZERO
INFO  16:15:36,696 - #32 <=
INFO  16:15:36,696 - #44 x
INFO  16:15:36,697 - #33 &&
INFO  16:15:36,697 - #44 x
INFO  16:15:36,698 - #31 <
INFO  16:15:36,698 - #44 size
INFO  16:15:36,698 - #7 )
INFO  16:15:36,698 - #3 {
INFO  16:15:36,698 - #44 val
INFO  16:15:36,698 - #47 .
INFO  16:15:36,698 - #44 putp
INFO  16:15:36,698 - #6 (
INFO  16:15:36,698 - #44 val
INFO  16:15:36,698 - #47 .
INFO  16:15:36,698 - #44 getp
INFO  16:15:36,698 - #6 (
INFO  16:15:36,698 - #44 x
INFO  16:15:36,698 - #7 )
INFO  16:15:36,698 - #11 +
INFO  16:15:36,699 - #44 Num
INFO  16:15:36,699 - #47 .
INFO  16:15:36,699 - #44 ONE
INFO  16:15:36,699 - #7 )
INFO  16:15:36,699 - #5 ;
INFO  16:15:36,700 - #4 }
INFO  16:15:36,700 - #46 else
INFO  16:15:36,700 - #45 if
INFO  16:15:36,700 - #6 (
INFO  16:15:36,700 - #25 -
INFO  16:15:36,700 - #44 size
INFO  16:15:36,700 - #31 <
INFO  16:15:36,700 - #44 x
INFO  16:15:36,700 - #33 &&
INFO  16:15:36,700 - #44 x
INFO  16:15:36,700 - #31 <
INFO  16:15:36,700 - #43 0
INFO  16:15:36,700 - #7 )
INFO  16:15:36,700 - #3 {
INFO  16:15:36,700 - #44 val
INFO  16:15:36,701 - #47 .
INFO  16:15:36,701 - #44 putn
INFO  16:15:36,701 - #6 (
INFO  16:15:36,701 - #44 val
INFO  16:15:36,701 - #47 .
INFO  16:15:36,701 - #44 getn
INFO  16:15:36,701 - #6 (
INFO  16:15:36,701 - #25 -
INFO  16:15:36,701 - #44 x
INFO  16:15:36,701 - #7 )
INFO  16:15:36,701 - #11 +
INFO  16:15:36,701 - #43 1
INFO  16:15:36,701 - #7 )
INFO  16:15:36,701 - #5 ;
INFO  16:15:36,701 - #4 }
INFO  16:15:36,701 - #14 read
INFO  16:15:36,702 - #6 (
INFO  16:15:36,702 - #44 x
INFO  16:15:36,702 - #7 )
INFO  16:15:36,702 - #5 ;
INFO  16:15:36,702 - #4 }
INFO  16:15:36,702 - #4 }
INFO  16:15:36,702 - #4 }
