INFO  16:28:51,463 - Compiling source file: D:\faks\milos\4 god 1 sem\pp1\projekat\projekateclipse\MJCompiler\program.mj
INFO  16:28:51,538 - #2 program
INFO  16:28:51,539 - #44 P
INFO  16:28:51,539 - #24 const
INFO  16:28:51,541 - #44 int
INFO  16:28:51,541 - #44 size
INFO  16:28:51,542 - #12 =
INFO  16:28:51,542 - #43 10
INFO  16:28:51,542 - #5 ;
INFO  16:28:51,542 - #21 enum
INFO  16:28:51,543 - #44 Num
INFO  16:28:51,543 - #3 {
INFO  16:28:51,543 - #44 ZERO
INFO  16:28:51,543 - #8 ,
INFO  16:28:51,543 - #44 ONE
INFO  16:28:51,543 - #8 ,
INFO  16:28:51,543 - #44 TEN
INFO  16:28:51,543 - #12 =
INFO  16:28:51,544 - #43 10
INFO  16:28:51,544 - #4 }
INFO  16:28:51,544 - #44 int
INFO  16:28:51,544 - #44 xd
INFO  16:28:51,544 - #8 ,
INFO  16:28:51,546 - #43 3
ERROR 16:28:51,546 - 
Sintaksna greska na liniji 5
INFO  16:28:51,546 - #44 y
INFO  16:28:51,546 - #5 ;
INFO  16:28:51,546 - #23 interface
INFO  16:28:51,546 - #44 I
INFO  16:28:51,547 - #3 {
ERROR 16:28:51,547 - Uspesan oporavak od greske pri definisanju globalnih promenljivih, line : 5
INFO  16:28:51,548 - #44 int
INFO  16:28:51,548 - #44 getp
INFO  16:28:51,548 - #6 (
INFO  16:28:51,549 - #44 int
INFO  16:28:51,549 - #44 i
INFO  16:28:51,549 - #7 )
INFO  16:28:51,549 - #5 ;
INFO  16:28:51,549 - #44 int
INFO  16:28:51,550 - #44 getn
INFO  16:28:51,550 - #6 (
INFO  16:28:51,550 - #44 int
INFO  16:28:51,550 - #44 i
INFO  16:28:51,550 - #7 )
INFO  16:28:51,550 - #5 ;
INFO  16:28:51,550 - #4 }
INFO  16:28:51,550 - #22 class
INFO  16:28:51,551 - #44 Table
INFO  16:28:51,552 - #20 implements
INFO  16:28:51,553 - #44 I
INFO  16:28:51,553 - #3 {
INFO  16:28:51,553 - #44 int
INFO  16:28:51,554 - #44 pos
INFO  16:28:51,554 - #37 [
INFO  16:28:51,554 - #38 ]
INFO  16:28:51,555 - #8 ,
INFO  16:28:51,556 - #44 neg
INFO  16:28:51,556 - #37 [
INFO  16:28:51,556 - #38 ]
INFO  16:28:51,556 - #5 ;
INFO  16:28:51,560 - #3 {
INFO  16:28:51,560 - #13 void
INFO  16:28:51,561 - #44 putp
INFO  16:28:51,561 - #6 (
INFO  16:28:51,561 - #44 int
INFO  16:28:51,561 - #44 a
INFO  16:28:51,561 - #8 ,
INFO  16:28:51,561 - #44 int
INFO  16:28:51,561 - #44 idx
INFO  16:28:51,561 - #7 )
INFO  16:28:51,562 - #3 {
INFO  16:28:51,562 - #44 this
INFO  16:28:51,562 - #47 .
INFO  16:28:51,563 - #44 pos
INFO  16:28:51,563 - #37 [
INFO  16:28:51,563 - #44 idx
INFO  16:28:51,564 - #38 ]
INFO  16:28:51,566 - #12 =
INFO  16:28:51,566 - #44 a
INFO  16:28:51,566 - #5 ;
INFO  16:28:51,566 - #4 }
INFO  16:28:51,566 - #13 void
INFO  16:28:51,567 - #44 putn
INFO  16:28:51,567 - #6 (
INFO  16:28:51,568 - #44 int
INFO  16:28:51,568 - #44 a
INFO  16:28:51,568 - #8 ,
INFO  16:28:51,568 - #44 int
INFO  16:28:51,568 - #44 idx
INFO  16:28:51,568 - #7 )
INFO  16:28:51,568 - #3 {
INFO  16:28:51,568 - #44 this
INFO  16:28:51,568 - #47 .
INFO  16:28:51,568 - #44 neg
INFO  16:28:51,568 - #37 [
INFO  16:28:51,568 - #44 idx
INFO  16:28:51,568 - #38 ]
INFO  16:28:51,568 - #12 =
INFO  16:28:51,569 - #44 a
INFO  16:28:51,569 - #5 ;
INFO  16:28:51,569 - #4 }
INFO  16:28:51,569 - #44 int
INFO  16:28:51,569 - #44 getp
INFO  16:28:51,569 - #6 (
INFO  16:28:51,569 - #44 int
INFO  16:28:51,569 - #44 idx
INFO  16:28:51,569 - #7 )
INFO  16:28:51,569 - #3 {
INFO  16:28:51,569 - #10 return
INFO  16:28:51,569 - #44 pos
INFO  16:28:51,569 - #37 [
INFO  16:28:51,569 - #44 idx
INFO  16:28:51,570 - #38 ]
INFO  16:28:51,570 - #5 ;
INFO  16:28:51,570 - #4 }
INFO  16:28:51,570 - #44 int
INFO  16:28:51,570 - #44 getn
INFO  16:28:51,570 - #6 (
INFO  16:28:51,570 - #44 int
INFO  16:28:51,570 - #44 idx
INFO  16:28:51,570 - #7 )
INFO  16:28:51,570 - #3 {
INFO  16:28:51,570 - #10 return
INFO  16:28:51,570 - #44 neg
INFO  16:28:51,571 - #37 [
INFO  16:28:51,571 - #44 idx
INFO  16:28:51,571 - #38 ]
INFO  16:28:51,571 - #5 ;
INFO  16:28:51,571 - #4 }
INFO  16:28:51,571 - #4 }
INFO  16:28:51,571 - #4 }
INFO  16:28:51,571 - #44 Table
INFO  16:28:51,572 - #44 val
INFO  16:28:51,572 - #5 ;
INFO  16:28:51,572 - #3 {
INFO  16:28:51,572 - #13 void
INFO  16:28:51,572 - #44 f
INFO  16:28:51,572 - #6 (
INFO  16:28:51,572 - #44 char
INFO  16:28:51,572 - #44 ds
INFO  16:28:51,572 - #44 ch
ERROR 16:28:51,572 - 
Sintaksna greska na liniji 23
INFO  16:28:51,572 - #8 ,
INFO  16:28:51,572 - #44 int
INFO  16:28:51,572 - #44 a
INFO  16:28:51,572 - #8 ,
ERROR 16:28:51,572 - Uspesan oporavak od greske pri deklaracija formalnih parametara funkcije, line : 23
INFO  16:28:51,573 - #44 int
INFO  16:28:51,573 - #44 arg
INFO  16:28:51,573 - #7 )
INFO  16:28:51,573 - #44 int
INFO  16:28:51,573 - #44 x
INFO  16:28:51,573 - #5 ;
INFO  16:28:51,573 - #3 {
INFO  16:28:51,573 - #44 x
INFO  16:28:51,573 - #12 =
INFO  16:28:51,574 - #44 arg
INFO  16:28:51,574 - #11 +
INFO  16:28:51,574 - #5 ;
ERROR 16:28:51,574 - 
Sintaksna greska na liniji 26
INFO  16:28:51,574 - #4 }
INFO  16:28:51,574 - #13 void
INFO  16:28:51,574 - #44 main
ERROR 16:28:51,574 - Uspesan oporavak od greske pri dodeli vrednosti, line : 2
INFO  16:28:51,575 - #6 (
INFO  16:28:51,575 - #7 )
INFO  16:28:51,575 - #44 int
INFO  16:28:51,575 - #44 x
INFO  16:28:51,575 - #8 ,
INFO  16:28:51,575 - #44 i
INFO  16:28:51,575 - #5 ;
INFO  16:28:51,575 - #44 char
INFO  16:28:51,575 - #44 c
INFO  16:28:51,575 - #5 ;
INFO  16:28:51,576 - #3 {
INFO  16:28:51,576 - #44 val
INFO  16:28:51,576 - #12 =
INFO  16:28:51,576 - #19 new
INFO  16:28:51,576 - #44 Table
INFO  16:28:51,576 - #5 ;
INFO  16:28:51,576 - #44 val
INFO  16:28:51,576 - #47 .
INFO  16:28:51,576 - #44 pos
INFO  16:28:51,576 - #12 =
INFO  16:28:51,576 - #19 new
INFO  16:28:51,576 - #44 int
INFO  16:28:51,576 - #37 [
INFO  16:28:51,576 - #44 size
INFO  16:28:51,577 - #38 ]
INFO  16:28:51,577 - #5 ;
INFO  16:28:51,577 - #44 val
INFO  16:28:51,577 - #47 .
INFO  16:28:51,577 - #44 neg
INFO  16:28:51,577 - #12 =
INFO  16:28:51,577 - #19 new
INFO  16:28:51,577 - #44 int
INFO  16:28:51,577 - #37 [
INFO  16:28:51,577 - #44 size
INFO  16:28:51,577 - #38 ]
INFO  16:28:51,577 - #5 ;
INFO  16:28:51,577 - #16 for
INFO  16:28:51,577 - #6 (
INFO  16:28:51,577 - #44 i
INFO  16:28:51,577 - #12 =
INFO  16:28:51,577 - #43 0
INFO  16:28:51,577 - #5 ;
INFO  16:28:51,577 - #44 i
INFO  16:28:51,577 - #31 <
INFO  16:28:51,578 - #44 size
INFO  16:28:51,578 - #5 ;
INFO  16:28:51,580 - #44 i
INFO  16:28:51,580 - #35 ++
INFO  16:28:51,580 - #7 )
INFO  16:28:51,580 - #3 {
INFO  16:28:51,580 - #44 val
INFO  16:28:51,580 - #47 .
INFO  16:28:51,580 - #44 putp
INFO  16:28:51,580 - #6 (
INFO  16:28:51,580 - #43 0
INFO  16:28:51,580 - #8 ,
INFO  16:28:51,581 - #44 i
INFO  16:28:51,581 - #7 )
INFO  16:28:51,581 - #5 ;
INFO  16:28:51,581 - #44 val
INFO  16:28:51,581 - #47 .
INFO  16:28:51,581 - #44 putn
INFO  16:28:51,581 - #6 (
INFO  16:28:51,581 - #43 0
INFO  16:28:51,581 - #8 ,
INFO  16:28:51,581 - #44 i
INFO  16:28:51,581 - #7 )
INFO  16:28:51,581 - #5 ;
INFO  16:28:51,581 - #4 }
INFO  16:28:51,581 - #44 f
INFO  16:28:51,582 - #6 (
INFO  16:28:51,582 - #44 c
INFO  16:28:51,582 - #8 ,
INFO  16:28:51,582 - #44 x
INFO  16:28:51,582 - #8 ,
INFO  16:28:51,582 - #44 i
INFO  16:28:51,582 - #7 )
INFO  16:28:51,582 - #5 ;
INFO  16:28:51,582 - #14 read
INFO  16:28:51,582 - #6 (
INFO  16:28:51,582 - #44 x
INFO  16:28:51,582 - #7 )
INFO  16:28:51,582 - #5 ;
INFO  16:28:51,582 - #16 for
INFO  16:28:51,582 - #6 (
INFO  16:28:51,583 - #5 ;
INFO  16:28:51,583 - #44 x
INFO  16:28:51,583 - #29 >
INFO  16:28:51,583 - #43 0
INFO  16:28:51,584 - #5 ;
INFO  16:28:51,584 - #7 )
INFO  16:28:51,584 - #3 {
INFO  16:28:51,584 - #45 if
INFO  16:28:51,584 - #6 (
INFO  16:28:51,584 - #44 Num
INFO  16:28:51,585 - #47 .
INFO  16:28:51,585 - #44 ZERO
INFO  16:28:51,585 - #32 <=
INFO  16:28:51,585 - #44 x
INFO  16:28:51,585 - #33 &&
INFO  16:28:51,585 - #44 x
INFO  16:28:51,585 - #31 <
INFO  16:28:51,586 - #44 size
INFO  16:28:51,586 - #7 )
INFO  16:28:51,586 - #3 {
INFO  16:28:51,586 - #44 val
INFO  16:28:51,586 - #47 .
INFO  16:28:51,586 - #44 putp
INFO  16:28:51,586 - #6 (
INFO  16:28:51,586 - #44 val
INFO  16:28:51,586 - #47 .
INFO  16:28:51,586 - #44 getp
INFO  16:28:51,586 - #6 (
INFO  16:28:51,586 - #44 x
INFO  16:28:51,586 - #7 )
INFO  16:28:51,586 - #11 +
INFO  16:28:51,587 - #44 Num
INFO  16:28:51,587 - #47 .
INFO  16:28:51,587 - #44 ONE
INFO  16:28:51,587 - #7 )
INFO  16:28:51,588 - #5 ;
INFO  16:28:51,588 - #4 }
INFO  16:28:51,588 - #46 else
INFO  16:28:51,588 - #45 if
INFO  16:28:51,588 - #6 (
INFO  16:28:51,588 - #25 -
INFO  16:28:51,588 - #44 size
INFO  16:28:51,589 - #31 <
INFO  16:28:51,589 - #44 x
INFO  16:28:51,589 - #33 &&
INFO  16:28:51,589 - #44 x
INFO  16:28:51,589 - #31 <
INFO  16:28:51,589 - #43 0
INFO  16:28:51,589 - #7 )
INFO  16:28:51,589 - #3 {
INFO  16:28:51,589 - #44 val
INFO  16:28:51,589 - #47 .
INFO  16:28:51,589 - #44 putn
INFO  16:28:51,589 - #6 (
INFO  16:28:51,589 - #44 val
INFO  16:28:51,589 - #47 .
INFO  16:28:51,589 - #44 getn
INFO  16:28:51,589 - #6 (
INFO  16:28:51,589 - #25 -
INFO  16:28:51,589 - #44 x
INFO  16:28:51,589 - #7 )
INFO  16:28:51,589 - #11 +
INFO  16:28:51,589 - #43 1
INFO  16:28:51,589 - #7 )
INFO  16:28:51,589 - #5 ;
INFO  16:28:51,589 - #4 }
INFO  16:28:51,589 - #14 read
INFO  16:28:51,590 - #6 (
INFO  16:28:51,590 - #44 x
INFO  16:28:51,590 - #7 )
INFO  16:28:51,590 - #5 ;
INFO  16:28:51,590 - #4 }
INFO  16:28:51,590 - #4 }
INFO  16:28:51,590 - #4 }
