INFO  16:53:09,639 - Compiling source file: D:\faks\milos\4 god 1 sem\pp1\projekat\projekateclipse\MJCompiler\program.mj
INFO  16:53:09,735 - #2 program
INFO  16:53:09,735 - #44 P
INFO  16:53:09,736 - #24 const
INFO  16:53:09,737 - #44 int
INFO  16:53:09,737 - #44 size
INFO  16:53:09,738 - #12 =
INFO  16:53:09,738 - #43 10
INFO  16:53:09,738 - #5 ;
INFO  16:53:09,739 - #21 enum
INFO  16:53:09,740 - #44 Num
INFO  16:53:09,740 - #3 {
INFO  16:53:09,740 - #44 ZERO
INFO  16:53:09,740 - #8 ,
INFO  16:53:09,740 - #44 ONE
INFO  16:53:09,740 - #8 ,
INFO  16:53:09,740 - #44 TEN
INFO  16:53:09,740 - #12 =
INFO  16:53:09,740 - #43 10
INFO  16:53:09,741 - #4 }
INFO  16:53:09,741 - #44 int
INFO  16:53:09,742 - #44 xd
INFO  16:53:09,742 - #8 ,
INFO  16:53:09,744 - #43 3
ERROR 16:53:09,744 - 
Sintaksna greska na liniji 5
INFO  16:53:09,745 - #44 y
INFO  16:53:09,745 - #5 ;
INFO  16:53:09,745 - #23 interface
INFO  16:53:09,745 - #44 I
INFO  16:53:09,746 - #3 {
ERROR 16:53:09,746 - Uspesan oporavak od greske pri definisanju globalnih promenljivih, line : 5
INFO  16:53:09,747 - #44 int
INFO  16:53:09,749 - #44 getp
INFO  16:53:09,749 - #6 (
INFO  16:53:09,749 - #44 int
INFO  16:53:09,749 - #44 i
INFO  16:53:09,749 - #7 )
INFO  16:53:09,750 - #5 ;
INFO  16:53:09,750 - #44 int
INFO  16:53:09,750 - #44 getn
INFO  16:53:09,750 - #6 (
INFO  16:53:09,750 - #44 int
INFO  16:53:09,750 - #44 i
INFO  16:53:09,750 - #7 )
INFO  16:53:09,750 - #5 ;
INFO  16:53:09,751 - #4 }
INFO  16:53:09,751 - #22 class
INFO  16:53:09,751 - #44 Table
INFO  16:53:09,751 - #20 implements
INFO  16:53:09,752 - #44 I
INFO  16:53:09,752 - #3 {
INFO  16:53:09,752 - #44 int
INFO  16:53:09,753 - #44 pos
INFO  16:53:09,753 - #37 [
INFO  16:53:09,753 - #38 ]
INFO  16:53:09,753 - #8 ,
INFO  16:53:09,754 - #44 neg
INFO  16:53:09,754 - #37 [
INFO  16:53:09,754 - #38 ]
INFO  16:53:09,754 - #5 ;
INFO  16:53:09,754 - #3 {
INFO  16:53:09,754 - #13 void
INFO  16:53:09,755 - #44 putp
INFO  16:53:09,755 - #6 (
INFO  16:53:09,755 - #44 int
INFO  16:53:09,756 - #44 a
INFO  16:53:09,756 - #8 ,
INFO  16:53:09,756 - #44 int
INFO  16:53:09,756 - #44 idx
INFO  16:53:09,756 - #7 )
INFO  16:53:09,756 - #3 {
INFO  16:53:09,756 - #44 this
INFO  16:53:09,757 - #47 .
INFO  16:53:09,757 - #44 pos
INFO  16:53:09,758 - #37 [
INFO  16:53:09,758 - #44 idx
INFO  16:53:09,759 - #38 ]
INFO  16:53:09,760 - #12 =
INFO  16:53:09,761 - #44 a
INFO  16:53:09,761 - #5 ;
INFO  16:53:09,761 - #4 }
INFO  16:53:09,761 - #13 void
INFO  16:53:09,762 - #44 putn
INFO  16:53:09,762 - #6 (
INFO  16:53:09,762 - #44 int
INFO  16:53:09,762 - #44 a
INFO  16:53:09,762 - #8 ,
INFO  16:53:09,762 - #44 int
INFO  16:53:09,762 - #44 idx
INFO  16:53:09,762 - #7 )
INFO  16:53:09,762 - #3 {
INFO  16:53:09,762 - #44 this
INFO  16:53:09,762 - #47 .
INFO  16:53:09,763 - #44 neg
INFO  16:53:09,763 - #37 [
INFO  16:53:09,763 - #44 idx
INFO  16:53:09,763 - #38 ]
INFO  16:53:09,763 - #12 =
INFO  16:53:09,763 - #44 a
INFO  16:53:09,763 - #5 ;
INFO  16:53:09,763 - #4 }
INFO  16:53:09,763 - #44 int
INFO  16:53:09,763 - #44 getp
INFO  16:53:09,764 - #6 (
INFO  16:53:09,764 - #44 int
INFO  16:53:09,764 - #44 idx
INFO  16:53:09,764 - #7 )
INFO  16:53:09,764 - #3 {
INFO  16:53:09,764 - #10 return
INFO  16:53:09,764 - #44 pos
INFO  16:53:09,764 - #37 [
INFO  16:53:09,765 - #44 idx
INFO  16:53:09,765 - #38 ]
INFO  16:53:09,765 - #5 ;
INFO  16:53:09,765 - #4 }
INFO  16:53:09,765 - #44 int
INFO  16:53:09,765 - #44 getn
INFO  16:53:09,765 - #6 (
INFO  16:53:09,765 - #44 int
INFO  16:53:09,765 - #44 idx
INFO  16:53:09,766 - #7 )
INFO  16:53:09,766 - #3 {
INFO  16:53:09,766 - #10 return
INFO  16:53:09,766 - #44 neg
INFO  16:53:09,769 - #37 [
INFO  16:53:09,769 - #44 idx
INFO  16:53:09,770 - #38 ]
INFO  16:53:09,770 - #5 ;
INFO  16:53:09,770 - #4 }
INFO  16:53:09,770 - #4 }
INFO  16:53:09,770 - #4 }
INFO  16:53:09,770 - #44 Table
INFO  16:53:09,771 - #44 val
INFO  16:53:09,771 - #5 ;
INFO  16:53:09,771 - #3 {
INFO  16:53:09,771 - #13 void
INFO  16:53:09,771 - #44 f
INFO  16:53:09,771 - #6 (
INFO  16:53:09,771 - #44 char
INFO  16:53:09,771 - #44 ch
INFO  16:53:09,771 - #8 ,
INFO  16:53:09,771 - #44 int
INFO  16:53:09,771 - #44 a
INFO  16:53:09,771 - #8 ,
INFO  16:53:09,771 - #44 int
INFO  16:53:09,771 - #43 3
ERROR 16:53:09,772 - 
Sintaksna greska na liniji 23
INFO  16:53:09,772 - #44 arg
INFO  16:53:09,772 - #8 ,
INFO  16:53:09,772 - #44 int
INFO  16:53:09,772 - #7 )
INFO  16:53:09,772 - #44 int
INFO  16:53:09,772 - #44 x
INFO  16:53:09,772 - #5 ;
ERROR 16:53:09,772 - Uspesan oporavak od greske pri deklaraciji formalnih parametara funkcije, line : 23
INFO  16:53:09,773 - #3 {
INFO  16:53:09,773 - #44 x
INFO  16:53:09,773 - #12 =
INFO  16:53:09,773 - #44 arg
INFO  16:53:09,773 - #11 +
INFO  16:53:09,773 - #5 ;
ERROR 16:53:09,773 - 
Sintaksna greska na liniji 26
INFO  16:53:09,774 - #4 }
INFO  16:53:09,774 - #13 void
INFO  16:53:09,774 - #44 main
ERROR 16:53:09,774 - Uspesan oporavak od greske pri dodeli vrednost, line : 2
INFO  16:53:09,774 - #6 (
INFO  16:53:09,775 - #7 )
INFO  16:53:09,775 - #44 int
INFO  16:53:09,775 - #44 x
INFO  16:53:09,775 - #8 ,
INFO  16:53:09,775 - #44 i
INFO  16:53:09,775 - #5 ;
INFO  16:53:09,775 - #44 char
INFO  16:53:09,775 - #44 c
INFO  16:53:09,776 - #5 ;
INFO  16:53:09,776 - #3 {
INFO  16:53:09,776 - #44 val
INFO  16:53:09,776 - #12 =
INFO  16:53:09,776 - #19 new
INFO  16:53:09,776 - #44 Table
INFO  16:53:09,776 - #5 ;
INFO  16:53:09,777 - #44 val
INFO  16:53:09,777 - #47 .
INFO  16:53:09,777 - #44 pos
INFO  16:53:09,777 - #12 =
INFO  16:53:09,777 - #19 new
INFO  16:53:09,777 - #44 int
INFO  16:53:09,777 - #37 [
INFO  16:53:09,777 - #44 size
INFO  16:53:09,777 - #38 ]
INFO  16:53:09,777 - #5 ;
INFO  16:53:09,777 - #44 val
INFO  16:53:09,777 - #47 .
INFO  16:53:09,778 - #44 neg
INFO  16:53:09,778 - #12 =
INFO  16:53:09,778 - #19 new
INFO  16:53:09,778 - #44 int
INFO  16:53:09,778 - #37 [
INFO  16:53:09,778 - #44 size
INFO  16:53:09,778 - #38 ]
INFO  16:53:09,778 - #5 ;
INFO  16:53:09,778 - #16 for
INFO  16:53:09,778 - #6 (
INFO  16:53:09,778 - #44 i
INFO  16:53:09,778 - #12 =
INFO  16:53:09,778 - #43 0
INFO  16:53:09,778 - #5 ;
INFO  16:53:09,778 - #44 i
INFO  16:53:09,778 - #31 <
INFO  16:53:09,778 - #44 size
INFO  16:53:09,780 - #5 ;
INFO  16:53:09,781 - #44 i
INFO  16:53:09,781 - #35 ++
INFO  16:53:09,782 - #7 )
INFO  16:53:09,782 - #3 {
INFO  16:53:09,782 - #44 val
INFO  16:53:09,782 - #47 .
INFO  16:53:09,782 - #44 putp
INFO  16:53:09,782 - #6 (
INFO  16:53:09,782 - #43 0
INFO  16:53:09,782 - #8 ,
INFO  16:53:09,782 - #44 i
INFO  16:53:09,783 - #7 )
INFO  16:53:09,783 - #5 ;
INFO  16:53:09,783 - #44 val
INFO  16:53:09,783 - #47 .
INFO  16:53:09,783 - #44 putn
INFO  16:53:09,783 - #6 (
INFO  16:53:09,783 - #43 0
INFO  16:53:09,783 - #8 ,
INFO  16:53:09,783 - #44 i
INFO  16:53:09,783 - #7 )
INFO  16:53:09,783 - #5 ;
INFO  16:53:09,783 - #4 }
INFO  16:53:09,784 - #44 f
INFO  16:53:09,784 - #6 (
INFO  16:53:09,784 - #44 c
INFO  16:53:09,784 - #8 ,
INFO  16:53:09,784 - #44 x
INFO  16:53:09,784 - #8 ,
INFO  16:53:09,784 - #44 i
INFO  16:53:09,784 - #7 )
INFO  16:53:09,785 - #5 ;
INFO  16:53:09,785 - #14 read
INFO  16:53:09,785 - #6 (
INFO  16:53:09,785 - #44 x
INFO  16:53:09,785 - #7 )
INFO  16:53:09,785 - #5 ;
INFO  16:53:09,785 - #16 for
INFO  16:53:09,785 - #6 (
INFO  16:53:09,785 - #5 ;
INFO  16:53:09,786 - #44 x
INFO  16:53:09,786 - #29 >
INFO  16:53:09,786 - #43 0
INFO  16:53:09,787 - #5 ;
INFO  16:53:09,787 - #7 )
INFO  16:53:09,787 - #3 {
INFO  16:53:09,788 - #45 if
INFO  16:53:09,788 - #6 (
INFO  16:53:09,788 - #44 Num
INFO  16:53:09,788 - #47 .
INFO  16:53:09,788 - #44 ZERO
INFO  16:53:09,788 - #32 <=
INFO  16:53:09,788 - #44 x
INFO  16:53:09,789 - #33 &&
INFO  16:53:09,789 - #44 x
INFO  16:53:09,789 - #31 <
INFO  16:53:09,789 - #44 size
INFO  16:53:09,789 - #7 )
INFO  16:53:09,790 - #3 {
INFO  16:53:09,790 - #44 val
INFO  16:53:09,790 - #47 .
INFO  16:53:09,790 - #44 putp
INFO  16:53:09,790 - #6 (
INFO  16:53:09,790 - #44 val
INFO  16:53:09,790 - #47 .
INFO  16:53:09,791 - #44 getp
INFO  16:53:09,791 - #6 (
INFO  16:53:09,791 - #44 x
INFO  16:53:09,791 - #7 )
INFO  16:53:09,791 - #11 +
INFO  16:53:09,791 - #44 Num
INFO  16:53:09,792 - #47 .
INFO  16:53:09,792 - #44 ONE
INFO  16:53:09,792 - #7 )
INFO  16:53:09,793 - #5 ;
INFO  16:53:09,793 - #4 }
INFO  16:53:09,793 - #46 else
INFO  16:53:09,793 - #45 if
INFO  16:53:09,793 - #6 (
INFO  16:53:09,793 - #25 -
INFO  16:53:09,793 - #44 size
INFO  16:53:09,794 - #31 <
INFO  16:53:09,794 - #44 x
INFO  16:53:09,794 - #33 &&
INFO  16:53:09,794 - #44 x
INFO  16:53:09,794 - #31 <
INFO  16:53:09,794 - #43 0
INFO  16:53:09,795 - #7 )
INFO  16:53:09,795 - #3 {
INFO  16:53:09,795 - #44 val
INFO  16:53:09,795 - #47 .
INFO  16:53:09,795 - #44 putn
INFO  16:53:09,795 - #6 (
INFO  16:53:09,795 - #44 val
INFO  16:53:09,795 - #47 .
INFO  16:53:09,795 - #44 getn
INFO  16:53:09,795 - #6 (
INFO  16:53:09,795 - #25 -
INFO  16:53:09,795 - #44 x
INFO  16:53:09,795 - #7 )
INFO  16:53:09,795 - #11 +
INFO  16:53:09,795 - #43 1
INFO  16:53:09,795 - #7 )
INFO  16:53:09,795 - #5 ;
INFO  16:53:09,796 - #4 }
INFO  16:53:09,796 - #14 read
INFO  16:53:09,796 - #6 (
INFO  16:53:09,796 - #44 x
INFO  16:53:09,796 - #7 )
INFO  16:53:09,796 - #5 ;
INFO  16:53:09,796 - #4 }
INFO  16:53:09,796 - #4 }
INFO  16:53:09,796 - #4 }
