INFO  16:34:33,390 - Compiling source file: D:\faks\milos\4 god 1 sem\pp1\projekat\projekateclipse\MJCompiler\program.mj
INFO  16:34:33,467 - #2 program
INFO  16:34:33,468 - #44 P
INFO  16:34:33,468 - #24 const
INFO  16:34:33,470 - #44 int
INFO  16:34:33,470 - #44 size
INFO  16:34:33,471 - #12 =
INFO  16:34:33,472 - #43 10
INFO  16:34:33,472 - #5 ;
INFO  16:34:33,472 - #21 enum
INFO  16:34:33,472 - #44 Num
INFO  16:34:33,472 - #3 {
INFO  16:34:33,472 - #44 ZERO
INFO  16:34:33,472 - #8 ,
INFO  16:34:33,473 - #44 ONE
INFO  16:34:33,473 - #8 ,
INFO  16:34:33,473 - #44 TEN
INFO  16:34:33,473 - #12 =
INFO  16:34:33,473 - #43 10
INFO  16:34:33,473 - #4 }
INFO  16:34:33,473 - #44 int
INFO  16:34:33,474 - #44 xd
INFO  16:34:33,475 - #8 ,
INFO  16:34:33,476 - #43 3
ERROR 16:34:33,477 - 
Sintaksna greska na liniji 5
INFO  16:34:33,477 - #44 y
INFO  16:34:33,477 - #5 ;
INFO  16:34:33,477 - #23 interface
INFO  16:34:33,477 - #44 I
INFO  16:34:33,477 - #3 {
ERROR 16:34:33,478 - Uspesan oporavak od greske pri definisanju globalnih promenljivih, line : 5
INFO  16:34:33,479 - #44 int
INFO  16:34:33,479 - #44 getp
INFO  16:34:33,480 - #6 (
INFO  16:34:33,480 - #44 int
INFO  16:34:33,480 - #44 i
INFO  16:34:33,480 - #7 )
INFO  16:34:33,480 - #5 ;
INFO  16:34:33,480 - #44 int
INFO  16:34:33,481 - #44 getn
INFO  16:34:33,481 - #6 (
INFO  16:34:33,481 - #44 int
INFO  16:34:33,481 - #44 i
INFO  16:34:33,481 - #7 )
INFO  16:34:33,481 - #5 ;
INFO  16:34:33,481 - #4 }
INFO  16:34:33,481 - #22 class
INFO  16:34:33,482 - #44 Table
INFO  16:34:33,482 - #20 implements
INFO  16:34:33,483 - #44 I
INFO  16:34:33,483 - #3 {
INFO  16:34:33,483 - #44 int
INFO  16:34:33,484 - #44 pos
INFO  16:34:33,484 - #37 [
INFO  16:34:33,484 - #38 ]
INFO  16:34:33,485 - #8 ,
INFO  16:34:33,486 - #44 neg
INFO  16:34:33,486 - #37 [
INFO  16:34:33,486 - #38 ]
INFO  16:34:33,486 - #5 ;
INFO  16:34:33,490 - #3 {
INFO  16:34:33,490 - #13 void
INFO  16:34:33,490 - #44 putp
INFO  16:34:33,491 - #6 (
INFO  16:34:33,491 - #44 int
INFO  16:34:33,491 - #44 a
INFO  16:34:33,491 - #8 ,
INFO  16:34:33,491 - #44 int
INFO  16:34:33,491 - #44 idx
INFO  16:34:33,491 - #7 )
INFO  16:34:33,491 - #3 {
INFO  16:34:33,491 - #44 this
INFO  16:34:33,492 - #47 .
INFO  16:34:33,493 - #44 pos
INFO  16:34:33,493 - #37 [
INFO  16:34:33,493 - #44 idx
INFO  16:34:33,494 - #38 ]
INFO  16:34:33,496 - #12 =
INFO  16:34:33,496 - #44 a
INFO  16:34:33,496 - #5 ;
INFO  16:34:33,496 - #4 }
INFO  16:34:33,496 - #13 void
INFO  16:34:33,497 - #44 putn
INFO  16:34:33,497 - #6 (
INFO  16:34:33,497 - #44 int
INFO  16:34:33,497 - #44 a
INFO  16:34:33,497 - #8 ,
INFO  16:34:33,498 - #44 int
INFO  16:34:33,498 - #44 idx
INFO  16:34:33,498 - #7 )
INFO  16:34:33,498 - #3 {
INFO  16:34:33,498 - #44 this
INFO  16:34:33,498 - #47 .
INFO  16:34:33,498 - #44 neg
INFO  16:34:33,498 - #37 [
INFO  16:34:33,498 - #44 idx
INFO  16:34:33,498 - #38 ]
INFO  16:34:33,498 - #12 =
INFO  16:34:33,498 - #44 a
INFO  16:34:33,498 - #5 ;
INFO  16:34:33,499 - #4 }
INFO  16:34:33,499 - #44 int
INFO  16:34:33,499 - #44 getp
INFO  16:34:33,499 - #6 (
INFO  16:34:33,499 - #44 int
INFO  16:34:33,499 - #44 idx
INFO  16:34:33,499 - #7 )
INFO  16:34:33,499 - #3 {
INFO  16:34:33,499 - #10 return
INFO  16:34:33,499 - #44 pos
INFO  16:34:33,499 - #37 [
INFO  16:34:33,499 - #44 idx
INFO  16:34:33,499 - #38 ]
INFO  16:34:33,499 - #5 ;
INFO  16:34:33,500 - #4 }
INFO  16:34:33,500 - #44 int
INFO  16:34:33,500 - #44 getn
INFO  16:34:33,500 - #6 (
INFO  16:34:33,500 - #44 int
INFO  16:34:33,500 - #44 idx
INFO  16:34:33,500 - #7 )
INFO  16:34:33,500 - #3 {
INFO  16:34:33,500 - #10 return
INFO  16:34:33,500 - #44 neg
INFO  16:34:33,500 - #37 [
INFO  16:34:33,500 - #44 idx
INFO  16:34:33,500 - #38 ]
INFO  16:34:33,500 - #5 ;
INFO  16:34:33,501 - #4 }
INFO  16:34:33,501 - #4 }
INFO  16:34:33,501 - #4 }
INFO  16:34:33,501 - #44 Table
INFO  16:34:33,501 - #44 val
INFO  16:34:33,501 - #5 ;
INFO  16:34:33,501 - #3 {
INFO  16:34:33,502 - #13 void
INFO  16:34:33,502 - #44 f
INFO  16:34:33,502 - #6 (
INFO  16:34:33,502 - #44 char
INFO  16:34:33,502 - #44 ch
INFO  16:34:33,502 - #8 ,
INFO  16:34:33,502 - #44 int
INFO  16:34:33,502 - #44 a
INFO  16:34:33,502 - #8 ,
INFO  16:34:33,502 - #44 int
INFO  16:34:33,502 - #44 arg
INFO  16:34:33,502 - #8 ,
INFO  16:34:33,502 - #44 int
INFO  16:34:33,502 - #7 )
ERROR 16:34:33,502 - 
Sintaksna greska na liniji 23
INFO  16:34:33,502 - #44 int
INFO  16:34:33,502 - #44 x
INFO  16:34:33,502 - #5 ;
ERROR 16:34:33,502 - Uspesan oporavak od greske pri deklaracija formalnih parametara funkcije, line : 23
INFO  16:34:33,503 - #3 {
INFO  16:34:33,503 - #44 x
INFO  16:34:33,503 - #12 =
INFO  16:34:33,503 - #44 arg
INFO  16:34:33,503 - #11 +
INFO  16:34:33,503 - #5 ;
ERROR 16:34:33,503 - 
Sintaksna greska na liniji 26
INFO  16:34:33,504 - #4 }
INFO  16:34:33,504 - #13 void
INFO  16:34:33,504 - #44 main
ERROR 16:34:33,504 - Uspesan oporavak od greske pri dodeli vrednost, line : 2
INFO  16:34:33,504 - #6 (
INFO  16:34:33,504 - #7 )
INFO  16:34:33,505 - #44 int
INFO  16:34:33,505 - #44 x
INFO  16:34:33,505 - #8 ,
INFO  16:34:33,505 - #44 i
INFO  16:34:33,505 - #5 ;
INFO  16:34:33,505 - #44 char
INFO  16:34:33,505 - #44 c
INFO  16:34:33,505 - #5 ;
INFO  16:34:33,505 - #3 {
INFO  16:34:33,505 - #44 val
INFO  16:34:33,505 - #12 =
INFO  16:34:33,506 - #19 new
INFO  16:34:33,506 - #44 Table
INFO  16:34:33,506 - #5 ;
INFO  16:34:33,506 - #44 val
INFO  16:34:33,506 - #47 .
INFO  16:34:33,506 - #44 pos
INFO  16:34:33,506 - #12 =
INFO  16:34:33,507 - #19 new
INFO  16:34:33,507 - #44 int
INFO  16:34:33,507 - #37 [
INFO  16:34:33,507 - #44 size
INFO  16:34:33,507 - #38 ]
INFO  16:34:33,507 - #5 ;
INFO  16:34:33,507 - #44 val
INFO  16:34:33,507 - #47 .
INFO  16:34:33,507 - #44 neg
INFO  16:34:33,507 - #12 =
INFO  16:34:33,507 - #19 new
INFO  16:34:33,507 - #44 int
INFO  16:34:33,507 - #37 [
INFO  16:34:33,507 - #44 size
INFO  16:34:33,507 - #38 ]
INFO  16:34:33,507 - #5 ;
INFO  16:34:33,507 - #16 for
INFO  16:34:33,507 - #6 (
INFO  16:34:33,507 - #44 i
INFO  16:34:33,507 - #12 =
INFO  16:34:33,508 - #43 0
INFO  16:34:33,508 - #5 ;
INFO  16:34:33,508 - #44 i
INFO  16:34:33,508 - #31 <
INFO  16:34:33,508 - #44 size
INFO  16:34:33,509 - #5 ;
INFO  16:34:33,510 - #44 i
INFO  16:34:33,510 - #35 ++
INFO  16:34:33,510 - #7 )
INFO  16:34:33,510 - #3 {
INFO  16:34:33,510 - #44 val
INFO  16:34:33,510 - #47 .
INFO  16:34:33,510 - #44 putp
INFO  16:34:33,511 - #6 (
INFO  16:34:33,511 - #43 0
INFO  16:34:33,511 - #8 ,
INFO  16:34:33,511 - #44 i
INFO  16:34:33,511 - #7 )
INFO  16:34:33,511 - #5 ;
INFO  16:34:33,511 - #44 val
INFO  16:34:33,512 - #47 .
INFO  16:34:33,512 - #44 putn
INFO  16:34:33,512 - #6 (
INFO  16:34:33,512 - #43 0
INFO  16:34:33,512 - #8 ,
INFO  16:34:33,512 - #44 i
INFO  16:34:33,512 - #7 )
INFO  16:34:33,512 - #5 ;
INFO  16:34:33,512 - #4 }
INFO  16:34:33,512 - #44 f
INFO  16:34:33,512 - #6 (
INFO  16:34:33,512 - #44 c
INFO  16:34:33,512 - #8 ,
INFO  16:34:33,513 - #44 x
INFO  16:34:33,513 - #8 ,
INFO  16:34:33,513 - #44 i
INFO  16:34:33,513 - #7 )
INFO  16:34:33,513 - #5 ;
INFO  16:34:33,513 - #14 read
INFO  16:34:33,513 - #6 (
INFO  16:34:33,513 - #44 x
INFO  16:34:33,513 - #7 )
INFO  16:34:33,513 - #5 ;
INFO  16:34:33,513 - #16 for
INFO  16:34:33,513 - #6 (
INFO  16:34:33,513 - #5 ;
INFO  16:34:33,514 - #44 x
INFO  16:34:33,514 - #29 >
INFO  16:34:33,514 - #43 0
INFO  16:34:33,514 - #5 ;
INFO  16:34:33,514 - #7 )
INFO  16:34:33,515 - #3 {
INFO  16:34:33,515 - #45 if
INFO  16:34:33,515 - #6 (
INFO  16:34:33,515 - #44 Num
INFO  16:34:33,515 - #47 .
INFO  16:34:33,515 - #44 ZERO
INFO  16:34:33,515 - #32 <=
INFO  16:34:33,515 - #44 x
INFO  16:34:33,516 - #33 &&
INFO  16:34:33,516 - #44 x
INFO  16:34:33,516 - #31 <
INFO  16:34:33,516 - #44 size
INFO  16:34:33,516 - #7 )
INFO  16:34:33,516 - #3 {
INFO  16:34:33,516 - #44 val
INFO  16:34:33,516 - #47 .
INFO  16:34:33,516 - #44 putp
INFO  16:34:33,516 - #6 (
INFO  16:34:33,517 - #44 val
INFO  16:34:33,517 - #47 .
INFO  16:34:33,517 - #44 getp
INFO  16:34:33,517 - #6 (
INFO  16:34:33,517 - #44 x
INFO  16:34:33,517 - #7 )
INFO  16:34:33,517 - #11 +
INFO  16:34:33,517 - #44 Num
INFO  16:34:33,518 - #47 .
INFO  16:34:33,518 - #44 ONE
INFO  16:34:33,518 - #7 )
INFO  16:34:33,518 - #5 ;
INFO  16:34:33,518 - #4 }
INFO  16:34:33,518 - #46 else
INFO  16:34:33,518 - #45 if
INFO  16:34:33,518 - #6 (
INFO  16:34:33,518 - #25 -
INFO  16:34:33,518 - #44 size
INFO  16:34:33,519 - #31 <
INFO  16:34:33,519 - #44 x
INFO  16:34:33,519 - #33 &&
INFO  16:34:33,519 - #44 x
INFO  16:34:33,519 - #31 <
INFO  16:34:33,520 - #43 0
INFO  16:34:33,520 - #7 )
INFO  16:34:33,520 - #3 {
INFO  16:34:33,520 - #44 val
INFO  16:34:33,520 - #47 .
INFO  16:34:33,520 - #44 putn
INFO  16:34:33,520 - #6 (
INFO  16:34:33,520 - #44 val
INFO  16:34:33,520 - #47 .
INFO  16:34:33,520 - #44 getn
INFO  16:34:33,520 - #6 (
INFO  16:34:33,520 - #25 -
INFO  16:34:33,520 - #44 x
INFO  16:34:33,520 - #7 )
INFO  16:34:33,520 - #11 +
INFO  16:34:33,520 - #43 1
INFO  16:34:33,520 - #7 )
INFO  16:34:33,520 - #5 ;
INFO  16:34:33,520 - #4 }
INFO  16:34:33,520 - #14 read
INFO  16:34:33,521 - #6 (
INFO  16:34:33,521 - #44 x
INFO  16:34:33,521 - #7 )
INFO  16:34:33,521 - #5 ;
INFO  16:34:33,521 - #4 }
INFO  16:34:33,521 - #4 }
INFO  16:34:33,521 - #4 }
