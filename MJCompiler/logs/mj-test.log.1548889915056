INFO  00:11:45,602 - Compiling source file: D:\faks\milos\4 god 1 sem\pp1\projekat\projekateclipse\MJCompiler\program.mj
INFO  00:11:45,681 - #2 program
INFO  00:11:45,682 - #44 P
INFO  00:11:45,682 - #24 const
INFO  00:11:45,683 - #44 int
INFO  00:11:45,683 - #44 size
INFO  00:11:45,685 - #12 =
INFO  00:11:45,685 - #43 10
INFO  00:11:45,685 - #5 ;
INFO  00:11:45,686 - #21 enum
INFO  00:11:45,686 - #44 Num
INFO  00:11:45,686 - #3 {
INFO  00:11:45,686 - #44 ZERO
INFO  00:11:45,686 - #8 ,
INFO  00:11:45,686 - #44 ONE
INFO  00:11:45,686 - #8 ,
INFO  00:11:45,687 - #44 TEN
INFO  00:11:45,687 - #12 =
INFO  00:11:45,687 - #43 10
INFO  00:11:45,687 - #4 }
INFO  00:11:45,687 - #44 int
INFO  00:11:45,688 - #44 xd
INFO  00:11:45,688 - #47 .
ERROR 00:11:45,688 - 
Sintaksna greska na liniji 5
INFO  00:11:45,689 - #5 ;
INFO  00:11:45,689 - #23 interface
INFO  00:11:45,689 - #44 I
INFO  00:11:45,689 - #3 {
ERROR 00:11:45,689 - Uspesan oporavak od greske pri definisanju globalnih promenljivih, line : 5
INFO  00:11:45,690 - #44 int
INFO  00:11:45,691 - #44 getp
INFO  00:11:45,692 - #6 (
INFO  00:11:45,692 - #44 int
INFO  00:11:45,692 - #44 i
INFO  00:11:45,692 - #7 )
INFO  00:11:45,693 - #5 ;
INFO  00:11:45,693 - #44 int
INFO  00:11:45,694 - #44 getn
INFO  00:11:45,694 - #6 (
INFO  00:11:45,694 - #44 int
INFO  00:11:45,694 - #44 i
INFO  00:11:45,694 - #7 )
INFO  00:11:45,695 - #5 ;
INFO  00:11:45,695 - #4 }
INFO  00:11:45,695 - #22 class
INFO  00:11:45,696 - #44 Table
INFO  00:11:45,696 - #44 exteds
ERROR 00:11:45,696 - 
Sintaksna greska na liniji 11
INFO  00:11:45,697 - #44 d
INFO  00:11:45,697 - #20 implements
INFO  00:11:45,697 - #44 I
INFO  00:11:45,697 - #3 {
INFO  00:11:45,697 - #44 int
ERROR 00:11:45,697 - Uspesan oporavak od greske pri deklaraciji prosirenja klase, line : 11
INFO  00:11:45,700 - #44 pos
INFO  00:11:45,700 - #37 [
INFO  00:11:45,700 - #38 ]
INFO  00:11:45,700 - #8 ,
INFO  00:11:45,701 - #44 neg
INFO  00:11:45,701 - #37 [
INFO  00:11:45,705 - #38 ]
INFO  00:11:45,706 - #5 ;
INFO  00:11:45,706 - #44 int
INFO  00:11:45,707 - #44 x
INFO  00:11:45,707 - #8 ,
INFO  00:11:45,707 - #44 dsadsa
INFO  00:11:45,707 - #5 ;
INFO  00:11:45,707 - #3 {
INFO  00:11:45,708 - #13 void
INFO  00:11:45,709 - #44 putp
INFO  00:11:45,709 - #6 (
INFO  00:11:45,709 - #44 int
INFO  00:11:45,709 - #44 a
INFO  00:11:45,709 - #8 ,
INFO  00:11:45,709 - #44 int
INFO  00:11:45,709 - #44 idx
INFO  00:11:45,709 - #7 )
INFO  00:11:45,710 - #3 {
INFO  00:11:45,710 - #44 this
INFO  00:11:45,711 - #47 .
INFO  00:11:45,712 - #44 pos
INFO  00:11:45,712 - #37 [
INFO  00:11:45,712 - #44 idx
INFO  00:11:45,712 - #38 ]
INFO  00:11:45,715 - #12 =
INFO  00:11:45,716 - #44 a
INFO  00:11:45,716 - #5 ;
INFO  00:11:45,716 - #4 }
INFO  00:11:45,716 - #13 void
INFO  00:11:45,719 - #44 putn
INFO  00:11:45,720 - #6 (
INFO  00:11:45,720 - #44 int
INFO  00:11:45,720 - #44 a
INFO  00:11:45,720 - #8 ,
INFO  00:11:45,720 - #44 int
INFO  00:11:45,720 - #44 idx
INFO  00:11:45,720 - #7 )
INFO  00:11:45,721 - #3 {
INFO  00:11:45,721 - #44 this
INFO  00:11:45,721 - #47 .
INFO  00:11:45,721 - #44 neg
INFO  00:11:45,721 - #37 [
INFO  00:11:45,721 - #44 idx
INFO  00:11:45,721 - #38 ]
INFO  00:11:45,721 - #12 =
INFO  00:11:45,721 - #44 a
INFO  00:11:45,722 - #5 ;
INFO  00:11:45,722 - #4 }
INFO  00:11:45,722 - #44 int
INFO  00:11:45,722 - #44 getp
INFO  00:11:45,722 - #6 (
INFO  00:11:45,722 - #44 int
INFO  00:11:45,722 - #44 idx
INFO  00:11:45,722 - #7 )
INFO  00:11:45,722 - #3 {
INFO  00:11:45,722 - #10 return
INFO  00:11:45,723 - #44 pos
INFO  00:11:45,723 - #37 [
INFO  00:11:45,723 - #44 idx
INFO  00:11:45,723 - #38 ]
INFO  00:11:45,723 - #5 ;
INFO  00:11:45,723 - #4 }
INFO  00:11:45,723 - #44 int
INFO  00:11:45,723 - #44 getn
INFO  00:11:45,723 - #6 (
INFO  00:11:45,723 - #44 int
INFO  00:11:45,723 - #44 idx
INFO  00:11:45,723 - #7 )
INFO  00:11:45,723 - #3 {
INFO  00:11:45,724 - #10 return
INFO  00:11:45,724 - #44 neg
INFO  00:11:45,724 - #37 [
INFO  00:11:45,724 - #44 idx
INFO  00:11:45,724 - #38 ]
INFO  00:11:45,724 - #5 ;
INFO  00:11:45,724 - #4 }
INFO  00:11:45,724 - #4 }
INFO  00:11:45,724 - #4 }
INFO  00:11:45,725 - #44 Table
INFO  00:11:45,726 - #44 val
INFO  00:11:45,726 - #5 ;
INFO  00:11:45,726 - #3 {
INFO  00:11:45,726 - #13 void
INFO  00:11:45,726 - #44 f
INFO  00:11:45,727 - #6 (
INFO  00:11:45,727 - #44 char
INFO  00:11:45,727 - #44 ch
INFO  00:11:45,727 - #8 ,
INFO  00:11:45,727 - #44 int
INFO  00:11:45,727 - #44 a
INFO  00:11:45,727 - #8 ,
INFO  00:11:45,727 - #44 int
INFO  00:11:45,727 - #44 arg
INFO  00:11:45,727 - #7 )
INFO  00:11:45,727 - #44 int
INFO  00:11:45,727 - #44 x
INFO  00:11:45,728 - #5 ;
INFO  00:11:45,728 - #3 {
INFO  00:11:45,728 - #44 x
INFO  00:11:45,728 - #12 =
INFO  00:11:45,728 - #44 arg
INFO  00:11:45,728 - #5 ;
INFO  00:11:45,728 - #4 }
INFO  00:11:45,728 - #13 void
INFO  00:11:45,729 - #44 main
INFO  00:11:45,729 - #6 (
INFO  00:11:45,729 - #7 )
INFO  00:11:45,729 - #44 int
INFO  00:11:45,730 - #44 x
INFO  00:11:45,730 - #8 ,
INFO  00:11:45,730 - #44 i
INFO  00:11:45,730 - #5 ;
INFO  00:11:45,730 - #44 char
INFO  00:11:45,730 - #44 c
INFO  00:11:45,730 - #5 ;
INFO  00:11:45,730 - #3 {
INFO  00:11:45,730 - #44 val
INFO  00:11:45,730 - #12 =
INFO  00:11:45,730 - #19 new
INFO  00:11:45,730 - #44 Table
INFO  00:11:45,730 - #5 ;
INFO  00:11:45,731 - #44 val
INFO  00:11:45,731 - #47 .
INFO  00:11:45,731 - #44 pos
INFO  00:11:45,731 - #12 =
INFO  00:11:45,731 - #19 new
INFO  00:11:45,731 - #44 int
INFO  00:11:45,732 - #37 [
INFO  00:11:45,732 - #44 size
INFO  00:11:45,732 - #38 ]
INFO  00:11:45,732 - #5 ;
INFO  00:11:45,732 - #44 val
INFO  00:11:45,732 - #47 .
INFO  00:11:45,732 - #44 neg
INFO  00:11:45,732 - #12 =
INFO  00:11:45,732 - #19 new
INFO  00:11:45,732 - #44 int
INFO  00:11:45,732 - #37 [
INFO  00:11:45,732 - #44 size
INFO  00:11:45,733 - #38 ]
INFO  00:11:45,733 - #5 ;
INFO  00:11:45,733 - #16 for
INFO  00:11:45,733 - #6 (
INFO  00:11:45,733 - #44 i
INFO  00:11:45,733 - #12 =
INFO  00:11:45,733 - #43 0
INFO  00:11:45,733 - #5 ;
INFO  00:11:45,733 - #44 i
INFO  00:11:45,733 - #31 <
INFO  00:11:45,733 - #44 size
INFO  00:11:45,734 - #5 ;
INFO  00:11:45,738 - #44 i
INFO  00:11:45,738 - #35 ++
INFO  00:11:45,738 - #7 )
INFO  00:11:45,738 - #3 {
INFO  00:11:45,738 - #44 val
INFO  00:11:45,738 - #47 .
INFO  00:11:45,738 - #44 putp
INFO  00:11:45,738 - #6 (
INFO  00:11:45,738 - #43 0
INFO  00:11:45,738 - #8 ,
INFO  00:11:45,739 - #44 i
INFO  00:11:45,739 - #7 )
INFO  00:11:45,739 - #5 ;
INFO  00:11:45,739 - #44 val
INFO  00:11:45,739 - #47 .
INFO  00:11:45,740 - #44 putn
INFO  00:11:45,740 - #6 (
INFO  00:11:45,740 - #43 0
INFO  00:11:45,740 - #8 ,
INFO  00:11:45,740 - #44 i
INFO  00:11:45,740 - #7 )
INFO  00:11:45,740 - #5 ;
INFO  00:11:45,740 - #4 }
INFO  00:11:45,740 - #44 f
INFO  00:11:45,740 - #6 (
INFO  00:11:45,741 - #44 c
INFO  00:11:45,741 - #8 ,
INFO  00:11:45,741 - #44 x
INFO  00:11:45,741 - #8 ,
INFO  00:11:45,741 - #44 i
INFO  00:11:45,741 - #7 )
INFO  00:11:45,741 - #5 ;
INFO  00:11:45,741 - #14 read
INFO  00:11:45,741 - #6 (
INFO  00:11:45,741 - #44 x
INFO  00:11:45,741 - #7 )
INFO  00:11:45,741 - #5 ;
INFO  00:11:45,741 - #16 for
INFO  00:11:45,741 - #6 (
INFO  00:11:45,741 - #5 ;
INFO  00:11:45,742 - #44 x
INFO  00:11:45,742 - #29 >
INFO  00:11:45,742 - #43 0
INFO  00:11:45,742 - #5 ;
INFO  00:11:45,743 - #7 )
INFO  00:11:45,743 - #3 {
INFO  00:11:45,743 - #45 if
INFO  00:11:45,743 - #6 (
INFO  00:11:45,743 - #44 Num
INFO  00:11:45,743 - #47 .
INFO  00:11:45,743 - #44 ZERO
INFO  00:11:45,743 - #32 <=
INFO  00:11:45,743 - #44 x
INFO  00:11:45,744 - #33 &&
INFO  00:11:45,744 - #44 x
INFO  00:11:45,744 - #31 <
INFO  00:11:45,744 - #44 size
INFO  00:11:45,744 - #7 )
INFO  00:11:45,744 - #3 {
INFO  00:11:45,744 - #44 val
INFO  00:11:45,745 - #47 .
INFO  00:11:45,745 - #44 putp
INFO  00:11:45,745 - #6 (
INFO  00:11:45,745 - #44 val
INFO  00:11:45,745 - #47 .
INFO  00:11:45,745 - #44 getp
INFO  00:11:45,745 - #6 (
INFO  00:11:45,745 - #44 x
INFO  00:11:45,745 - #7 )
INFO  00:11:45,745 - #11 +
INFO  00:11:45,745 - #44 Num
INFO  00:11:45,746 - #47 .
INFO  00:11:45,746 - #44 ONE
INFO  00:11:45,746 - #7 )
INFO  00:11:45,747 - #5 ;
INFO  00:11:45,747 - #4 }
INFO  00:11:45,747 - #46 else
INFO  00:11:45,747 - #45 if
INFO  00:11:45,747 - #6 (
INFO  00:11:45,747 - #25 -
INFO  00:11:45,747 - #44 size
INFO  00:11:45,747 - #31 <
INFO  00:11:45,747 - #44 x
INFO  00:11:45,747 - #33 &&
INFO  00:11:45,747 - #44 x
INFO  00:11:45,747 - #31 <
INFO  00:11:45,747 - #43 0
INFO  00:11:45,747 - #7 )
INFO  00:11:45,748 - #3 {
INFO  00:11:45,748 - #44 val
INFO  00:11:45,748 - #47 .
INFO  00:11:45,748 - #44 putn
INFO  00:11:45,748 - #6 (
INFO  00:11:45,748 - #44 val
INFO  00:11:45,748 - #47 .
INFO  00:11:45,748 - #44 getn
INFO  00:11:45,748 - #6 (
INFO  00:11:45,748 - #25 -
INFO  00:11:45,748 - #44 x
INFO  00:11:45,748 - #7 )
INFO  00:11:45,748 - #11 +
INFO  00:11:45,748 - #43 1
INFO  00:11:45,748 - #7 )
INFO  00:11:45,748 - #5 ;
INFO  00:11:45,748 - #4 }
INFO  00:11:45,748 - #14 read
INFO  00:11:45,749 - #6 (
INFO  00:11:45,749 - #44 x
INFO  00:11:45,749 - #7 )
INFO  00:11:45,749 - #5 ;
INFO  00:11:45,749 - #4 }
INFO  00:11:45,749 - #4 }
INFO  00:11:45,749 - #4 }
INFO  00:11:45,750 - =================================================================================
