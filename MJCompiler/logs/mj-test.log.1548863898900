INFO  16:57:30,758 - Compiling source file: D:\faks\milos\4 god 1 sem\pp1\projekat\projekateclipse\MJCompiler\program.mj
INFO  16:57:30,836 - #2 program
INFO  16:57:30,836 - #44 P
INFO  16:57:30,836 - #24 const
INFO  16:57:30,837 - #44 int
INFO  16:57:30,837 - #44 size
INFO  16:57:30,838 - #12 =
INFO  16:57:30,838 - #43 10
INFO  16:57:30,838 - #5 ;
INFO  16:57:30,839 - #21 enum
INFO  16:57:30,839 - #44 Num
INFO  16:57:30,839 - #3 {
INFO  16:57:30,839 - #44 ZERO
INFO  16:57:30,839 - #8 ,
INFO  16:57:30,839 - #44 ONE
INFO  16:57:30,839 - #8 ,
INFO  16:57:30,840 - #44 TEN
INFO  16:57:30,840 - #12 =
INFO  16:57:30,840 - #43 10
INFO  16:57:30,840 - #4 }
INFO  16:57:30,840 - #44 int
INFO  16:57:30,840 - #44 xd
INFO  16:57:30,841 - #8 ,
INFO  16:57:30,842 - #43 3
ERROR 16:57:30,842 - 
Sintaksna greska na liniji 5
INFO  16:57:30,842 - #44 y
INFO  16:57:30,842 - #5 ;
INFO  16:57:30,843 - #23 interface
INFO  16:57:30,843 - #44 I
INFO  16:57:30,843 - #3 {
ERROR 16:57:30,843 - Uspesan oporavak od greske pri definisanju globalnih promenljivih, line : 5
INFO  16:57:30,844 - #44 int
INFO  16:57:30,845 - #44 getp
INFO  16:57:30,846 - #6 (
INFO  16:57:30,846 - #44 int
INFO  16:57:30,846 - #44 i
INFO  16:57:30,846 - #7 )
INFO  16:57:30,846 - #5 ;
INFO  16:57:30,846 - #44 int
INFO  16:57:30,847 - #44 getn
INFO  16:57:30,847 - #6 (
INFO  16:57:30,847 - #44 int
INFO  16:57:30,847 - #44 i
INFO  16:57:30,847 - #7 )
INFO  16:57:30,847 - #5 ;
INFO  16:57:30,847 - #4 }
INFO  16:57:30,847 - #22 class
INFO  16:57:30,848 - #44 Table
INFO  16:57:30,848 - #20 implements
INFO  16:57:30,849 - #44 I
INFO  16:57:30,849 - #3 {
INFO  16:57:30,849 - #44 int
INFO  16:57:30,849 - #44 pos
INFO  16:57:30,849 - #37 [
INFO  16:57:30,849 - #38 ]
INFO  16:57:30,849 - #8 ,
INFO  16:57:30,850 - #44 neg
INFO  16:57:30,850 - #37 [
INFO  16:57:30,850 - #38 ]
INFO  16:57:30,850 - #5 ;
INFO  16:57:30,850 - #3 {
INFO  16:57:30,851 - #13 void
INFO  16:57:30,851 - #44 putp
INFO  16:57:30,851 - #6 (
INFO  16:57:30,852 - #44 int
INFO  16:57:30,852 - #44 a
INFO  16:57:30,852 - #8 ,
INFO  16:57:30,852 - #44 int
INFO  16:57:30,852 - #44 idx
INFO  16:57:30,852 - #7 )
INFO  16:57:30,852 - #3 {
INFO  16:57:30,852 - #44 this
INFO  16:57:30,853 - #47 .
INFO  16:57:30,853 - #44 pos
INFO  16:57:30,854 - #37 [
INFO  16:57:30,854 - #44 idx
INFO  16:57:30,855 - #38 ]
INFO  16:57:30,856 - #12 =
INFO  16:57:30,857 - #44 a
INFO  16:57:30,857 - #5 ;
INFO  16:57:30,857 - #4 }
INFO  16:57:30,857 - #13 void
INFO  16:57:30,858 - #44 putn
INFO  16:57:30,858 - #6 (
INFO  16:57:30,858 - #44 int
INFO  16:57:30,858 - #44 a
INFO  16:57:30,858 - #8 ,
INFO  16:57:30,858 - #44 int
INFO  16:57:30,858 - #44 idx
INFO  16:57:30,858 - #7 )
INFO  16:57:30,858 - #3 {
INFO  16:57:30,858 - #44 this
INFO  16:57:30,858 - #47 .
INFO  16:57:30,859 - #44 neg
INFO  16:57:30,859 - #37 [
INFO  16:57:30,859 - #44 idx
INFO  16:57:30,859 - #38 ]
INFO  16:57:30,859 - #12 =
INFO  16:57:30,859 - #44 a
INFO  16:57:30,859 - #5 ;
INFO  16:57:30,859 - #4 }
INFO  16:57:30,859 - #44 int
INFO  16:57:30,859 - #44 getp
INFO  16:57:30,859 - #6 (
INFO  16:57:30,859 - #44 int
INFO  16:57:30,859 - #44 idx
INFO  16:57:30,860 - #7 )
INFO  16:57:30,860 - #3 {
INFO  16:57:30,860 - #10 return
INFO  16:57:30,860 - #44 pos
INFO  16:57:30,860 - #37 [
INFO  16:57:30,860 - #44 idx
INFO  16:57:30,860 - #38 ]
INFO  16:57:30,860 - #5 ;
INFO  16:57:30,860 - #4 }
INFO  16:57:30,860 - #44 int
INFO  16:57:30,860 - #44 getn
INFO  16:57:30,860 - #6 (
INFO  16:57:30,861 - #44 int
INFO  16:57:30,861 - #44 idx
INFO  16:57:30,861 - #7 )
INFO  16:57:30,861 - #3 {
INFO  16:57:30,861 - #10 return
INFO  16:57:30,861 - #44 neg
INFO  16:57:30,864 - #37 [
INFO  16:57:30,864 - #44 idx
INFO  16:57:30,865 - #38 ]
INFO  16:57:30,865 - #5 ;
INFO  16:57:30,865 - #4 }
INFO  16:57:30,865 - #4 }
INFO  16:57:30,865 - #4 }
INFO  16:57:30,865 - #44 Table
INFO  16:57:30,865 - #44 val
INFO  16:57:30,865 - #5 ;
INFO  16:57:30,865 - #3 {
INFO  16:57:30,865 - #13 void
INFO  16:57:30,866 - #44 f
INFO  16:57:30,866 - #6 (
INFO  16:57:30,866 - #44 char
INFO  16:57:30,866 - #44 ch
INFO  16:57:30,866 - #8 ,
INFO  16:57:30,866 - #44 int
INFO  16:57:30,866 - #44 a
INFO  16:57:30,866 - #8 ,
INFO  16:57:30,866 - #44 int
INFO  16:57:30,866 - #43 3
ERROR 16:57:30,866 - 
Sintaksna greska na liniji 23
INFO  16:57:30,866 - #44 arg
INFO  16:57:30,866 - #8 ,
INFO  16:57:30,866 - #44 int
INFO  16:57:30,866 - #7 )
INFO  16:57:30,866 - #44 int
INFO  16:57:30,866 - #44 x
INFO  16:57:30,866 - #5 ;
ERROR 16:57:30,866 - Uspesan oporavak od greske pri deklaraciji formalnih parametara funkcije, line : 23
INFO  16:57:30,867 - #3 {
INFO  16:57:30,867 - #44 x
INFO  16:57:30,867 - #12 =
INFO  16:57:30,867 - #44 arg
INFO  16:57:30,867 - #11 +
INFO  16:57:30,867 - #5 ;
ERROR 16:57:30,867 - 
Sintaksna greska na liniji 26
INFO  16:57:30,868 - #4 }
INFO  16:57:30,868 - #13 void
INFO  16:57:30,868 - #44 main
ERROR 16:57:30,868 - Uspesan oporavak od greske pri dodeli vrednosti, line : 2
INFO  16:57:30,868 - #6 (
INFO  16:57:30,868 - #7 )
INFO  16:57:30,869 - #44 int
INFO  16:57:30,869 - #44 x
INFO  16:57:30,869 - #8 ,
INFO  16:57:30,869 - #44 i
INFO  16:57:30,869 - #5 ;
INFO  16:57:30,869 - #44 char
INFO  16:57:30,869 - #44 c
INFO  16:57:30,869 - #5 ;
INFO  16:57:30,869 - #3 {
INFO  16:57:30,869 - #44 val
INFO  16:57:30,870 - #12 =
INFO  16:57:30,870 - #19 new
INFO  16:57:30,870 - #44 Table
INFO  16:57:30,870 - #5 ;
INFO  16:57:30,870 - #44 val
INFO  16:57:30,870 - #47 .
INFO  16:57:30,870 - #44 pos
INFO  16:57:30,870 - #12 =
INFO  16:57:30,870 - #19 new
INFO  16:57:30,871 - #44 int
INFO  16:57:30,871 - #37 [
INFO  16:57:30,871 - #44 size
INFO  16:57:30,871 - #38 ]
INFO  16:57:30,871 - #5 ;
INFO  16:57:30,871 - #44 val
INFO  16:57:30,871 - #47 .
INFO  16:57:30,871 - #44 neg
INFO  16:57:30,871 - #12 =
INFO  16:57:30,871 - #19 new
INFO  16:57:30,871 - #44 int
INFO  16:57:30,871 - #37 [
INFO  16:57:30,871 - #44 size
INFO  16:57:30,871 - #38 ]
INFO  16:57:30,872 - #5 ;
INFO  16:57:30,872 - #16 for
INFO  16:57:30,872 - #6 (
INFO  16:57:30,872 - #44 i
INFO  16:57:30,872 - #12 =
INFO  16:57:30,872 - #43 0
INFO  16:57:30,872 - #5 ;
INFO  16:57:30,872 - #44 i
INFO  16:57:30,872 - #31 <
INFO  16:57:30,872 - #44 size
INFO  16:57:30,873 - #5 ;
INFO  16:57:30,875 - #44 i
INFO  16:57:30,875 - #35 ++
INFO  16:57:30,875 - #7 )
INFO  16:57:30,875 - #3 {
INFO  16:57:30,875 - #44 val
INFO  16:57:30,875 - #47 .
INFO  16:57:30,875 - #44 putp
INFO  16:57:30,875 - #6 (
INFO  16:57:30,875 - #43 0
INFO  16:57:30,875 - #8 ,
INFO  16:57:30,876 - #44 i
INFO  16:57:30,876 - #7 )
INFO  16:57:30,876 - #5 ;
INFO  16:57:30,876 - #44 val
INFO  16:57:30,876 - #47 .
INFO  16:57:30,876 - #44 putn
INFO  16:57:30,876 - #6 (
INFO  16:57:30,876 - #43 0
INFO  16:57:30,876 - #8 ,
INFO  16:57:30,876 - #44 i
INFO  16:57:30,876 - #7 )
INFO  16:57:30,876 - #5 ;
INFO  16:57:30,876 - #4 }
INFO  16:57:30,876 - #44 f
INFO  16:57:30,877 - #6 (
INFO  16:57:30,877 - #44 c
INFO  16:57:30,877 - #8 ,
INFO  16:57:30,877 - #44 x
INFO  16:57:30,877 - #8 ,
INFO  16:57:30,877 - #44 i
INFO  16:57:30,877 - #7 )
INFO  16:57:30,877 - #5 ;
INFO  16:57:30,877 - #14 read
INFO  16:57:30,877 - #6 (
INFO  16:57:30,877 - #44 x
INFO  16:57:30,877 - #7 )
INFO  16:57:30,877 - #5 ;
INFO  16:57:30,877 - #16 for
INFO  16:57:30,877 - #6 (
INFO  16:57:30,877 - #5 ;
INFO  16:57:30,878 - #44 x
INFO  16:57:30,878 - #29 >
INFO  16:57:30,878 - #43 0
INFO  16:57:30,879 - #5 ;
INFO  16:57:30,879 - #7 )
INFO  16:57:30,879 - #3 {
INFO  16:57:30,879 - #45 if
INFO  16:57:30,879 - #6 (
INFO  16:57:30,879 - #44 Num
INFO  16:57:30,879 - #47 .
INFO  16:57:30,880 - #44 ZERO
INFO  16:57:30,880 - #32 <=
INFO  16:57:30,880 - #44 x
INFO  16:57:30,880 - #33 &&
INFO  16:57:30,880 - #44 x
INFO  16:57:30,880 - #31 <
INFO  16:57:30,880 - #6 (
INFO  16:57:30,880 - #44 size
INFO  16:57:30,881 - #25 -
INFO  16:57:30,881 - #43 3
INFO  16:57:30,881 - #44 x
ERROR 16:57:30,882 - 
Sintaksna greska na liniji 50
INFO  16:57:30,882 - #7 )
INFO  16:57:30,882 - #7 )
INFO  16:57:30,882 - #3 {
INFO  16:57:30,882 - #44 val
INFO  16:57:30,882 - #47 .
ERROR 16:57:30,882 - Uspesan oporavak od greske u logickom iskazu if naredbe, line : 50
INFO  16:57:30,882 - #44 putp
INFO  16:57:30,882 - #6 (
INFO  16:57:30,882 - #44 val
INFO  16:57:30,882 - #47 .
INFO  16:57:30,883 - #44 getp
INFO  16:57:30,883 - #6 (
INFO  16:57:30,883 - #44 x
INFO  16:57:30,883 - #7 )
INFO  16:57:30,883 - #11 +
INFO  16:57:30,883 - #44 Num
INFO  16:57:30,883 - #47 .
INFO  16:57:30,883 - #44 ONE
INFO  16:57:30,883 - #7 )
INFO  16:57:30,883 - #5 ;
INFO  16:57:30,883 - #4 }
INFO  16:57:30,883 - #46 else
INFO  16:57:30,883 - #45 if
INFO  16:57:30,883 - #6 (
INFO  16:57:30,883 - #25 -
INFO  16:57:30,883 - #44 size
INFO  16:57:30,884 - #31 <
INFO  16:57:30,884 - #44 x
INFO  16:57:30,884 - #33 &&
INFO  16:57:30,884 - #44 x
INFO  16:57:30,884 - #31 <
INFO  16:57:30,884 - #43 0
INFO  16:57:30,884 - #7 )
INFO  16:57:30,884 - #3 {
INFO  16:57:30,884 - #44 val
INFO  16:57:30,884 - #47 .
INFO  16:57:30,884 - #44 putn
INFO  16:57:30,884 - #6 (
INFO  16:57:30,884 - #44 val
INFO  16:57:30,884 - #47 .
INFO  16:57:30,884 - #44 getn
INFO  16:57:30,884 - #6 (
INFO  16:57:30,884 - #25 -
INFO  16:57:30,884 - #44 x
INFO  16:57:30,884 - #7 )
INFO  16:57:30,884 - #11 +
INFO  16:57:30,884 - #43 1
INFO  16:57:30,884 - #7 )
INFO  16:57:30,885 - #5 ;
INFO  16:57:30,885 - #4 }
INFO  16:57:30,885 - #14 read
INFO  16:57:30,885 - #6 (
INFO  16:57:30,885 - #44 x
INFO  16:57:30,885 - #7 )
INFO  16:57:30,885 - #5 ;
INFO  16:57:30,885 - #4 }
INFO  16:57:30,885 - #4 }
INFO  16:57:30,885 - #4 }
