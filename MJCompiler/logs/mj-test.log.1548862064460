INFO  16:26:31,189 - Compiling source file: D:\faks\milos\4 god 1 sem\pp1\projekat\projekateclipse\MJCompiler\program.mj
INFO  16:26:31,266 - #2 program
INFO  16:26:31,266 - #44 P
INFO  16:26:31,266 - #24 const
INFO  16:26:31,268 - #44 int
INFO  16:26:31,268 - #44 size
INFO  16:26:31,268 - #12 =
INFO  16:26:31,269 - #43 10
INFO  16:26:31,269 - #5 ;
INFO  16:26:31,269 - #21 enum
INFO  16:26:31,270 - #44 Num
INFO  16:26:31,270 - #3 {
INFO  16:26:31,270 - #44 ZERO
INFO  16:26:31,270 - #8 ,
INFO  16:26:31,270 - #44 ONE
INFO  16:26:31,270 - #8 ,
INFO  16:26:31,270 - #44 TEN
INFO  16:26:31,270 - #12 =
INFO  16:26:31,271 - #43 10
INFO  16:26:31,271 - #4 }
INFO  16:26:31,271 - #44 int
INFO  16:26:31,271 - #44 xd
INFO  16:26:31,271 - #8 ,
INFO  16:26:31,273 - #43 3
ERROR 16:26:31,273 - 
Sintaksna greska na liniji 5
INFO  16:26:31,273 - #44 y
INFO  16:26:31,273 - #5 ;
INFO  16:26:31,273 - #23 interface
INFO  16:26:31,274 - #44 I
INFO  16:26:31,274 - #3 {
ERROR 16:26:31,274 - Uspesan oporavak od greske pri definisanju globalnih promenljivih, line : 5
INFO  16:26:31,275 - #44 int
INFO  16:26:31,276 - #44 getp
INFO  16:26:31,276 - #6 (
INFO  16:26:31,276 - #44 int
INFO  16:26:31,276 - #44 i
INFO  16:26:31,276 - #7 )
INFO  16:26:31,277 - #5 ;
INFO  16:26:31,277 - #44 int
INFO  16:26:31,277 - #44 getn
INFO  16:26:31,278 - #6 (
INFO  16:26:31,278 - #44 int
INFO  16:26:31,278 - #44 i
INFO  16:26:31,278 - #7 )
INFO  16:26:31,278 - #5 ;
INFO  16:26:31,278 - #4 }
INFO  16:26:31,278 - #22 class
INFO  16:26:31,278 - #44 Table
INFO  16:26:31,278 - #20 implements
INFO  16:26:31,279 - #44 I
INFO  16:26:31,279 - #3 {
INFO  16:26:31,279 - #44 int
INFO  16:26:31,280 - #44 pos
INFO  16:26:31,280 - #37 [
INFO  16:26:31,280 - #38 ]
INFO  16:26:31,280 - #8 ,
INFO  16:26:31,281 - #44 neg
INFO  16:26:31,281 - #37 [
INFO  16:26:31,281 - #38 ]
INFO  16:26:31,281 - #5 ;
INFO  16:26:31,285 - #3 {
INFO  16:26:31,286 - #13 void
INFO  16:26:31,286 - #44 putp
INFO  16:26:31,286 - #6 (
INFO  16:26:31,287 - #44 int
INFO  16:26:31,287 - #44 a
INFO  16:26:31,287 - #8 ,
INFO  16:26:31,287 - #44 int
INFO  16:26:31,287 - #44 idx
INFO  16:26:31,287 - #7 )
INFO  16:26:31,287 - #3 {
INFO  16:26:31,287 - #44 this
INFO  16:26:31,288 - #47 .
INFO  16:26:31,288 - #44 pos
INFO  16:26:31,288 - #37 [
INFO  16:26:31,289 - #44 idx
INFO  16:26:31,290 - #38 ]
INFO  16:26:31,292 - #12 =
INFO  16:26:31,293 - #44 a
INFO  16:26:31,293 - #5 ;
INFO  16:26:31,293 - #4 }
INFO  16:26:31,293 - #13 void
INFO  16:26:31,294 - #44 putn
INFO  16:26:31,295 - #6 (
INFO  16:26:31,295 - #44 int
INFO  16:26:31,295 - #44 a
INFO  16:26:31,295 - #8 ,
INFO  16:26:31,295 - #44 int
INFO  16:26:31,295 - #44 idx
INFO  16:26:31,295 - #7 )
INFO  16:26:31,295 - #3 {
INFO  16:26:31,295 - #44 this
INFO  16:26:31,295 - #47 .
INFO  16:26:31,296 - #44 neg
INFO  16:26:31,296 - #37 [
INFO  16:26:31,296 - #44 idx
INFO  16:26:31,296 - #38 ]
INFO  16:26:31,296 - #12 =
INFO  16:26:31,296 - #44 a
INFO  16:26:31,296 - #5 ;
INFO  16:26:31,297 - #4 }
INFO  16:26:31,297 - #44 int
INFO  16:26:31,297 - #44 getp
INFO  16:26:31,297 - #6 (
INFO  16:26:31,297 - #44 int
INFO  16:26:31,297 - #44 idx
INFO  16:26:31,297 - #7 )
INFO  16:26:31,297 - #3 {
INFO  16:26:31,297 - #10 return
INFO  16:26:31,297 - #44 pos
INFO  16:26:31,297 - #37 [
INFO  16:26:31,297 - #44 idx
INFO  16:26:31,297 - #38 ]
INFO  16:26:31,298 - #5 ;
INFO  16:26:31,298 - #4 }
INFO  16:26:31,298 - #44 int
INFO  16:26:31,298 - #44 getn
INFO  16:26:31,298 - #6 (
INFO  16:26:31,298 - #44 int
INFO  16:26:31,298 - #44 idx
INFO  16:26:31,298 - #7 )
INFO  16:26:31,298 - #3 {
INFO  16:26:31,298 - #10 return
INFO  16:26:31,299 - #44 neg
INFO  16:26:31,299 - #37 [
INFO  16:26:31,299 - #44 idx
INFO  16:26:31,299 - #38 ]
INFO  16:26:31,299 - #5 ;
INFO  16:26:31,299 - #4 }
INFO  16:26:31,299 - #4 }
INFO  16:26:31,299 - #4 }
INFO  16:26:31,300 - #44 Table
INFO  16:26:31,300 - #44 val
INFO  16:26:31,300 - #5 ;
INFO  16:26:31,300 - #3 {
INFO  16:26:31,301 - #13 void
INFO  16:26:31,301 - #44 f
INFO  16:26:31,301 - #6 (
INFO  16:26:31,301 - #44 char
INFO  16:26:31,301 - #44 ch
INFO  16:26:31,301 - #8 ,
INFO  16:26:31,301 - #44 int
INFO  16:26:31,301 - #44 a
INFO  16:26:31,301 - #8 ,
INFO  16:26:31,301 - #44 int
INFO  16:26:31,301 - #44 arg
INFO  16:26:31,301 - #7 )
INFO  16:26:31,301 - #44 int
INFO  16:26:31,302 - #44 x
INFO  16:26:31,302 - #5 ;
INFO  16:26:31,302 - #3 {
INFO  16:26:31,302 - #44 x
INFO  16:26:31,302 - #12 =
INFO  16:26:31,302 - #44 arg
INFO  16:26:31,302 - #11 +
INFO  16:26:31,302 - #5 ;
ERROR 16:26:31,302 - 
Sintaksna greska na liniji 26
INFO  16:26:31,302 - #4 }
INFO  16:26:31,302 - #13 void
INFO  16:26:31,302 - #44 main
ERROR 16:26:31,302 - Uspesan oporavak od greske pri dodeli vrednosti, line : 2
INFO  16:26:31,303 - #6 (
INFO  16:26:31,303 - #7 )
INFO  16:26:31,304 - #44 int
INFO  16:26:31,304 - #44 x
INFO  16:26:31,304 - #8 ,
INFO  16:26:31,304 - #44 i
INFO  16:26:31,304 - #5 ;
INFO  16:26:31,304 - #44 char
INFO  16:26:31,304 - #44 c
INFO  16:26:31,304 - #5 ;
INFO  16:26:31,304 - #3 {
INFO  16:26:31,304 - #44 val
INFO  16:26:31,304 - #12 =
INFO  16:26:31,304 - #19 new
INFO  16:26:31,304 - #44 Table
INFO  16:26:31,304 - #5 ;
INFO  16:26:31,305 - #44 val
INFO  16:26:31,305 - #47 .
INFO  16:26:31,305 - #44 pos
INFO  16:26:31,305 - #12 =
INFO  16:26:31,305 - #19 new
INFO  16:26:31,305 - #44 int
INFO  16:26:31,305 - #37 [
INFO  16:26:31,305 - #44 size
INFO  16:26:31,305 - #38 ]
INFO  16:26:31,305 - #5 ;
INFO  16:26:31,306 - #44 val
INFO  16:26:31,306 - #47 .
INFO  16:26:31,306 - #44 neg
INFO  16:26:31,306 - #12 =
INFO  16:26:31,306 - #19 new
INFO  16:26:31,306 - #44 int
INFO  16:26:31,306 - #37 [
INFO  16:26:31,306 - #44 size
INFO  16:26:31,306 - #38 ]
INFO  16:26:31,306 - #5 ;
INFO  16:26:31,306 - #16 for
INFO  16:26:31,306 - #6 (
INFO  16:26:31,306 - #44 i
INFO  16:26:31,306 - #12 =
INFO  16:26:31,306 - #43 0
INFO  16:26:31,306 - #5 ;
INFO  16:26:31,306 - #44 i
INFO  16:26:31,306 - #31 <
INFO  16:26:31,306 - #44 size
INFO  16:26:31,307 - #5 ;
INFO  16:26:31,309 - #44 i
INFO  16:26:31,309 - #35 ++
INFO  16:26:31,309 - #7 )
INFO  16:26:31,309 - #3 {
INFO  16:26:31,309 - #44 val
INFO  16:26:31,309 - #47 .
INFO  16:26:31,309 - #44 putp
INFO  16:26:31,309 - #6 (
INFO  16:26:31,309 - #43 0
INFO  16:26:31,309 - #8 ,
INFO  16:26:31,310 - #44 i
INFO  16:26:31,310 - #7 )
INFO  16:26:31,310 - #5 ;
INFO  16:26:31,310 - #44 val
INFO  16:26:31,311 - #47 .
INFO  16:26:31,311 - #44 putn
INFO  16:26:31,311 - #6 (
INFO  16:26:31,311 - #43 0
INFO  16:26:31,311 - #8 ,
INFO  16:26:31,311 - #44 i
INFO  16:26:31,311 - #7 )
INFO  16:26:31,311 - #5 ;
INFO  16:26:31,311 - #4 }
INFO  16:26:31,311 - #44 f
INFO  16:26:31,311 - #6 (
INFO  16:26:31,311 - #44 c
INFO  16:26:31,311 - #8 ,
INFO  16:26:31,311 - #44 x
INFO  16:26:31,311 - #8 ,
INFO  16:26:31,311 - #44 i
INFO  16:26:31,311 - #7 )
INFO  16:26:31,311 - #5 ;
INFO  16:26:31,311 - #14 read
INFO  16:26:31,311 - #6 (
INFO  16:26:31,312 - #44 x
INFO  16:26:31,312 - #7 )
INFO  16:26:31,312 - #5 ;
INFO  16:26:31,312 - #16 for
INFO  16:26:31,312 - #6 (
INFO  16:26:31,312 - #5 ;
INFO  16:26:31,313 - #44 x
INFO  16:26:31,313 - #29 >
INFO  16:26:31,313 - #43 0
INFO  16:26:31,314 - #5 ;
INFO  16:26:31,314 - #7 )
INFO  16:26:31,314 - #3 {
INFO  16:26:31,314 - #45 if
INFO  16:26:31,314 - #6 (
INFO  16:26:31,314 - #44 Num
INFO  16:26:31,314 - #47 .
INFO  16:26:31,314 - #44 ZERO
INFO  16:26:31,314 - #32 <=
INFO  16:26:31,315 - #44 x
INFO  16:26:31,315 - #33 &&
INFO  16:26:31,315 - #44 x
INFO  16:26:31,315 - #31 <
INFO  16:26:31,315 - #44 size
INFO  16:26:31,315 - #7 )
INFO  16:26:31,315 - #3 {
INFO  16:26:31,315 - #44 val
INFO  16:26:31,315 - #47 .
INFO  16:26:31,316 - #44 putp
INFO  16:26:31,316 - #6 (
INFO  16:26:31,316 - #44 val
INFO  16:26:31,316 - #47 .
INFO  16:26:31,316 - #44 getp
INFO  16:26:31,316 - #6 (
INFO  16:26:31,316 - #44 x
INFO  16:26:31,316 - #7 )
INFO  16:26:31,316 - #11 +
INFO  16:26:31,316 - #44 Num
INFO  16:26:31,316 - #47 .
INFO  16:26:31,317 - #44 ONE
INFO  16:26:31,317 - #7 )
INFO  16:26:31,317 - #5 ;
INFO  16:26:31,317 - #4 }
INFO  16:26:31,317 - #46 else
INFO  16:26:31,317 - #45 if
INFO  16:26:31,317 - #6 (
INFO  16:26:31,317 - #25 -
INFO  16:26:31,317 - #44 size
INFO  16:26:31,317 - #31 <
INFO  16:26:31,317 - #44 x
INFO  16:26:31,318 - #33 &&
INFO  16:26:31,318 - #44 x
INFO  16:26:31,318 - #31 <
INFO  16:26:31,318 - #43 0
INFO  16:26:31,318 - #7 )
INFO  16:26:31,318 - #3 {
INFO  16:26:31,318 - #44 val
INFO  16:26:31,318 - #47 .
INFO  16:26:31,318 - #44 putn
INFO  16:26:31,318 - #6 (
INFO  16:26:31,318 - #44 val
INFO  16:26:31,318 - #47 .
INFO  16:26:31,318 - #44 getn
INFO  16:26:31,318 - #6 (
INFO  16:26:31,318 - #25 -
INFO  16:26:31,318 - #44 x
INFO  16:26:31,318 - #7 )
INFO  16:26:31,318 - #11 +
INFO  16:26:31,318 - #43 1
INFO  16:26:31,318 - #7 )
INFO  16:26:31,318 - #5 ;
INFO  16:26:31,318 - #4 }
INFO  16:26:31,318 - #14 read
INFO  16:26:31,318 - #6 (
INFO  16:26:31,318 - #44 x
INFO  16:26:31,319 - #7 )
INFO  16:26:31,319 - #5 ;
INFO  16:26:31,319 - #4 }
INFO  16:26:31,319 - #4 }
INFO  16:26:31,319 - #4 }
