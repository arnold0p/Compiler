INFO  16:34:57,757 - Compiling source file: D:\faks\milos\4 god 1 sem\pp1\projekat\projekateclipse\MJCompiler\program.mj
INFO  16:34:57,837 - #2 program
INFO  16:34:57,838 - #44 P
INFO  16:34:57,838 - #24 const
INFO  16:34:57,840 - #44 int
INFO  16:34:57,840 - #44 size
INFO  16:34:57,840 - #12 =
INFO  16:34:57,840 - #43 10
INFO  16:34:57,840 - #5 ;
INFO  16:34:57,841 - #21 enum
INFO  16:34:57,841 - #44 Num
INFO  16:34:57,841 - #3 {
INFO  16:34:57,841 - #44 ZERO
INFO  16:34:57,841 - #8 ,
INFO  16:34:57,841 - #44 ONE
INFO  16:34:57,841 - #8 ,
INFO  16:34:57,842 - #44 TEN
INFO  16:34:57,842 - #12 =
INFO  16:34:57,842 - #43 10
INFO  16:34:57,842 - #4 }
INFO  16:34:57,842 - #44 int
INFO  16:34:57,842 - #44 xd
INFO  16:34:57,843 - #8 ,
INFO  16:34:57,844 - #43 3
ERROR 16:34:57,844 - 
Sintaksna greska na liniji 5
INFO  16:34:57,844 - #44 y
INFO  16:34:57,844 - #5 ;
INFO  16:34:57,844 - #23 interface
INFO  16:34:57,845 - #44 I
INFO  16:34:57,845 - #3 {
ERROR 16:34:57,845 - Uspesan oporavak od greske pri definisanju globalnih promenljivih, line : 5
INFO  16:34:57,846 - #44 int
INFO  16:34:57,846 - #44 getp
INFO  16:34:57,847 - #6 (
INFO  16:34:57,847 - #44 int
INFO  16:34:57,847 - #44 i
INFO  16:34:57,847 - #7 )
INFO  16:34:57,848 - #5 ;
INFO  16:34:57,848 - #44 int
INFO  16:34:57,848 - #44 getn
INFO  16:34:57,848 - #6 (
INFO  16:34:57,848 - #44 int
INFO  16:34:57,848 - #44 i
INFO  16:34:57,848 - #7 )
INFO  16:34:57,848 - #5 ;
INFO  16:34:57,848 - #4 }
INFO  16:34:57,848 - #22 class
INFO  16:34:57,849 - #44 Table
INFO  16:34:57,849 - #20 implements
INFO  16:34:57,849 - #44 I
INFO  16:34:57,850 - #3 {
INFO  16:34:57,850 - #44 int
INFO  16:34:57,850 - #44 pos
INFO  16:34:57,850 - #37 [
INFO  16:34:57,851 - #38 ]
INFO  16:34:57,851 - #8 ,
INFO  16:34:57,851 - #44 neg
INFO  16:34:57,851 - #37 [
INFO  16:34:57,851 - #38 ]
INFO  16:34:57,851 - #5 ;
INFO  16:34:57,851 - #3 {
INFO  16:34:57,852 - #13 void
INFO  16:34:57,852 - #44 putp
INFO  16:34:57,852 - #6 (
INFO  16:34:57,853 - #44 int
INFO  16:34:57,853 - #44 a
INFO  16:34:57,853 - #8 ,
INFO  16:34:57,853 - #44 int
INFO  16:34:57,853 - #44 idx
INFO  16:34:57,853 - #7 )
INFO  16:34:57,853 - #3 {
INFO  16:34:57,853 - #44 this
INFO  16:34:57,854 - #47 .
INFO  16:34:57,854 - #44 pos
INFO  16:34:57,854 - #37 [
INFO  16:34:57,855 - #44 idx
INFO  16:34:57,855 - #38 ]
INFO  16:34:57,857 - #12 =
INFO  16:34:57,857 - #44 a
INFO  16:34:57,857 - #5 ;
INFO  16:34:57,857 - #4 }
INFO  16:34:57,858 - #13 void
INFO  16:34:57,858 - #44 putn
INFO  16:34:57,858 - #6 (
INFO  16:34:57,858 - #44 int
INFO  16:34:57,858 - #44 a
INFO  16:34:57,859 - #8 ,
INFO  16:34:57,859 - #44 int
INFO  16:34:57,859 - #44 idx
INFO  16:34:57,859 - #7 )
INFO  16:34:57,859 - #3 {
INFO  16:34:57,859 - #44 this
INFO  16:34:57,859 - #47 .
INFO  16:34:57,859 - #44 neg
INFO  16:34:57,859 - #37 [
INFO  16:34:57,859 - #44 idx
INFO  16:34:57,859 - #38 ]
INFO  16:34:57,859 - #12 =
INFO  16:34:57,860 - #44 a
INFO  16:34:57,860 - #5 ;
INFO  16:34:57,860 - #4 }
INFO  16:34:57,860 - #44 int
INFO  16:34:57,860 - #44 getp
INFO  16:34:57,860 - #6 (
INFO  16:34:57,860 - #44 int
INFO  16:34:57,860 - #44 idx
INFO  16:34:57,860 - #7 )
INFO  16:34:57,861 - #3 {
INFO  16:34:57,861 - #10 return
INFO  16:34:57,861 - #44 pos
INFO  16:34:57,861 - #37 [
INFO  16:34:57,861 - #44 idx
INFO  16:34:57,861 - #38 ]
INFO  16:34:57,861 - #5 ;
INFO  16:34:57,861 - #4 }
INFO  16:34:57,861 - #44 int
INFO  16:34:57,861 - #44 getn
INFO  16:34:57,862 - #6 (
INFO  16:34:57,862 - #44 int
INFO  16:34:57,862 - #44 idx
INFO  16:34:57,862 - #7 )
INFO  16:34:57,862 - #3 {
INFO  16:34:57,862 - #10 return
INFO  16:34:57,862 - #44 neg
INFO  16:34:57,866 - #37 [
INFO  16:34:57,866 - #44 idx
INFO  16:34:57,866 - #38 ]
INFO  16:34:57,866 - #5 ;
INFO  16:34:57,866 - #4 }
INFO  16:34:57,866 - #4 }
INFO  16:34:57,866 - #4 }
INFO  16:34:57,867 - #44 Table
INFO  16:34:57,867 - #44 val
INFO  16:34:57,867 - #5 ;
INFO  16:34:57,867 - #3 {
INFO  16:34:57,867 - #13 void
INFO  16:34:57,867 - #44 f
INFO  16:34:57,867 - #6 (
INFO  16:34:57,867 - #44 char
INFO  16:34:57,867 - #44 ch
INFO  16:34:57,867 - #8 ,
INFO  16:34:57,867 - #44 int
INFO  16:34:57,867 - #44 a
INFO  16:34:57,867 - #8 ,
INFO  16:34:57,867 - #44 int
INFO  16:34:57,867 - #43 3
ERROR 16:34:57,868 - 
Sintaksna greska na liniji 23
INFO  16:34:57,868 - #44 arg
INFO  16:34:57,868 - #8 ,
INFO  16:34:57,868 - #44 int
INFO  16:34:57,868 - #7 )
INFO  16:34:57,868 - #44 int
INFO  16:34:57,868 - #44 x
INFO  16:34:57,868 - #5 ;
ERROR 16:34:57,868 - Uspesan oporavak od greske pri deklaracija formalnih parametara funkcije, line : 23
INFO  16:34:57,869 - #3 {
INFO  16:34:57,869 - #44 x
INFO  16:34:57,869 - #12 =
INFO  16:34:57,869 - #44 arg
INFO  16:34:57,869 - #11 +
INFO  16:34:57,869 - #5 ;
ERROR 16:34:57,869 - 
Sintaksna greska na liniji 26
INFO  16:34:57,869 - #4 }
INFO  16:34:57,869 - #13 void
INFO  16:34:57,869 - #44 main
ERROR 16:34:57,869 - Uspesan oporavak od greske pri dodeli vrednost, line : 2
INFO  16:34:57,870 - #6 (
INFO  16:34:57,870 - #7 )
INFO  16:34:57,870 - #44 int
INFO  16:34:57,871 - #44 x
INFO  16:34:57,871 - #8 ,
INFO  16:34:57,871 - #44 i
INFO  16:34:57,871 - #5 ;
INFO  16:34:57,871 - #44 char
INFO  16:34:57,871 - #44 c
INFO  16:34:57,871 - #5 ;
INFO  16:34:57,871 - #3 {
INFO  16:34:57,871 - #44 val
INFO  16:34:57,871 - #12 =
INFO  16:34:57,871 - #19 new
INFO  16:34:57,871 - #44 Table
INFO  16:34:57,871 - #5 ;
INFO  16:34:57,872 - #44 val
INFO  16:34:57,872 - #47 .
INFO  16:34:57,872 - #44 pos
INFO  16:34:57,872 - #12 =
INFO  16:34:57,872 - #19 new
INFO  16:34:57,872 - #44 int
INFO  16:34:57,872 - #37 [
INFO  16:34:57,872 - #44 size
INFO  16:34:57,872 - #38 ]
INFO  16:34:57,872 - #5 ;
INFO  16:34:57,872 - #44 val
INFO  16:34:57,872 - #47 .
INFO  16:34:57,872 - #44 neg
INFO  16:34:57,872 - #12 =
INFO  16:34:57,872 - #19 new
INFO  16:34:57,872 - #44 int
INFO  16:34:57,872 - #37 [
INFO  16:34:57,872 - #44 size
INFO  16:34:57,873 - #38 ]
INFO  16:34:57,873 - #5 ;
INFO  16:34:57,873 - #16 for
INFO  16:34:57,873 - #6 (
INFO  16:34:57,873 - #44 i
INFO  16:34:57,873 - #12 =
INFO  16:34:57,873 - #43 0
INFO  16:34:57,873 - #5 ;
INFO  16:34:57,873 - #44 i
INFO  16:34:57,873 - #31 <
INFO  16:34:57,873 - #44 size
INFO  16:34:57,874 - #5 ;
INFO  16:34:57,876 - #44 i
INFO  16:34:57,876 - #35 ++
INFO  16:34:57,876 - #7 )
INFO  16:34:57,876 - #3 {
INFO  16:34:57,877 - #44 val
INFO  16:34:57,877 - #47 .
INFO  16:34:57,877 - #44 putp
INFO  16:34:57,877 - #6 (
INFO  16:34:57,877 - #43 0
INFO  16:34:57,877 - #8 ,
INFO  16:34:57,877 - #44 i
INFO  16:34:57,877 - #7 )
INFO  16:34:57,878 - #5 ;
INFO  16:34:57,878 - #44 val
INFO  16:34:57,878 - #47 .
INFO  16:34:57,878 - #44 putn
INFO  16:34:57,878 - #6 (
INFO  16:34:57,878 - #43 0
INFO  16:34:57,878 - #8 ,
INFO  16:34:57,878 - #44 i
INFO  16:34:57,878 - #7 )
INFO  16:34:57,878 - #5 ;
INFO  16:34:57,878 - #4 }
INFO  16:34:57,878 - #44 f
INFO  16:34:57,879 - #6 (
INFO  16:34:57,879 - #44 c
INFO  16:34:57,879 - #8 ,
INFO  16:34:57,879 - #44 x
INFO  16:34:57,879 - #8 ,
INFO  16:34:57,879 - #44 i
INFO  16:34:57,879 - #7 )
INFO  16:34:57,879 - #5 ;
INFO  16:34:57,879 - #14 read
INFO  16:34:57,879 - #6 (
INFO  16:34:57,879 - #44 x
INFO  16:34:57,879 - #7 )
INFO  16:34:57,879 - #5 ;
INFO  16:34:57,879 - #16 for
INFO  16:34:57,880 - #6 (
INFO  16:34:57,880 - #5 ;
INFO  16:34:57,880 - #44 x
INFO  16:34:57,880 - #29 >
INFO  16:34:57,880 - #43 0
INFO  16:34:57,881 - #5 ;
INFO  16:34:57,881 - #7 )
INFO  16:34:57,881 - #3 {
INFO  16:34:57,881 - #45 if
INFO  16:34:57,881 - #6 (
INFO  16:34:57,881 - #44 Num
INFO  16:34:57,881 - #47 .
INFO  16:34:57,881 - #44 ZERO
INFO  16:34:57,882 - #32 <=
INFO  16:34:57,882 - #44 x
INFO  16:34:57,882 - #33 &&
INFO  16:34:57,882 - #44 x
INFO  16:34:57,882 - #31 <
INFO  16:34:57,882 - #44 size
INFO  16:34:57,882 - #7 )
INFO  16:34:57,883 - #3 {
INFO  16:34:57,883 - #44 val
INFO  16:34:57,883 - #47 .
INFO  16:34:57,883 - #44 putp
INFO  16:34:57,883 - #6 (
INFO  16:34:57,883 - #44 val
INFO  16:34:57,883 - #47 .
INFO  16:34:57,883 - #44 getp
INFO  16:34:57,883 - #6 (
INFO  16:34:57,883 - #44 x
INFO  16:34:57,883 - #7 )
INFO  16:34:57,883 - #11 +
INFO  16:34:57,883 - #44 Num
INFO  16:34:57,884 - #47 .
INFO  16:34:57,884 - #44 ONE
INFO  16:34:57,884 - #7 )
INFO  16:34:57,884 - #5 ;
INFO  16:34:57,885 - #4 }
INFO  16:34:57,885 - #46 else
INFO  16:34:57,885 - #45 if
INFO  16:34:57,885 - #6 (
INFO  16:34:57,885 - #25 -
INFO  16:34:57,885 - #44 size
INFO  16:34:57,885 - #31 <
INFO  16:34:57,885 - #44 x
INFO  16:34:57,886 - #33 &&
INFO  16:34:57,886 - #44 x
INFO  16:34:57,886 - #31 <
INFO  16:34:57,886 - #43 0
INFO  16:34:57,886 - #7 )
INFO  16:34:57,886 - #3 {
INFO  16:34:57,886 - #44 val
INFO  16:34:57,886 - #47 .
INFO  16:34:57,886 - #44 putn
INFO  16:34:57,886 - #6 (
INFO  16:34:57,886 - #44 val
INFO  16:34:57,886 - #47 .
INFO  16:34:57,886 - #44 getn
INFO  16:34:57,886 - #6 (
INFO  16:34:57,886 - #25 -
INFO  16:34:57,886 - #44 x
INFO  16:34:57,886 - #7 )
INFO  16:34:57,886 - #11 +
INFO  16:34:57,886 - #43 1
INFO  16:34:57,886 - #7 )
INFO  16:34:57,886 - #5 ;
INFO  16:34:57,886 - #4 }
INFO  16:34:57,886 - #14 read
INFO  16:34:57,887 - #6 (
INFO  16:34:57,887 - #44 x
INFO  16:34:57,887 - #7 )
INFO  16:34:57,887 - #5 ;
INFO  16:34:57,887 - #4 }
INFO  16:34:57,887 - #4 }
INFO  16:34:57,887 - #4 }
