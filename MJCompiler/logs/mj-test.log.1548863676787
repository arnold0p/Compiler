INFO  16:53:23,568 - Compiling source file: D:\faks\milos\4 god 1 sem\pp1\projekat\projekateclipse\MJCompiler\program.mj
INFO  16:53:23,643 - #2 program
INFO  16:53:23,644 - #44 P
INFO  16:53:23,644 - #24 const
INFO  16:53:23,645 - #44 int
INFO  16:53:23,645 - #44 size
INFO  16:53:23,646 - #12 =
INFO  16:53:23,646 - #43 10
INFO  16:53:23,646 - #5 ;
INFO  16:53:23,646 - #21 enum
INFO  16:53:23,647 - #44 Num
INFO  16:53:23,647 - #3 {
INFO  16:53:23,647 - #44 ZERO
INFO  16:53:23,647 - #8 ,
INFO  16:53:23,647 - #44 ONE
INFO  16:53:23,647 - #8 ,
INFO  16:53:23,647 - #44 TEN
INFO  16:53:23,647 - #12 =
INFO  16:53:23,648 - #43 10
INFO  16:53:23,648 - #4 }
INFO  16:53:23,648 - #44 int
INFO  16:53:23,648 - #44 xd
INFO  16:53:23,649 - #8 ,
INFO  16:53:23,650 - #43 3
ERROR 16:53:23,650 - 
Sintaksna greska na liniji 5
INFO  16:53:23,650 - #44 y
INFO  16:53:23,650 - #5 ;
INFO  16:53:23,651 - #23 interface
INFO  16:53:23,651 - #44 I
INFO  16:53:23,651 - #3 {
ERROR 16:53:23,651 - Uspesan oporavak od greske pri definisanju globalnih promenljivih, line : 5
INFO  16:53:23,653 - #44 int
INFO  16:53:23,653 - #44 getp
INFO  16:53:23,654 - #6 (
INFO  16:53:23,654 - #44 int
INFO  16:53:23,654 - #44 i
INFO  16:53:23,654 - #7 )
INFO  16:53:23,654 - #5 ;
INFO  16:53:23,654 - #44 int
INFO  16:53:23,655 - #44 getn
INFO  16:53:23,655 - #6 (
INFO  16:53:23,655 - #44 int
INFO  16:53:23,655 - #44 i
INFO  16:53:23,655 - #7 )
INFO  16:53:23,655 - #5 ;
INFO  16:53:23,655 - #4 }
INFO  16:53:23,655 - #22 class
INFO  16:53:23,656 - #44 Table
INFO  16:53:23,656 - #20 implements
INFO  16:53:23,657 - #44 I
INFO  16:53:23,657 - #3 {
INFO  16:53:23,657 - #44 int
INFO  16:53:23,657 - #44 pos
INFO  16:53:23,658 - #37 [
INFO  16:53:23,658 - #38 ]
INFO  16:53:23,658 - #8 ,
INFO  16:53:23,659 - #44 neg
INFO  16:53:23,659 - #37 [
INFO  16:53:23,659 - #38 ]
INFO  16:53:23,659 - #5 ;
INFO  16:53:23,663 - #3 {
INFO  16:53:23,663 - #13 void
INFO  16:53:23,664 - #44 putp
INFO  16:53:23,664 - #6 (
INFO  16:53:23,664 - #44 int
INFO  16:53:23,664 - #44 a
INFO  16:53:23,664 - #8 ,
INFO  16:53:23,664 - #44 int
INFO  16:53:23,664 - #44 idx
INFO  16:53:23,664 - #7 )
INFO  16:53:23,665 - #3 {
INFO  16:53:23,665 - #44 this
INFO  16:53:23,666 - #47 .
INFO  16:53:23,666 - #44 pos
INFO  16:53:23,666 - #37 [
INFO  16:53:23,667 - #44 idx
INFO  16:53:23,668 - #38 ]
INFO  16:53:23,670 - #12 =
INFO  16:53:23,670 - #44 a
INFO  16:53:23,670 - #5 ;
INFO  16:53:23,670 - #4 }
INFO  16:53:23,670 - #13 void
INFO  16:53:23,671 - #44 putn
INFO  16:53:23,671 - #6 (
INFO  16:53:23,671 - #44 int
INFO  16:53:23,671 - #44 a
INFO  16:53:23,671 - #8 ,
INFO  16:53:23,671 - #44 int
INFO  16:53:23,672 - #44 idx
INFO  16:53:23,672 - #7 )
INFO  16:53:23,672 - #3 {
INFO  16:53:23,672 - #44 this
INFO  16:53:23,672 - #47 .
INFO  16:53:23,672 - #44 neg
INFO  16:53:23,672 - #37 [
INFO  16:53:23,672 - #44 idx
INFO  16:53:23,672 - #38 ]
INFO  16:53:23,672 - #12 =
INFO  16:53:23,672 - #44 a
INFO  16:53:23,672 - #5 ;
INFO  16:53:23,672 - #4 }
INFO  16:53:23,672 - #44 int
INFO  16:53:23,673 - #44 getp
INFO  16:53:23,673 - #6 (
INFO  16:53:23,673 - #44 int
INFO  16:53:23,673 - #44 idx
INFO  16:53:23,673 - #7 )
INFO  16:53:23,673 - #3 {
INFO  16:53:23,673 - #10 return
INFO  16:53:23,673 - #44 pos
INFO  16:53:23,673 - #37 [
INFO  16:53:23,673 - #44 idx
INFO  16:53:23,673 - #38 ]
INFO  16:53:23,673 - #5 ;
INFO  16:53:23,673 - #4 }
INFO  16:53:23,673 - #44 int
INFO  16:53:23,673 - #44 getn
INFO  16:53:23,673 - #6 (
INFO  16:53:23,673 - #44 int
INFO  16:53:23,673 - #44 idx
INFO  16:53:23,673 - #7 )
INFO  16:53:23,673 - #3 {
INFO  16:53:23,674 - #10 return
INFO  16:53:23,674 - #44 neg
INFO  16:53:23,674 - #37 [
INFO  16:53:23,674 - #44 idx
INFO  16:53:23,674 - #38 ]
INFO  16:53:23,674 - #5 ;
INFO  16:53:23,674 - #4 }
INFO  16:53:23,674 - #4 }
INFO  16:53:23,674 - #4 }
INFO  16:53:23,674 - #44 Table
INFO  16:53:23,675 - #44 val
INFO  16:53:23,675 - #5 ;
INFO  16:53:23,675 - #3 {
INFO  16:53:23,675 - #13 void
INFO  16:53:23,675 - #44 f
INFO  16:53:23,675 - #6 (
INFO  16:53:23,675 - #44 char
INFO  16:53:23,675 - #44 ch
INFO  16:53:23,675 - #8 ,
INFO  16:53:23,675 - #44 int
INFO  16:53:23,675 - #44 a
INFO  16:53:23,675 - #8 ,
INFO  16:53:23,675 - #44 int
INFO  16:53:23,675 - #43 3
ERROR 16:53:23,675 - 
Sintaksna greska na liniji 23
INFO  16:53:23,675 - #44 arg
INFO  16:53:23,675 - #8 ,
INFO  16:53:23,675 - #44 int
INFO  16:53:23,675 - #7 )
INFO  16:53:23,675 - #44 int
INFO  16:53:23,675 - #44 x
INFO  16:53:23,675 - #5 ;
ERROR 16:53:23,676 - Uspesan oporavak od greske pri deklaraciji formalnih parametara funkcije, line : 23
INFO  16:53:23,676 - #3 {
INFO  16:53:23,676 - #44 x
INFO  16:53:23,676 - #12 =
INFO  16:53:23,676 - #44 arg
INFO  16:53:23,676 - #11 +
INFO  16:53:23,677 - #5 ;
ERROR 16:53:23,677 - 
Sintaksna greska na liniji 26
INFO  16:53:23,677 - #4 }
INFO  16:53:23,677 - #13 void
INFO  16:53:23,677 - #44 main
ERROR 16:53:23,677 - Uspesan oporavak od greske pri dodeli vrednost, line : 2
INFO  16:53:23,678 - #6 (
INFO  16:53:23,678 - #7 )
INFO  16:53:23,678 - #44 int
INFO  16:53:23,678 - #44 x
INFO  16:53:23,678 - #8 ,
INFO  16:53:23,678 - #44 i
INFO  16:53:23,678 - #5 ;
INFO  16:53:23,678 - #44 char
INFO  16:53:23,679 - #44 c
INFO  16:53:23,679 - #5 ;
INFO  16:53:23,679 - #3 {
INFO  16:53:23,679 - #44 val
INFO  16:53:23,679 - #12 =
INFO  16:53:23,679 - #19 new
INFO  16:53:23,679 - #44 Table
INFO  16:53:23,679 - #5 ;
INFO  16:53:23,680 - #44 val
INFO  16:53:23,680 - #47 .
INFO  16:53:23,680 - #44 pos
INFO  16:53:23,680 - #12 =
INFO  16:53:23,680 - #19 new
INFO  16:53:23,680 - #44 int
INFO  16:53:23,680 - #37 [
INFO  16:53:23,680 - #44 size
INFO  16:53:23,680 - #38 ]
INFO  16:53:23,680 - #5 ;
INFO  16:53:23,680 - #44 val
INFO  16:53:23,680 - #47 .
INFO  16:53:23,680 - #44 neg
INFO  16:53:23,680 - #12 =
INFO  16:53:23,680 - #19 new
INFO  16:53:23,680 - #44 int
INFO  16:53:23,680 - #37 [
INFO  16:53:23,680 - #44 size
INFO  16:53:23,681 - #38 ]
INFO  16:53:23,681 - #5 ;
INFO  16:53:23,681 - #16 for
INFO  16:53:23,681 - #6 (
INFO  16:53:23,681 - #44 i
INFO  16:53:23,681 - #12 =
INFO  16:53:23,681 - #43 0
INFO  16:53:23,681 - #5 ;
INFO  16:53:23,681 - #44 i
INFO  16:53:23,681 - #31 <
INFO  16:53:23,681 - #44 size
INFO  16:53:23,682 - #5 ;
INFO  16:53:23,683 - #44 i
INFO  16:53:23,683 - #35 ++
INFO  16:53:23,683 - #7 )
INFO  16:53:23,683 - #3 {
INFO  16:53:23,683 - #44 val
INFO  16:53:23,683 - #47 .
INFO  16:53:23,683 - #44 putp
INFO  16:53:23,684 - #6 (
INFO  16:53:23,684 - #43 0
INFO  16:53:23,684 - #8 ,
INFO  16:53:23,684 - #44 i
INFO  16:53:23,684 - #7 )
INFO  16:53:23,684 - #5 ;
INFO  16:53:23,685 - #44 val
INFO  16:53:23,685 - #47 .
INFO  16:53:23,685 - #44 putn
INFO  16:53:23,685 - #6 (
INFO  16:53:23,685 - #43 0
INFO  16:53:23,685 - #8 ,
INFO  16:53:23,685 - #44 i
INFO  16:53:23,685 - #7 )
INFO  16:53:23,685 - #5 ;
INFO  16:53:23,685 - #4 }
INFO  16:53:23,685 - #44 f
INFO  16:53:23,685 - #6 (
INFO  16:53:23,685 - #44 c
INFO  16:53:23,685 - #8 ,
INFO  16:53:23,685 - #44 x
INFO  16:53:23,685 - #8 ,
INFO  16:53:23,685 - #44 i
INFO  16:53:23,685 - #7 )
INFO  16:53:23,685 - #5 ;
INFO  16:53:23,686 - #14 read
INFO  16:53:23,686 - #6 (
INFO  16:53:23,686 - #44 x
INFO  16:53:23,686 - #7 )
INFO  16:53:23,686 - #5 ;
INFO  16:53:23,686 - #16 for
INFO  16:53:23,686 - #6 (
INFO  16:53:23,686 - #5 ;
INFO  16:53:23,687 - #44 x
INFO  16:53:23,687 - #29 >
INFO  16:53:23,687 - #43 0
INFO  16:53:23,687 - #5 ;
INFO  16:53:23,688 - #7 )
INFO  16:53:23,688 - #3 {
INFO  16:53:23,688 - #45 if
INFO  16:53:23,688 - #6 (
INFO  16:53:23,688 - #44 Num
INFO  16:53:23,688 - #47 .
INFO  16:53:23,688 - #44 ZERO
INFO  16:53:23,688 - #32 <=
INFO  16:53:23,688 - #44 x
INFO  16:53:23,688 - #44 u
ERROR 16:53:23,688 - 
Sintaksna greska na liniji 50
INFO  16:53:23,688 - #33 &&
INFO  16:53:23,688 - #44 x
INFO  16:53:23,688 - #31 <
INFO  16:53:23,688 - #44 size
INFO  16:53:23,688 - #7 )
INFO  16:53:23,689 - #3 {
INFO  16:53:23,689 - #44 val
INFO  16:53:23,689 - #47 .
ERROR 16:53:23,689 - Uspesan oporavak od greske u logickom iskazu if naredbe, line : 50
INFO  16:53:23,689 - #44 putp
INFO  16:53:23,689 - #6 (
INFO  16:53:23,689 - #44 val
INFO  16:53:23,689 - #47 .
INFO  16:53:23,689 - #44 getp
INFO  16:53:23,689 - #6 (
INFO  16:53:23,689 - #44 x
INFO  16:53:23,689 - #7 )
INFO  16:53:23,689 - #11 +
INFO  16:53:23,690 - #44 Num
INFO  16:53:23,690 - #47 .
INFO  16:53:23,690 - #44 ONE
INFO  16:53:23,690 - #7 )
INFO  16:53:23,690 - #5 ;
INFO  16:53:23,690 - #4 }
INFO  16:53:23,690 - #46 else
INFO  16:53:23,690 - #45 if
INFO  16:53:23,690 - #6 (
INFO  16:53:23,691 - #25 -
INFO  16:53:23,691 - #44 size
INFO  16:53:23,691 - #31 <
INFO  16:53:23,691 - #44 x
INFO  16:53:23,691 - #33 &&
INFO  16:53:23,691 - #44 x
INFO  16:53:23,691 - #31 <
INFO  16:53:23,691 - #43 0
INFO  16:53:23,691 - #7 )
INFO  16:53:23,692 - #3 {
INFO  16:53:23,692 - #44 val
INFO  16:53:23,692 - #47 .
INFO  16:53:23,692 - #44 putn
INFO  16:53:23,692 - #6 (
INFO  16:53:23,692 - #44 val
INFO  16:53:23,692 - #47 .
INFO  16:53:23,692 - #44 getn
INFO  16:53:23,692 - #6 (
INFO  16:53:23,692 - #25 -
INFO  16:53:23,692 - #44 x
INFO  16:53:23,692 - #7 )
INFO  16:53:23,692 - #11 +
INFO  16:53:23,692 - #43 1
INFO  16:53:23,692 - #7 )
INFO  16:53:23,692 - #5 ;
INFO  16:53:23,692 - #4 }
INFO  16:53:23,693 - #14 read
INFO  16:53:23,693 - #6 (
INFO  16:53:23,693 - #44 x
INFO  16:53:23,693 - #7 )
INFO  16:53:23,693 - #5 ;
INFO  16:53:23,693 - #4 }
INFO  16:53:23,693 - #4 }
INFO  16:53:23,693 - #4 }
