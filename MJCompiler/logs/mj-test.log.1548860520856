INFO  16:01:39,920 - Compiling source file: D:\faks\milos\4 god 1 sem\pp1\projekat\projekateclipse\MJCompiler\program.mj
INFO  16:01:40,025 - #2 program
INFO  16:01:40,025 - #44 P
INFO  16:01:40,026 - #24 const
INFO  16:01:40,029 - #44 int
INFO  16:01:40,029 - #44 size
INFO  16:01:40,030 - #12 =
INFO  16:01:40,030 - #43 10
INFO  16:01:40,030 - #5 ;
INFO  16:01:40,030 - #21 enum
INFO  16:01:40,031 - #44 Num
INFO  16:01:40,031 - #3 {
INFO  16:01:40,031 - #44 ZERO
INFO  16:01:40,031 - #8 ,
INFO  16:01:40,031 - #44 ONE
INFO  16:01:40,031 - #8 ,
INFO  16:01:40,031 - #44 TEN
INFO  16:01:40,031 - #12 =
INFO  16:01:40,031 - #43 10
INFO  16:01:40,031 - #4 }
INFO  16:01:40,032 - #44 int
INFO  16:01:40,032 - #44 xd
INFO  16:01:40,032 - #8 ,
INFO  16:01:40,032 - #43 3
ERROR 16:01:40,032 - 
Sintaksna greska na liniji 5
INFO  16:01:40,032 - #44 y
INFO  16:01:40,032 - #5 ;
INFO  16:01:40,033 - #23 interface
INFO  16:01:40,033 - #44 I
INFO  16:01:40,033 - #3 {
ERROR 16:01:40,033 - Uspesan oporavak od greske pri definisanju globalnih promenljivih.
INFO  16:01:40,034 - #44 int
INFO  16:01:40,035 - #44 getp
INFO  16:01:40,035 - #6 (
INFO  16:01:40,035 - #44 int
INFO  16:01:40,035 - #44 i
INFO  16:01:40,035 - #7 )
INFO  16:01:40,036 - #5 ;
INFO  16:01:40,036 - #44 int
INFO  16:01:40,036 - #44 getn
INFO  16:01:40,037 - #6 (
INFO  16:01:40,037 - #44 int
INFO  16:01:40,037 - #44 i
INFO  16:01:40,037 - #7 )
INFO  16:01:40,037 - #5 ;
INFO  16:01:40,037 - #4 }
INFO  16:01:40,037 - #22 class
INFO  16:01:40,037 - #44 Table
INFO  16:01:40,037 - #20 implements
INFO  16:01:40,038 - #44 I
INFO  16:01:40,039 - #3 {
INFO  16:01:40,039 - #44 int
INFO  16:01:40,039 - #44 pos
INFO  16:01:40,039 - #37 [
INFO  16:01:40,039 - #38 ]
INFO  16:01:40,040 - #8 ,
INFO  16:01:40,040 - #44 neg
INFO  16:01:40,040 - #37 [
INFO  16:01:40,040 - #38 ]
INFO  16:01:40,040 - #5 ;
INFO  16:01:40,040 - #3 {
INFO  16:01:40,040 - #13 void
INFO  16:01:40,041 - #44 putp
INFO  16:01:40,041 - #6 (
INFO  16:01:40,041 - #44 int
INFO  16:01:40,041 - #44 a
INFO  16:01:40,041 - #8 ,
INFO  16:01:40,041 - #44 int
INFO  16:01:40,041 - #44 idx
INFO  16:01:40,041 - #7 )
INFO  16:01:40,042 - #3 {
INFO  16:01:40,042 - #44 this
INFO  16:01:40,042 - #47 .
INFO  16:01:40,043 - #44 pos
INFO  16:01:40,043 - #37 [
INFO  16:01:40,043 - #44 idx
INFO  16:01:40,044 - #38 ]
INFO  16:01:40,046 - #12 =
INFO  16:01:40,046 - #44 a
INFO  16:01:40,046 - #5 ;
INFO  16:01:40,047 - #4 }
INFO  16:01:40,047 - #13 void
INFO  16:01:40,047 - #44 putn
INFO  16:01:40,048 - #6 (
INFO  16:01:40,048 - #44 int
INFO  16:01:40,048 - #44 a
INFO  16:01:40,048 - #8 ,
INFO  16:01:40,048 - #44 int
INFO  16:01:40,048 - #44 idx
INFO  16:01:40,048 - #7 )
INFO  16:01:40,048 - #3 {
INFO  16:01:40,048 - #44 this
INFO  16:01:40,048 - #47 .
INFO  16:01:40,048 - #44 neg
INFO  16:01:40,048 - #37 [
INFO  16:01:40,048 - #44 idx
INFO  16:01:40,048 - #38 ]
INFO  16:01:40,049 - #12 =
INFO  16:01:40,049 - #44 a
INFO  16:01:40,049 - #5 ;
INFO  16:01:40,049 - #4 }
INFO  16:01:40,049 - #44 int
INFO  16:01:40,049 - #44 getp
INFO  16:01:40,049 - #6 (
INFO  16:01:40,049 - #44 int
INFO  16:01:40,049 - #44 idx
INFO  16:01:40,049 - #7 )
INFO  16:01:40,049 - #3 {
INFO  16:01:40,049 - #10 return
INFO  16:01:40,049 - #44 pos
INFO  16:01:40,050 - #37 [
INFO  16:01:40,050 - #44 idx
INFO  16:01:40,050 - #38 ]
INFO  16:01:40,050 - #5 ;
INFO  16:01:40,050 - #4 }
INFO  16:01:40,050 - #44 int
INFO  16:01:40,050 - #44 getn
INFO  16:01:40,050 - #6 (
INFO  16:01:40,050 - #44 int
INFO  16:01:40,050 - #44 idx
INFO  16:01:40,051 - #7 )
INFO  16:01:40,051 - #3 {
INFO  16:01:40,051 - #10 return
INFO  16:01:40,051 - #44 neg
INFO  16:01:40,055 - #37 [
INFO  16:01:40,055 - #44 idx
INFO  16:01:40,055 - #38 ]
INFO  16:01:40,055 - #5 ;
INFO  16:01:40,055 - #4 }
INFO  16:01:40,056 - #4 }
INFO  16:01:40,056 - #4 }
INFO  16:01:40,056 - #44 Table
INFO  16:01:40,056 - #44 val
INFO  16:01:40,056 - #5 ;
INFO  16:01:40,056 - #3 {
INFO  16:01:40,056 - #13 void
INFO  16:01:40,057 - #44 f
INFO  16:01:40,057 - #6 (
INFO  16:01:40,057 - #44 char
INFO  16:01:40,057 - #44 ch
INFO  16:01:40,057 - #8 ,
INFO  16:01:40,057 - #44 int
INFO  16:01:40,057 - #44 a
INFO  16:01:40,057 - #8 ,
INFO  16:01:40,057 - #44 int
INFO  16:01:40,057 - #44 arg
INFO  16:01:40,057 - #7 )
INFO  16:01:40,057 - #44 int
INFO  16:01:40,057 - #44 x
INFO  16:01:40,057 - #5 ;
INFO  16:01:40,057 - #3 {
INFO  16:01:40,057 - #44 x
INFO  16:01:40,057 - #12 =
INFO  16:01:40,057 - #25 -
INFO  16:01:40,057 - #44 arg
INFO  16:01:40,057 - #5 ;
INFO  16:01:40,057 - #4 }
INFO  16:01:40,057 - #13 void
INFO  16:01:40,057 - #44 main
INFO  16:01:40,057 - #6 (
INFO  16:01:40,057 - #7 )
INFO  16:01:40,058 - #44 int
INFO  16:01:40,058 - #44 x
INFO  16:01:40,058 - #8 ,
INFO  16:01:40,058 - #44 i
INFO  16:01:40,058 - #5 ;
INFO  16:01:40,058 - #44 char
INFO  16:01:40,058 - #44 c
INFO  16:01:40,058 - #5 ;
INFO  16:01:40,058 - #3 {
INFO  16:01:40,058 - #44 val
INFO  16:01:40,058 - #12 =
INFO  16:01:40,058 - #19 new
INFO  16:01:40,058 - #44 Table
INFO  16:01:40,058 - #5 ;
INFO  16:01:40,059 - #44 val
INFO  16:01:40,059 - #47 .
INFO  16:01:40,059 - #44 pos
INFO  16:01:40,059 - #12 =
INFO  16:01:40,059 - #19 new
INFO  16:01:40,059 - #44 int
INFO  16:01:40,059 - #37 [
INFO  16:01:40,059 - #44 size
INFO  16:01:40,059 - #38 ]
INFO  16:01:40,059 - #5 ;
INFO  16:01:40,059 - #44 val
INFO  16:01:40,059 - #47 .
INFO  16:01:40,059 - #44 neg
INFO  16:01:40,059 - #12 =
INFO  16:01:40,060 - #19 new
INFO  16:01:40,060 - #44 int
INFO  16:01:40,060 - #37 [
INFO  16:01:40,060 - #44 size
INFO  16:01:40,060 - #38 ]
INFO  16:01:40,060 - #5 ;
INFO  16:01:40,060 - #16 for
INFO  16:01:40,060 - #6 (
INFO  16:01:40,060 - #44 i
INFO  16:01:40,060 - #12 =
INFO  16:01:40,060 - #43 0
INFO  16:01:40,060 - #5 ;
INFO  16:01:40,060 - #44 i
INFO  16:01:40,060 - #31 <
INFO  16:01:40,060 - #44 size
INFO  16:01:40,061 - #5 ;
INFO  16:01:40,062 - #44 i
INFO  16:01:40,062 - #35 ++
INFO  16:01:40,062 - #7 )
INFO  16:01:40,063 - #3 {
INFO  16:01:40,063 - #44 val
INFO  16:01:40,063 - #47 .
INFO  16:01:40,063 - #44 putp
INFO  16:01:40,063 - #6 (
INFO  16:01:40,063 - #43 0
INFO  16:01:40,063 - #8 ,
INFO  16:01:40,064 - #44 i
INFO  16:01:40,064 - #7 )
INFO  16:01:40,064 - #5 ;
INFO  16:01:40,064 - #44 val
INFO  16:01:40,064 - #47 .
INFO  16:01:40,065 - #44 putn
INFO  16:01:40,065 - #6 (
INFO  16:01:40,065 - #43 0
INFO  16:01:40,065 - #8 ,
INFO  16:01:40,065 - #44 i
INFO  16:01:40,065 - #7 )
INFO  16:01:40,065 - #5 ;
INFO  16:01:40,065 - #4 }
INFO  16:01:40,065 - #44 f
INFO  16:01:40,065 - #6 (
INFO  16:01:40,065 - #44 c
INFO  16:01:40,065 - #8 ,
INFO  16:01:40,065 - #44 x
INFO  16:01:40,066 - #8 ,
INFO  16:01:40,066 - #44 i
INFO  16:01:40,066 - #7 )
INFO  16:01:40,066 - #5 ;
INFO  16:01:40,066 - #14 read
INFO  16:01:40,066 - #6 (
INFO  16:01:40,066 - #44 x
INFO  16:01:40,066 - #7 )
INFO  16:01:40,066 - #5 ;
INFO  16:01:40,066 - #16 for
INFO  16:01:40,066 - #6 (
INFO  16:01:40,066 - #5 ;
INFO  16:01:40,067 - #44 x
INFO  16:01:40,067 - #29 >
INFO  16:01:40,067 - #43 0
INFO  16:01:40,067 - #5 ;
INFO  16:01:40,067 - #7 )
INFO  16:01:40,067 - #3 {
INFO  16:01:40,067 - #45 if
INFO  16:01:40,067 - #6 (
INFO  16:01:40,067 - #44 Num
INFO  16:01:40,067 - #47 .
INFO  16:01:40,068 - #44 ZERO
INFO  16:01:40,068 - #32 <=
INFO  16:01:40,068 - #44 x
INFO  16:01:40,069 - #33 &&
INFO  16:01:40,069 - #44 x
INFO  16:01:40,069 - #31 <
INFO  16:01:40,069 - #44 size
INFO  16:01:40,069 - #7 )
INFO  16:01:40,069 - #3 {
INFO  16:01:40,069 - #44 val
INFO  16:01:40,069 - #47 .
INFO  16:01:40,069 - #44 putp
INFO  16:01:40,069 - #6 (
INFO  16:01:40,069 - #44 val
INFO  16:01:40,069 - #47 .
INFO  16:01:40,069 - #44 getp
INFO  16:01:40,070 - #6 (
INFO  16:01:40,070 - #44 x
INFO  16:01:40,070 - #7 )
INFO  16:01:40,070 - #11 +
INFO  16:01:40,070 - #44 Num
INFO  16:01:40,070 - #47 .
INFO  16:01:40,071 - #44 ONE
INFO  16:01:40,071 - #7 )
INFO  16:01:40,071 - #5 ;
INFO  16:01:40,071 - #4 }
INFO  16:01:40,071 - #46 else
INFO  16:01:40,071 - #45 if
INFO  16:01:40,071 - #6 (
INFO  16:01:40,071 - #25 -
INFO  16:01:40,071 - #44 size
INFO  16:01:40,071 - #31 <
INFO  16:01:40,071 - #44 x
INFO  16:01:40,071 - #33 &&
INFO  16:01:40,071 - #44 x
INFO  16:01:40,071 - #31 <
INFO  16:01:40,071 - #43 0
INFO  16:01:40,072 - #7 )
INFO  16:01:40,072 - #3 {
INFO  16:01:40,072 - #44 val
INFO  16:01:40,072 - #47 .
INFO  16:01:40,072 - #44 putn
INFO  16:01:40,072 - #6 (
INFO  16:01:40,072 - #44 val
INFO  16:01:40,072 - #47 .
INFO  16:01:40,072 - #44 getn
INFO  16:01:40,072 - #6 (
INFO  16:01:40,072 - #25 -
INFO  16:01:40,072 - #44 x
INFO  16:01:40,072 - #7 )
INFO  16:01:40,072 - #11 +
INFO  16:01:40,073 - #43 1
INFO  16:01:40,073 - #7 )
INFO  16:01:40,073 - #5 ;
INFO  16:01:40,073 - #4 }
INFO  16:01:40,073 - #14 read
INFO  16:01:40,073 - #6 (
INFO  16:01:40,073 - #44 x
INFO  16:01:40,073 - #7 )
INFO  16:01:40,074 - #5 ;
INFO  16:01:40,074 - #4 }
INFO  16:01:40,074 - #4 }
INFO  16:01:40,074 - #4 }
